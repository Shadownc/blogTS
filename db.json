{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/vueerror.jpg","path":"images/vueerror.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/shadow_qrcode.jpg","path":"assets/images/shadow_qrcode.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/logo.jpg","path":"assets/images/logo.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1531894109161},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1531894109161},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1531894109161},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1531894109204},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1531894109205},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1531894109205},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1531894109205},{"_id":"themes/next/README.cn.md","hash":"87950c415dd162ff78e98b41f1148b85462103e2","modified":1531894109227},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1531894109219},{"_id":"themes/next/README.md","hash":"927f82cfeb5969a89b815b5ec3a3f2881e3b1bb4","modified":1531894109242},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1531894109212},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1531894109255},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1531894109206},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1531894109261},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1531894109540},{"_id":"source/_posts/Docker部署-DaoCloud.md","hash":"f1cb8345a4a6168717088be96827f880f22f17f3","modified":1535684161172},{"_id":"source/_posts/HTTP错误状态码.md","hash":"46b907b84ebf8a907ec401f066307333d77cb729","modified":1535692864537},{"_id":"source/_posts/Vue循序渐进.md","hash":"e47bb4bc1f097a0539d56b78cd348a61f0eee390","modified":1535692615842},{"_id":"themes/next/_config.yml","hash":"58487e871e0a9713c628e5f4e1280e854b0d7b09","modified":1532400808809},{"_id":"source/_posts/Vue疑难杂症.md","hash":"86c3f40c6a495310fb2fb3113e5ee2f3a3c69982","modified":1535692582556},{"_id":"source/_posts/export和exportDefault区别.md","hash":"e0d489b7ad66dc1a0c884a5125da99d8c463e4af","modified":1535692932531},{"_id":"source/_posts/git操作遇到的问题.md","hash":"f11ef5d1d6ab7a23383dc1c2550ec45a4b8cdc1e","modified":1531987487458},{"_id":"source/_posts/hello-world.md","hash":"c441bc9fe6ca781519aa799466508a84fc8abaf1","modified":1535692896253},{"_id":"source/_posts/express-mongodb写接口遇坑.md","hash":"c6c31a64834171f2886d957b7961c4cc0c1d9019","modified":1535685165674},{"_id":"source/_posts/git操作-github.md","hash":"fa207ed0cec37dec4e43c5f1d103eb83a4601262","modified":1531894161264},{"_id":"source/_posts/linux服务器配置-node环境.md","hash":"064b41d99cde7372fc5fa7ff58e69ce2a71a84c5","modified":1535692844085},{"_id":"source/_posts/js踩坑IE8.md","hash":"b5f89a12425576b415ee166b6c6bd30865edb8f7","modified":1535690884049},{"_id":"source/_posts/nodejs搭建简易脚手架遇到得坑.md","hash":"04c27c9e9d33c0da902e8e6d71391f686b3f0bc6","modified":1535692827851},{"_id":"source/_posts/nodejs批量修改文件名.md","hash":"75f7e95e31e39a532d082b5c71ca77f16ee38cf4","modified":1535692777730},{"_id":"source/_posts/return和returnFalse的区别.md","hash":"b7692b79680963d941941c14df5d141d8e5b7f13","modified":1535692754297},{"_id":"source/_posts/travis-ci配置.md","hash":"2f13018c1d61c4837ac12e9b1fa2575b1334df2f","modified":1535692729489},{"_id":"source/_posts/关于最新版vue-cli.md","hash":"5bbf59a796256a8254dd7349e98e007bcee7d4f9","modified":1535692384138},{"_id":"source/_posts/vue点击空白处隐藏.md","hash":"cd4d50e69e268c363e985dc86c4fa480c5c9b51c","modified":1535692685426},{"_id":"source/_posts/常用方法封装.md","hash":"e9454777013220ec9a5e431589d758eb3a0523f1","modified":1531894161598},{"_id":"source/_posts/分秒倒计时.md","hash":"f0d04922508da7ff905c6e647619f1a9b4762b73","modified":1535692980779},{"_id":"source/_posts/关于Vuex.md","hash":"830e4a327b25ccd21b2d03eea2769240a2639a27","modified":1535692406159},{"_id":"source/_posts/判断是否滚动到底部.md","hash":"f3520faf050eebe0ee0c03746d3f7344726f36fd","modified":1535692311308},{"_id":"source/_posts/vue-transition.md","hash":"4b51e87f2ede5190f3b782a1154184c32c13b9fe","modified":1535692511602},{"_id":"source/_posts/正则Collect.md","hash":"3f96e7091441e054f44a874fc3bd5f4caefcaa16","modified":1535692270596},{"_id":"source/_posts/自动部署远程服务器-Vue.md","hash":"839aedeef90bd9c7d3e2802bc3e2e29709537fee","modified":1535685181225},{"_id":"source/categories/index.md","hash":"e88de07788348a4cc294cf047e98cb59fdb870d8","modified":1531894109159},{"_id":"source/tags/index.md","hash":"a274c3ac9c8213bd73ad4adfbd42457b13f5cf67","modified":1531894109160},{"_id":"source/_posts/服务器部署vue-nginx配置.md","hash":"3f57ef15a9a7274724cbdb42ccda1eb3c40488a8","modified":1535692477842},{"_id":"source/_posts/记一些开发中遇到得问题.md","hash":"84853240375ae2bbba8d0ecf36ef707e95deb465","modified":1535692341545},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1531894109540},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1531894109547},{"_id":"source/images/vueerror.jpg","hash":"2593855e9356416c40bd72c50d3d34d7fbe1f185","modified":1531894113309},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1531894109867},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1531894109162},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1531894109875},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1531894109885},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1531894109198},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1531894109378},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1531894109183},{"_id":"themes/next/layout/archive.swig","hash":"e6d009d9a5e4bd0e7b92cab4c7656b1b4d0621d3","modified":1531894112939},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1531894109170},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1531894109531},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1531894109530},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1531894109539},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1531894109539},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1531894109538},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1531894109538},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1531894109281},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1531894109278},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1531894109305},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1531894109295},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1531894109270},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1531894109286},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1531894109309},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1531894109319},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1531894109326},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1531894109332},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1531894109337},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1531894109340},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1531894109357},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109764},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1531894109349},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1531894109366},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1531894109372},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1531894109548},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1531894109548},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1531894109556},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1531894109557},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1531894109562},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1531894109563},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1531894109563},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1531894109564},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1531894109573},{"_id":"source/assets/images/shadow_qrcode.jpg","hash":"57d853d9e178afb0078a3a15f5d64f250a597b5a","modified":1531894146602},{"_id":"source/assets/images/logo.jpg","hash":"6dc1c6efffe42356e7e19de3b7b32d4fb417d4dc","modified":1531894096322},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1531894109764},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1531894109766},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1531894109766},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1531894109767},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1531894109767},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1531894109766},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1531894109768},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1531894109767},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1531894109768},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1531894109769},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1531894109769},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1531894109769},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1531894109764},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1531894109770},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1531894109768},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1531894109770},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1531894109373},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1531894109373},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1531894109443},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1531894109444},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1531894109763},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1531894109765},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1531894109768},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1531894109379},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1531894109390},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1531894109379},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1531894109397},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1531894109509},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1531894109510},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1531894109453},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1531894109510},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1531894109511},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1531894109510},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1531894109512},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1531894109390},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1531894109396},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1531894109512},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1531894109436},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1531894109436},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1531894109437},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1531894109401},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1531894109435},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1532400484585},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1531894109410},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109712},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109712},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109714},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109758},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109763},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109445},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531894109445},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1531894109711},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1531894109781},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1515741450212},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1515741450212},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1531894109786},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1531894109785},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1531894109772},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1531894109770},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1531894109772},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1531894109773},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1531894109771},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1531894109773},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1531894109773},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1531894109772},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1531894109775},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1531894109832},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1531894109712},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1531894109774},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1531894109713},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1531894109794},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1531894109795},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1531894109774},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1531894109807},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1531894109713},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1531894109807},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1531894109833},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1531894109845},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1531894109843},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1531894109845},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1531894109848},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1531894109848},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1531894109849},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1531894109850},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1531894109758},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1531894109847},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1531894109758},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1531894109761},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1531894109762},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1531894109855},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1531894109817},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1531894109818},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1531894109819},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1531894109819},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1531894109855},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1531894109816},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1531894109850},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1531894109851},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1531894109851},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1531894109852},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1531894109852},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1531894109851},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1531894109853},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1531894109852},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1531894109853},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1531894109853},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1531894109854},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1531894109854},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1531894109444},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1531894109445},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1531894109446},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1531894109854},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1531894109862},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1531894109854},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1531894109862},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1531894109856},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1531894109865},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1531894109523},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1531894109454},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1531894109470},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1531894109471},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1531894109471},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1531894109472},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1531894109866},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1531894109476},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1531894109477},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1531894109476},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1531894109480},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1531894109480},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1531894109459},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1531894109421},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1531894109866},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1531894109437},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1531894109438},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1531894109438},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1531894109480},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1531894109481},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1531894109491},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1531894109492},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1531894109492},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1531894109508},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1531894109425},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1531894109508},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1531894109509},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1531894109513},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1531894109493},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1531894109499},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1531894109439},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1531894109508},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1531894109523},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1531894109441},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1531894109441},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1531894109833},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1531894109442},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1531894109522},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1531894109725},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1531894109725},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1531894109729},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1531894109729},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1531894109730},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1531894109779},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1531894109718},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1531894109687},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1531894109731},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1531894109780},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1531894109749},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1531894109778},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1531894109756},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1531894109719},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1531894109756},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1531894109720},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1531894109748},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1531894109721},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1531894109721},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1531894109747},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1531894109722},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1531894109721},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1531894109694},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1531894109720},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1531894109695},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1531894109710},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1531894109774},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1531894109709},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1531894109815},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1531894109861},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1531894109700},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1531894109816},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1531894109574},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1531894109710},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1531894109576},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1531894109575},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1531894109575},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1531894109637},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1531894109574},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1531894109611},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1531894109861},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1531894109786},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1531894109786},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1531894109787},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1531894109788},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1531894109788},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1531894109793},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1531894109793},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1531894109792},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1531894109787},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1531894109820},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1531894109821},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1531894109820},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1531894109779},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1531894109513},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1531894109865},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1531894109513},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1531894109730},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1531894109723},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1531894109723},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1531894109576},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1531894109577},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1531894109577},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1531894109578},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1531894109588},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1531894109577},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1531894109606},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1531894109606},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1531894109831},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1531894109607},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1531894109607},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1531894109601},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1531894109605},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1531894109776},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1531894109610},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1531894109638},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1531894109638},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1531894109639},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1531894109777},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1531894109640},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1531894109639},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1531894109655},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1531894109776},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1531894109660},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1531894109661},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1531894109611},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1531894109616},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1531894109617},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1531894109616},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1531894109777},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1531894109654},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1531894109618},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1531894109619},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1531894109619},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1531894109620},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1531894109620},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1531894109617},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1531894109622},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1531894109621},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1531894109631},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1531894109823},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1531894109825},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1531894109789},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1531894109620},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1531894109621},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1531894109830},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1531894109776},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1531894109791},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1531894109578},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1531894109790},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1531894109664},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1531894109663},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1531894109664},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1531894109791},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1531894109673},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1531894109674},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1531894109674},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1531894109673},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1531894109831},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1531894109684},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1531894109686},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1531894109686},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1531894109632},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1531894109633},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1531894109633},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1531894109632},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1531894109634},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1531894109790},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1531894109791},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1531894109635},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1531894109635},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1531894109637},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1531894109636},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1531894109636},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1531894109784},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1531894109860},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1531894109828},{"_id":"public/categories/index.html","hash":"9cd8f9d01fc4bcd6213a01db5bbad80b669935fa","modified":1535684046577},{"_id":"public/tags/index.html","hash":"4a8211c47afeb3cbcf6a7208c20bc66b3681c718","modified":1535684046580},{"_id":"public/archives/2018/03/index.html","hash":"9e2f6680f65e6e0bac1e77f75f0984e24e67b5d7","modified":1535684046581},{"_id":"public/archives/2018/04/index.html","hash":"120b10c412bfe71275012289d4cc33249ecdb116","modified":1535684046581},{"_id":"public/archives/2018/05/index.html","hash":"36a7f9fb5a8e90515f868147c0cdebc9335b0ab0","modified":1535684046581},{"_id":"public/archives/2018/06/index.html","hash":"32c898de2ffc4bb01970fed31ce0bdc51b00b491","modified":1535684046581},{"_id":"public/categories/node/index.html","hash":"4e4879a9cfbed12657219e598bc6e010a4d90407","modified":1535684046581},{"_id":"public/categories/JavaScript/index.html","hash":"eaf8dd2b408db6df5f0b687de64cd628ffd9937d","modified":1535684046581},{"_id":"public/categories/Vue/index.html","hash":"9b4213cdf485e3a89a954937a481acc480be4847","modified":1535684046581},{"_id":"public/categories/git/index.html","hash":"54954f6dfd24529dca0dc482d4215e1029a83116","modified":1535684046581},{"_id":"public/categories/ES6/index.html","hash":"e9cc65b3e06efdeaf5f1f195c7852f03f99f1197","modified":1535684046581},{"_id":"public/archives/2018/01/index.html","hash":"4719974595071c7f828270d969f349ddc6c3b898","modified":1535684046581},{"_id":"public/tags/JavaScript/index.html","hash":"d1df0c2171eb7c49a9f3050727c4d6743788752f","modified":1535684046581},{"_id":"public/tags/ES6/index.html","hash":"45fba3402786d74179fab27e06980305242401f1","modified":1535684046582},{"_id":"public/tags/Vue/index.html","hash":"f5f0970840db752fcfad723b22d28420ab10d04c","modified":1535684046582},{"_id":"public/tags/git/index.html","hash":"49b776c86d23e21f8ccb17864ed9d2866fc5bfcc","modified":1535684046582},{"_id":"public/tags/node/index.html","hash":"e51e164938df1b9bfa1b41c0aac954e82b3cbc67","modified":1535684046582},{"_id":"public/2018/08/04/自动部署远程服务器-Vue/index.html","hash":"2a9d34e2e28440d9b3eff39fb26ddabfbc00f9a5","modified":1535685229079},{"_id":"public/2018/08/03/Docker部署-DaoCloud/index.html","hash":"b47b4eb9d44cfb79cf2e6339d25da23d9a98281f","modified":1535684251998},{"_id":"public/2018/06/15/记一些开发中遇到得问题/index.html","hash":"7832b31e59eadb27cbf752531a542aa85e5129ec","modified":1535693001614},{"_id":"public/2018/06/28/export和exportDefault区别/index.html","hash":"8605de3ab95f6ce7578b51874b2a6e28a53f47ba","modified":1535693001614},{"_id":"public/2018/06/14/nodejs搭建简易脚手架遇到得坑/index.html","hash":"22582eec83c6f4b744c760251672ac29e2b8c6e3","modified":1535693001614},{"_id":"public/2018/05/16/return和returnFalse的区别/index.html","hash":"846ebddd5366e093f48503808db698ee6bd68114","modified":1535693001614},{"_id":"public/2018/05/08/git操作遇到的问题/index.html","hash":"219439f68364a268b76135fb4a09e43de687848f","modified":1535684046582},{"_id":"public/2018/04/26/Vue疑难杂症/index.html","hash":"34d826926ea162db321d315d1f4ded6b5c8571e2","modified":1535693001614},{"_id":"public/2018/04/12/js踩坑IE8/index.html","hash":"7e0bae880723bb116f24509767326c4aa6d2488c","modified":1535693001614},{"_id":"public/2018/05/11/分秒倒计时/index.html","hash":"9ce28aa4c63b24d3f2ad8bf2354f41fc1055f5ce","modified":1535693001614},{"_id":"public/2018/03/15/vue点击空白处隐藏/index.html","hash":"76e15c21e298a51c94d623a7414028604c8cdc5e","modified":1535693001614},{"_id":"public/2018/03/15/常用方法封装/index.html","hash":"27e94bb20bd227387a4b0206adf6a18a85c96af0","modified":1535684046583},{"_id":"public/2018/03/12/HTTP错误状态码/index.html","hash":"cde074bb08e91b1d2d847a95713459d24aa12cb1","modified":1535693001614},{"_id":"public/2018/03/02/vue-transition/index.html","hash":"2d96f5525108dc6b8d7903f9175a1007021a6198","modified":1535693001615},{"_id":"public/2018/03/06/nodejs批量修改文件名/index.html","hash":"bf25306b83e22afc10836ffd507cec568ed0f5ca","modified":1535693001614},{"_id":"public/2018/01/29/正则Collect/index.html","hash":"10fc513813e6b6344200d6349c5f281d18d9aa77","modified":1535693001615},{"_id":"public/2018/01/17/关于Vuex/index.html","hash":"0098118dcf8039a513b7ea676d685a4ac441f47c","modified":1535693001615},{"_id":"public/2018/01/15/关于最新版vue-cli/index.html","hash":"e0b77eac6e8a42f4ca95f9b36fb8ea7119f6e805","modified":1535693001613},{"_id":"public/2018/01/11/git操作-github/index.html","hash":"35395226bde2b32218b0270d10ebe9793c878cd6","modified":1535684046584},{"_id":"public/2018/01/08/Vue循序渐进/index.html","hash":"7f67fad4c64376e07585777688d61a748ec6d19a","modified":1535693001615},{"_id":"public/2018/01/08/hello-world/index.html","hash":"5bb134962247b898e9ffc314279187c703e9a4c6","modified":1535693001615},{"_id":"public/2018/03/01/判断是否滚动到底部/index.html","hash":"a20923386050cf99eff1b4ebee088ee941af19a3","modified":1535693001614},{"_id":"public/archives/index.html","hash":"147e93582159f54983effde0a44b3ea47c86a81e","modified":1535684046584},{"_id":"public/archives/page/2/index.html","hash":"afa8d25a4d285b8d537048ffd95891bbc3add309","modified":1535684046584},{"_id":"public/archives/2018/index.html","hash":"d7f80a7d559e1582110ac75606482216f7ecb50f","modified":1535684046584},{"_id":"public/archives/2018/page/2/index.html","hash":"9921b89f595826e358014753260dcc30ded3f769","modified":1535684046584},{"_id":"public/index.html","hash":"4bdf90148d0c3d8025ed7a15cd5ba385f9f9981d","modified":1535693001615},{"_id":"public/page/2/index.html","hash":"d66e24e354c3ae87c7cf11bd42c2b61aacac3cea","modified":1535693001615},{"_id":"public/archives/page/3/index.html","hash":"60b0c027d0e3422f718c8f08a92c9c387344d321","modified":1535684046591},{"_id":"public/archives/2018/07/index.html","hash":"3838c77fbf87ebfa3ee5d90941f9b65228f1a008","modified":1535684046591},{"_id":"public/archives/2018/08/index.html","hash":"bd4d937bb3d9beece4153d572203f6c0420f58c6","modified":1535684046591},{"_id":"public/archives/2018/page/3/index.html","hash":"e3e70bd119162bfa85310472f9f6a75d7f584b23","modified":1535684046591},{"_id":"public/2018/08/01/服务器部署vue-nginx配置/index.html","hash":"cfc12d758eccc84c92307c0e7da9d8f56bec166a","modified":1535693001598},{"_id":"public/2018/07/27/linux服务器配置-node环境/index.html","hash":"a997501525e4b6f78e393014417b7ba8f81f0bd2","modified":1535693001614},{"_id":"public/2018/07/18/travis-ci配置/index.html","hash":"dd0c878c0f652c063bff8e9f226fb86a91d710e3","modified":1535693001613},{"_id":"public/2018/08/01/express-mongodb写接口遇坑/index.html","hash":"d57554ebafe5ef59482a015f07b09da24b6781a8","modified":1535685229096},{"_id":"public/page/3/index.html","hash":"c9e2282eb75c7d17adc949831775af5c7c81c99c","modified":1535693001615},{"_id":"public/assets/images/shadow_qrcode.jpg","hash":"57d853d9e178afb0078a3a15f5d64f250a597b5a","modified":1535684046592},{"_id":"public/assets/images/logo.jpg","hash":"6dc1c6efffe42356e7e19de3b7b32d4fb417d4dc","modified":1535684046592},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1535684046592},{"_id":"public/images/vueerror.jpg","hash":"2593855e9356416c40bd72c50d3d34d7fbe1f185","modified":1535684046592},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1535684046592},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1535684046592},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1535684046592},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1535684046592},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1535684046592},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1535684046592},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535684046594},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1535684046594},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1535684046594},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535684046594},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1535684046594},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535684046594},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535684046595},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535684046595},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535684046595},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535684046595},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1535684046595},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1535684046595},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1535684046595},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535684046595},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535684046595},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535684046595},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535684046596},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535684046596},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535684046596},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1535684046596},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535684046596},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535684046596},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535684046596},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535684046596},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535684046596},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535684046596},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535684048429},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535684048435},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535684048442},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535684048442},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535684048442},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535684048442},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535684048442},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535684048442},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535684048442},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535684048442},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535684048442},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535684048442},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535684048442},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535684048442},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535684048442},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535684048442},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1535684048442},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1535684048442},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1535684048442},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535684048442},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1535684048442},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1535684048443},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535684048443},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535684048443},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535684048443},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535684048443},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535684048443},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535684048443},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535684048443},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535684048443},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535684048443},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535684048444},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535684048444},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535684048444},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535684048444},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535684048444},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535684048444},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535684048444},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535684048444},{"_id":"public/css/main.css","hash":"2f18b34101ba1c52324ec3025d695733fe87bc73","modified":1535684048444},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535684048444},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535684048444},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535684048444},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535684048444},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535684048444},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535684048445},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535684048445},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535684048445},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535684048445},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535684048445},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535684048445},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535684048445},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535684048445},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535684048445},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535684048445},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535684048445},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535684048445},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535684048446},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535684048446},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535684048446},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535684048451},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535684048451},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535684048451},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1535684049048}],"Category":[{"name":"node","_id":"cjlhemj4d0002ponuqasu119q"},{"name":"JavaScript","_id":"cjlhemj4k0007ponuxywvqxw2"},{"name":"Vue","_id":"cjlhemj4t000dponul8ongsto"},{"name":"ES6","_id":"cjlhemj52000nponurdjgqane"},{"name":"git","_id":"cjlhemj56000sponutnxnveri"}],"Data":[],"Page":[{"title":"categories","date":"2018-01-12T08:34:51.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-01-12 16:34:51\ntype: \"categories\"\n---\n","updated":"2018-07-18T06:08:29.159Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjlhemj95000zponu823jwqqn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-01-12T08:31:50.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-01-12 16:31:50\ntype: \"tags\"\n---\n","updated":"2018-07-18T06:08:29.160Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjlhemj980011ponuivngmmjj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker部署--DaoCloud","date":"2018-08-03T04:34:32.000Z","_content":"Docker基于DaoCloud持续集成自动化部署nodejs后端api教程\n<!-- more -->\n##### linux安装docker\n`curl https://releases.rancher.com/install-docker/17.12.sh | sh`\n##### DockerFile\n```JavaScript\n# 基础镜像为node，版本为v8.9.3\nFROM node:8.9.3\n# 镜像作者，可以附加联系信息\nMAINTAINER shadow\n\n# 创建容器内的项目存放目录\nRUN mkdir -p /srv/api\n#切换工作目录\nWORKDIR /srv/api\n\n#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖\nCOPY package.json /srv/api\nRUN npm install\nCOPY . /srv/api\n\n# 容器对外暴露的端口号，要和node项目配置的端口号一致\nEXPOSE 3000\n\n# 容器启动时执行的命令\nENTRYPOINT [\"node\",\"index.js\"]\n```\n##### nodejs MongoDB连接问题\n```JavaScript\n//首选，从docker hub仓库拉取一个镜像\ndocker pull mongo\n//启动容器\ndocker run --name=mongoDev  -p 27017:27017 -v $PWD/usr/local/mongodb/data/db:/data/db -d 63c6b736e399\n--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:27017)\n#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399\n#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器\n 命令说明： \n-d后面的一串数字:docker images 查看Image ID\n–name：容器的名称 \n-p: 端口映射，将容器的端口，映射到主机上 \n-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录\n$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 \n-d：后台运行 \n其他命令： \n-e 设置环境变量，与在dockerfile env设置相同效果\n```\n##### docker命令\n```JavaScript\ndocker ps --查看新启动的容器是否正常启动。\ndocker ps -a --显示所有的容器，包括未运行的。\ndocker rm [NAMES] --删除容器。\ndocker start/restart [NAMES] --启动或重新启动已存在的容器。\n```\n","source":"_posts/Docker部署-DaoCloud.md","raw":"---\ntitle: Docker部署--DaoCloud\ndate: 2018-08-03 12:34:32\ncategories:\n- node\ntags:\n- node\n---\nDocker基于DaoCloud持续集成自动化部署nodejs后端api教程\n<!-- more -->\n##### linux安装docker\n`curl https://releases.rancher.com/install-docker/17.12.sh | sh`\n##### DockerFile\n```JavaScript\n# 基础镜像为node，版本为v8.9.3\nFROM node:8.9.3\n# 镜像作者，可以附加联系信息\nMAINTAINER shadow\n\n# 创建容器内的项目存放目录\nRUN mkdir -p /srv/api\n#切换工作目录\nWORKDIR /srv/api\n\n#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖\nCOPY package.json /srv/api\nRUN npm install\nCOPY . /srv/api\n\n# 容器对外暴露的端口号，要和node项目配置的端口号一致\nEXPOSE 3000\n\n# 容器启动时执行的命令\nENTRYPOINT [\"node\",\"index.js\"]\n```\n##### nodejs MongoDB连接问题\n```JavaScript\n//首选，从docker hub仓库拉取一个镜像\ndocker pull mongo\n//启动容器\ndocker run --name=mongoDev  -p 27017:27017 -v $PWD/usr/local/mongodb/data/db:/data/db -d 63c6b736e399\n--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:27017)\n#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399\n#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器\n 命令说明： \n-d后面的一串数字:docker images 查看Image ID\n–name：容器的名称 \n-p: 端口映射，将容器的端口，映射到主机上 \n-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录\n$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 \n-d：后台运行 \n其他命令： \n-e 设置环境变量，与在dockerfile env设置相同效果\n```\n##### docker命令\n```JavaScript\ndocker ps --查看新启动的容器是否正常启动。\ndocker ps -a --显示所有的容器，包括未运行的。\ndocker rm [NAMES] --删除容器。\ndocker start/restart [NAMES] --启动或重新启动已存在的容器。\n```\n","slug":"Docker部署-DaoCloud","published":1,"updated":"2018-08-31T02:56:01.172Z","_id":"cjlhemj430000ponu1rbha107","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Docker基于DaoCloud持续集成自动化部署nodejs后端api教程<br><a id=\"more\"></a></p>\n<h5 id=\"linux安装docker\"><a href=\"#linux安装docker\" class=\"headerlink\" title=\"linux安装docker\"></a>linux安装docker</h5><p><code>curl https://releases.rancher.com/install-docker/17.12.sh | sh</code></p>\n<h5 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像为node，版本为v8.9.3</span><br><span class=\"line\">FROM node:<span class=\"number\">8.9</span><span class=\"number\">.3</span></span><br><span class=\"line\"># 镜像作者，可以附加联系信息</span><br><span class=\"line\">MAINTAINER shadow</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建容器内的项目存放目录</span><br><span class=\"line\">RUN mkdir -p /srv/api</span><br><span class=\"line\">#切换工作目录</span><br><span class=\"line\">WORKDIR /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\">#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖</span><br><span class=\"line\">COPY package.json /srv/api</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\">COPY . /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\"># 容器对外暴露的端口号，要和node项目配置的端口号一致</span><br><span class=\"line\">EXPOSE <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 容器启动时执行的命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"node\"</span>,<span class=\"string\">\"index.js\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"nodejs-MongoDB连接问题\"><a href=\"#nodejs-MongoDB连接问题\" class=\"headerlink\" title=\"nodejs MongoDB连接问题\"></a>nodejs MongoDB连接问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首选，从docker hub仓库拉取一个镜像</span></span><br><span class=\"line\">docker pull mongo</span><br><span class=\"line\"><span class=\"comment\">//启动容器</span></span><br><span class=\"line\">docker run --name=mongoDev  -p <span class=\"number\">27017</span>:<span class=\"number\">27017</span> -v $PWD/usr/local/mongodb/data/db:<span class=\"regexp\">/data/</span>db -d <span class=\"number\">63</span>c6b736e399</span><br><span class=\"line\">--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:<span class=\"number\">27017</span>)</span><br><span class=\"line\">#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399</span><br><span class=\"line\">#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器</span><br><span class=\"line\"> 命令说明： </span><br><span class=\"line\">-d后面的一串数字:docker images 查看Image ID</span><br><span class=\"line\">–name：容器的名称 </span><br><span class=\"line\">-p: 端口映射，将容器的端口，映射到主机上 </span><br><span class=\"line\">-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录</span><br><span class=\"line\">$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 </span><br><span class=\"line\">-d：后台运行 </span><br><span class=\"line\">其他命令： </span><br><span class=\"line\">-e 设置环境变量，与在dockerfile env设置相同效果</span><br></pre></td></tr></table></figure>\n<h5 id=\"docker命令\"><a href=\"#docker命令\" class=\"headerlink\" title=\"docker命令\"></a>docker命令</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --查看新启动的容器是否正常启动。</span><br><span class=\"line\">docker ps -a --显示所有的容器，包括未运行的。</span><br><span class=\"line\">docker rm [NAMES] --删除容器。</span><br><span class=\"line\">docker start/restart [NAMES] --启动或重新启动已存在的容器。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Docker基于DaoCloud持续集成自动化部署nodejs后端api教程<br>","more":"</p>\n<h5 id=\"linux安装docker\"><a href=\"#linux安装docker\" class=\"headerlink\" title=\"linux安装docker\"></a>linux安装docker</h5><p><code>curl https://releases.rancher.com/install-docker/17.12.sh | sh</code></p>\n<h5 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像为node，版本为v8.9.3</span><br><span class=\"line\">FROM node:<span class=\"number\">8.9</span><span class=\"number\">.3</span></span><br><span class=\"line\"># 镜像作者，可以附加联系信息</span><br><span class=\"line\">MAINTAINER shadow</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建容器内的项目存放目录</span><br><span class=\"line\">RUN mkdir -p /srv/api</span><br><span class=\"line\">#切换工作目录</span><br><span class=\"line\">WORKDIR /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\">#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖</span><br><span class=\"line\">COPY package.json /srv/api</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\">COPY . /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\"># 容器对外暴露的端口号，要和node项目配置的端口号一致</span><br><span class=\"line\">EXPOSE <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 容器启动时执行的命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"node\"</span>,<span class=\"string\">\"index.js\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"nodejs-MongoDB连接问题\"><a href=\"#nodejs-MongoDB连接问题\" class=\"headerlink\" title=\"nodejs MongoDB连接问题\"></a>nodejs MongoDB连接问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首选，从docker hub仓库拉取一个镜像</span></span><br><span class=\"line\">docker pull mongo</span><br><span class=\"line\"><span class=\"comment\">//启动容器</span></span><br><span class=\"line\">docker run --name=mongoDev  -p <span class=\"number\">27017</span>:<span class=\"number\">27017</span> -v $PWD/usr/local/mongodb/data/db:<span class=\"regexp\">/data/</span>db -d <span class=\"number\">63</span>c6b736e399</span><br><span class=\"line\">--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:<span class=\"number\">27017</span>)</span><br><span class=\"line\">#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399</span><br><span class=\"line\">#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器</span><br><span class=\"line\"> 命令说明： </span><br><span class=\"line\">-d后面的一串数字:docker images 查看Image ID</span><br><span class=\"line\">–name：容器的名称 </span><br><span class=\"line\">-p: 端口映射，将容器的端口，映射到主机上 </span><br><span class=\"line\">-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录</span><br><span class=\"line\">$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 </span><br><span class=\"line\">-d：后台运行 </span><br><span class=\"line\">其他命令： </span><br><span class=\"line\">-e 设置环境变量，与在dockerfile env设置相同效果</span><br></pre></td></tr></table></figure>\n<h5 id=\"docker命令\"><a href=\"#docker命令\" class=\"headerlink\" title=\"docker命令\"></a>docker命令</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --查看新启动的容器是否正常启动。</span><br><span class=\"line\">docker ps -a --显示所有的容器，包括未运行的。</span><br><span class=\"line\">docker rm [NAMES] --删除容器。</span><br><span class=\"line\">docker start/restart [NAMES] --启动或重新启动已存在的容器。</span><br></pre></td></tr></table></figure>"},{"title":"HTTP错误状态码","date":"2018-03-12T05:11:28.000Z","_content":"HTTP错误状态码及含义\n<!-- more -->\n``` JavaScript\n1~5开头的HTTP状态码分别是什么含义：\n1XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/1.0 协议中并没有定义1XX状态码，除非在试验条件下，服务器是禁止向客户端发送1XX响应的。\n2XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受\n3XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。\n4XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**\n5XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。\n\n200 —  表示请求成功 一切正常\n301 Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL\n302 Found —  临时重定向，类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。\n304 Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。\n400 Bad Request —  请求出现语法错误。\n403 Forbidden —  资源不可用。\n404 Not Found —  无法找到指定位置的资源。\n405 Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。\n500 Internal Server Error — 服务器遇到了意料不到的情况，不能完成客户的请求。\n501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n504 Gateway Timeout — 网关超时。\n505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。```","source":"_posts/HTTP错误状态码.md","raw":"---\ntitle: HTTP错误状态码\ndate: 2018-03-12 13:11:28\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nHTTP错误状态码及含义\n<!-- more -->\n``` JavaScript\n1~5开头的HTTP状态码分别是什么含义：\n1XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/1.0 协议中并没有定义1XX状态码，除非在试验条件下，服务器是禁止向客户端发送1XX响应的。\n2XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受\n3XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。\n4XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**\n5XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。\n\n200 —  表示请求成功 一切正常\n301 Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL\n302 Found —  临时重定向，类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。\n304 Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。\n400 Bad Request —  请求出现语法错误。\n403 Forbidden —  资源不可用。\n404 Not Found —  无法找到指定位置的资源。\n405 Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。\n500 Internal Server Error — 服务器遇到了意料不到的情况，不能完成客户的请求。\n501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n504 Gateway Timeout — 网关超时。\n505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。```","slug":"HTTP错误状态码","published":1,"updated":"2018-08-31T05:21:04.537Z","_id":"cjlhemj4a0001ponugnpr2mew","comments":1,"layout":"post","photos":[],"link":"","content":"<p>HTTP错误状态码及含义<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>~<span class=\"number\">5</span>开头的HTTP状态码分别是什么含义：</span><br><span class=\"line\"><span class=\"number\">1</span>XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/<span class=\"number\">1.0</span> 协议中并没有定义<span class=\"number\">1</span>XX状态码，除非在试验条件下，服务器是禁止向客户端发送<span class=\"number\">1</span>XX响应的。</span><br><span class=\"line\"><span class=\"number\">2</span>XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受</span><br><span class=\"line\"><span class=\"number\">3</span>XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/<span class=\"number\">1.0</span> 版规范的建议，浏览器不应自动访问超过<span class=\"number\">5</span>次的重定向。</span><br><span class=\"line\"><span class=\"number\">4</span>XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**</span><br><span class=\"line\"><span class=\"number\">5</span>XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">200</span> —  表示请求成功 一切正常</span><br><span class=\"line\"><span class=\"number\">301</span> Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL</span><br><span class=\"line\"><span class=\"number\">302</span> Found —  临时重定向，类似于<span class=\"number\">301</span>，但新的URL应该被视为临时性的替代，而不是永久性的。</span><br><span class=\"line\"><span class=\"number\">304</span> Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。</span><br><span class=\"line\"><span class=\"number\">400</span> Bad Request —  请求出现语法错误。</span><br><span class=\"line\"><span class=\"number\">403</span> Forbidden —  资源不可用。</span><br><span class=\"line\"><span class=\"number\">404</span> Not Found —  无法找到指定位置的资源。</span><br><span class=\"line\"><span class=\"number\">405</span> Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。</span><br><span class=\"line\"><span class=\"number\">500</span> Internal Server <span class=\"built_in\">Error</span> — 服务器遇到了意料不到的情况，不能完成客户的请求。</span><br><span class=\"line\"><span class=\"number\">501</span> Not Implemented — 请求未完成。服务器不支持所请求的功能。</span><br><span class=\"line\"><span class=\"number\">502</span> Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。</span><br><span class=\"line\"><span class=\"number\">503</span> Service Unavailable — 请求未完成。服务器临时过载或当机。</span><br><span class=\"line\"><span class=\"number\">504</span> Gateway Timeout — 网关超时。</span><br><span class=\"line\"><span class=\"number\">505</span> HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>HTTP错误状态码及含义<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>~<span class=\"number\">5</span>开头的HTTP状态码分别是什么含义：</span><br><span class=\"line\"><span class=\"number\">1</span>XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/<span class=\"number\">1.0</span> 协议中并没有定义<span class=\"number\">1</span>XX状态码，除非在试验条件下，服务器是禁止向客户端发送<span class=\"number\">1</span>XX响应的。</span><br><span class=\"line\"><span class=\"number\">2</span>XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受</span><br><span class=\"line\"><span class=\"number\">3</span>XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/<span class=\"number\">1.0</span> 版规范的建议，浏览器不应自动访问超过<span class=\"number\">5</span>次的重定向。</span><br><span class=\"line\"><span class=\"number\">4</span>XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**</span><br><span class=\"line\"><span class=\"number\">5</span>XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">200</span> —  表示请求成功 一切正常</span><br><span class=\"line\"><span class=\"number\">301</span> Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL</span><br><span class=\"line\"><span class=\"number\">302</span> Found —  临时重定向，类似于<span class=\"number\">301</span>，但新的URL应该被视为临时性的替代，而不是永久性的。</span><br><span class=\"line\"><span class=\"number\">304</span> Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。</span><br><span class=\"line\"><span class=\"number\">400</span> Bad Request —  请求出现语法错误。</span><br><span class=\"line\"><span class=\"number\">403</span> Forbidden —  资源不可用。</span><br><span class=\"line\"><span class=\"number\">404</span> Not Found —  无法找到指定位置的资源。</span><br><span class=\"line\"><span class=\"number\">405</span> Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。</span><br><span class=\"line\"><span class=\"number\">500</span> Internal Server <span class=\"built_in\">Error</span> — 服务器遇到了意料不到的情况，不能完成客户的请求。</span><br><span class=\"line\"><span class=\"number\">501</span> Not Implemented — 请求未完成。服务器不支持所请求的功能。</span><br><span class=\"line\"><span class=\"number\">502</span> Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。</span><br><span class=\"line\"><span class=\"number\">503</span> Service Unavailable — 请求未完成。服务器临时过载或当机。</span><br><span class=\"line\"><span class=\"number\">504</span> Gateway Timeout — 网关超时。</span><br><span class=\"line\"><span class=\"number\">505</span> HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</span><br></pre></td></tr></table></figure></p>"},{"title":"Vue循序渐进","date":"2018-01-08T07:22:23.000Z","_content":"Vue-Router获取参数判断的问题\n<!-- more -->\n#### 先来一个项目中会遇到的问题吧\n`let url='http://www.xx.com?a=1&b=true'`\n##### 在vue-router中 获取路由中的query做判断你也许会这么写。。\n```\nmounted(){\n        if(this.$route.query.b){\n          ...\n        }\n      }\n```\n\n>这里的**`this.$route.query.b`**当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到`if`中去..\n##### 如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\n```\nmounted(){\n        if((typeof this.$route.query.b!='string' &&this.$route.query.b) || (this.$route.query.b &&this.$route.query.b=='true' )){\n          ...\n        }\n      }\n```\n\n##### 算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\n![image.jpeg](http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 之前有个笔误。。。\n`this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象`","source":"_posts/Vue循序渐进.md","raw":"---\ntitle: 'Vue循序渐进'\ndate: 2018-01-08 15:22:23\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue-Router获取参数判断的问题\n<!-- more -->\n#### 先来一个项目中会遇到的问题吧\n`let url='http://www.xx.com?a=1&b=true'`\n##### 在vue-router中 获取路由中的query做判断你也许会这么写。。\n```\nmounted(){\n        if(this.$route.query.b){\n          ...\n        }\n      }\n```\n\n>这里的**`this.$route.query.b`**当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到`if`中去..\n##### 如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\n```\nmounted(){\n        if((typeof this.$route.query.b!='string' &&this.$route.query.b) || (this.$route.query.b &&this.$route.query.b=='true' )){\n          ...\n        }\n      }\n```\n\n##### 算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\n![image.jpeg](http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 之前有个笔误。。。\n`this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象`","slug":"Vue循序渐进","published":1,"updated":"2018-08-31T05:16:55.842Z","_id":"cjlhemj4f0004ponuod5kh64b","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Vue-Router获取参数判断的问题<br><a id=\"more\"></a></p>\n<h4 id=\"先来一个项目中会遇到的问题吧\"><a href=\"#先来一个项目中会遇到的问题吧\" class=\"headerlink\" title=\"先来一个项目中会遇到的问题吧\"></a>先来一个项目中会遇到的问题吧</h4><p><code>let url=&#39;http://www.xx.com?a=1&amp;b=true&#39;</code></p>\n<h5 id=\"在vue-router中-获取路由中的query做判断你也许会这么写。。\"><a href=\"#在vue-router中-获取路由中的query做判断你也许会这么写。。\" class=\"headerlink\" title=\"在vue-router中 获取路由中的query做判断你也许会这么写。。\"></a>在vue-router中 获取路由中的query做判断你也许会这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if(this.$route.query.b)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里的<strong><code>this.$route.query.b</code></strong>当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到<code>if</code>中去..</p>\n<h5 id=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"><a href=\"#如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\" class=\"headerlink\" title=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"></a>如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if((typeof this.$route.query.b!=&apos;string&apos; &amp;&amp;this.$route.query.b) || (this.$route.query.b &amp;&amp;this.$route.query.b==&apos;true&apos; ))&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h5 id=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\"><a href=\"#算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\" class=\"headerlink\" title=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\"></a>算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730</h5><p><img src=\"http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.jpeg\"></p>\n<h3 id=\"之前有个笔误。。。\"><a href=\"#之前有个笔误。。。\" class=\"headerlink\" title=\"之前有个笔误。。。\"></a>之前有个笔误。。。</h3><p><code>this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象</code></p>\n","site":{"data":{}},"excerpt":"<p>Vue-Router获取参数判断的问题<br>","more":"</p>\n<h4 id=\"先来一个项目中会遇到的问题吧\"><a href=\"#先来一个项目中会遇到的问题吧\" class=\"headerlink\" title=\"先来一个项目中会遇到的问题吧\"></a>先来一个项目中会遇到的问题吧</h4><p><code>let url=&#39;http://www.xx.com?a=1&amp;b=true&#39;</code></p>\n<h5 id=\"在vue-router中-获取路由中的query做判断你也许会这么写。。\"><a href=\"#在vue-router中-获取路由中的query做判断你也许会这么写。。\" class=\"headerlink\" title=\"在vue-router中 获取路由中的query做判断你也许会这么写。。\"></a>在vue-router中 获取路由中的query做判断你也许会这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if(this.$route.query.b)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里的<strong><code>this.$route.query.b</code></strong>当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到<code>if</code>中去..</p>\n<h5 id=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"><a href=\"#如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\" class=\"headerlink\" title=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"></a>如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if((typeof this.$route.query.b!=&apos;string&apos; &amp;&amp;this.$route.query.b) || (this.$route.query.b &amp;&amp;this.$route.query.b==&apos;true&apos; ))&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h5 id=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\"><a href=\"#算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\" class=\"headerlink\" title=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\"></a>算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730</h5><p><img src=\"http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.jpeg\"></p>\n<h3 id=\"之前有个笔误。。。\"><a href=\"#之前有个笔误。。。\" class=\"headerlink\" title=\"之前有个笔误。。。\"></a>之前有个笔误。。。</h3><p><code>this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象</code></p>"},{"title":"Vue疑难杂症","date":"2018-04-26T06:01:27.000Z","_content":"使用Vue开发项目的过程中遇到的问题及解决方法\n<!-- more -->\n本文收集群友发得问题而写...持续更新。。。\n话不多说，直接上问题与解决方法：\n1.vue-resource 处理多个请求的问题 \n**不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了**\n解决方法：\n```JavaScript\n//其实github上有源码，我就直接复制粘贴了\n this.$http.get('/someUrl', {\n\n    // use before callback\n    before(request) {\n\n      // abort previous request, if exists\n      if (this.previousRequest) {\n        this.previousRequest.abort();//中断请求\n      }\n\n      // set previous request on Vue instance\n      this.previousRequest = request;\n    }\n\n  }).then(res=> {\n    // success callback\n  }, err=> {\n    // error callback\n  });\n```\n2.组件通信(包含非父子组件)\n**最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接**\n[组件传值-Prop](https://cn.vuejs.org/v2/guide/components.html#Prop)\n使用prop的注意点：\n```JavaScript\n<child1 ref=\"child1\" msg=\"{name:'bill'}\"></child1>\n<child1 ref=\"child1\" :msg=\"{name:'bill'}\"></child1>\n//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值\n```\n**子组件修改父组件的数据操作：**\n```JavaScript\n//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.\n子组件：\n<template>\n    <div @click=\"toChange\"></div>\n</template>\n\nmethods: {\n    toChange() {\n        this.$emit('getChange','shadow'); //主动触发getChange方法，'shadow'为向父组件传递的数据\n    }\n}\n\n父组件：\n<template>\n  <div>\n      <child @getChange=\"change\" :msg=\"msg\"></child> //监听子组件触发的getChange事件,然后调用change方法\n  </div>\n</template>\nmethods: {\n    change(msg) {\n        this.msg = msg;//父组件得msg值为shadow\n    }\n}\n```\n**下面说一下非父子组件的传值：**\nvue的官网其实已经写了 [bus](https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信)，但是好像并不详细 好多人不会用，下面讲解一下用法：\n```JavaScript\n//写法可以有两种(注意！！都是在main.js进行操作)：\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n   data: {\n  // 空的实例放到根组件下，所有的子组件都能调用\n    Bus: new Vue()\n  },\n  template: '<App/>'\n})\n//第一种写法的使用方法为(发送，接收)：\nthis.$root.Bus.$emit('事件名',payload);//payload为传送的值\nthis.$root.Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n\n//第二种写法类似插件，就是简化使用：\nVue.prototype.$Bus = new Vue();\n//使用方法就是写法上的改变：\nthis.$Bus.$emit('事件名',payload);//payload为传送的值\nthis.$Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n```\n**除了bus非父子组件通信就要用vuex了，之前有过[vuex](https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/)得文章，写得一般 有问题得可以加群讨论(163958730)**\n3.vue-router导航守卫\n*这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下*\n一些基础的参数说明我就不写了吧。。[官网链接](https://router.vuejs.org/zh-cn/advanced/navigation-guards.html)\n**router.beforeEach**\n```JavaScript\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireAuth)){  // 判断该路由是否需要登录权限\n    if (token) {  // 判断当前的token是否存在\n      next();//已登录直接进入下一个页面\n    }\n    else {\n      next({\n        path: '/login',\n        query: {redirect: to.fullPath}  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next();\n  }\n});\n//需要登录的组件相对应的路由加上配置\n{\n            path: \"result\",\n            component: result,\n            name: 'result',\n            meta: {requireAuth: false}\n},\n```\n**beforeRouteEnter(组件内的守护)**\n```JavaScript\n//一般用于进入组件之前需要操作\n//父子组件有时候好像有点坑。。使用的时候自己注意吧\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n4.vue-router懒加载组件引入方式写法：\n```JavaScript\nconst HelloWorld = r => require.ensure([], () => r(require('@/components/HelloWorld')), 'Home');\n```\n5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)\n```JavaScript\n@click=\"isTrue&&chooseCompany\"//这样写在click方法里打debugger并不会进去\n\n@click=\"isTrue&&chooseCompany()\"//所以这才是解锁得正确方式~~~\n```\n6.vue定义了别名(alias)，引用图片路径错误问题\n```JavaScript\nvue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a module path, prefix it with ~\n//就是要在别名前面加一个~\nalias: {\n  'src': path.resolve(__dirname, '../src'),\n  'assets': path.resolve(__dirname, '../src/assets'),\n  'components': path.resolve(__dirname, '../src/components')\n}\n\n<template>\n    <img src=\"~assets/images/logo.jpg\" />//引用\n</template>\n<script>\nimport 'assets/css/style.css'\n</script>\n<style>\n.logo {\n    background: url(~asset/images/bg.jpg)\n}\n</style>\n//意思就是: 告诉加载器它是一个模块，而不是相对路径\n//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.\n```","source":"_posts/Vue疑难杂症.md","raw":"---\ntitle: Vue疑难杂症\ndate: 2018-04-26 14:01:27\ncategories:\n- Vue\ntags:\n- Vue\n---\n使用Vue开发项目的过程中遇到的问题及解决方法\n<!-- more -->\n本文收集群友发得问题而写...持续更新。。。\n话不多说，直接上问题与解决方法：\n1.vue-resource 处理多个请求的问题 \n**不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了**\n解决方法：\n```JavaScript\n//其实github上有源码，我就直接复制粘贴了\n this.$http.get('/someUrl', {\n\n    // use before callback\n    before(request) {\n\n      // abort previous request, if exists\n      if (this.previousRequest) {\n        this.previousRequest.abort();//中断请求\n      }\n\n      // set previous request on Vue instance\n      this.previousRequest = request;\n    }\n\n  }).then(res=> {\n    // success callback\n  }, err=> {\n    // error callback\n  });\n```\n2.组件通信(包含非父子组件)\n**最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接**\n[组件传值-Prop](https://cn.vuejs.org/v2/guide/components.html#Prop)\n使用prop的注意点：\n```JavaScript\n<child1 ref=\"child1\" msg=\"{name:'bill'}\"></child1>\n<child1 ref=\"child1\" :msg=\"{name:'bill'}\"></child1>\n//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值\n```\n**子组件修改父组件的数据操作：**\n```JavaScript\n//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.\n子组件：\n<template>\n    <div @click=\"toChange\"></div>\n</template>\n\nmethods: {\n    toChange() {\n        this.$emit('getChange','shadow'); //主动触发getChange方法，'shadow'为向父组件传递的数据\n    }\n}\n\n父组件：\n<template>\n  <div>\n      <child @getChange=\"change\" :msg=\"msg\"></child> //监听子组件触发的getChange事件,然后调用change方法\n  </div>\n</template>\nmethods: {\n    change(msg) {\n        this.msg = msg;//父组件得msg值为shadow\n    }\n}\n```\n**下面说一下非父子组件的传值：**\nvue的官网其实已经写了 [bus](https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信)，但是好像并不详细 好多人不会用，下面讲解一下用法：\n```JavaScript\n//写法可以有两种(注意！！都是在main.js进行操作)：\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n   data: {\n  // 空的实例放到根组件下，所有的子组件都能调用\n    Bus: new Vue()\n  },\n  template: '<App/>'\n})\n//第一种写法的使用方法为(发送，接收)：\nthis.$root.Bus.$emit('事件名',payload);//payload为传送的值\nthis.$root.Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n\n//第二种写法类似插件，就是简化使用：\nVue.prototype.$Bus = new Vue();\n//使用方法就是写法上的改变：\nthis.$Bus.$emit('事件名',payload);//payload为传送的值\nthis.$Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n```\n**除了bus非父子组件通信就要用vuex了，之前有过[vuex](https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/)得文章，写得一般 有问题得可以加群讨论(163958730)**\n3.vue-router导航守卫\n*这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下*\n一些基础的参数说明我就不写了吧。。[官网链接](https://router.vuejs.org/zh-cn/advanced/navigation-guards.html)\n**router.beforeEach**\n```JavaScript\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireAuth)){  // 判断该路由是否需要登录权限\n    if (token) {  // 判断当前的token是否存在\n      next();//已登录直接进入下一个页面\n    }\n    else {\n      next({\n        path: '/login',\n        query: {redirect: to.fullPath}  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next();\n  }\n});\n//需要登录的组件相对应的路由加上配置\n{\n            path: \"result\",\n            component: result,\n            name: 'result',\n            meta: {requireAuth: false}\n},\n```\n**beforeRouteEnter(组件内的守护)**\n```JavaScript\n//一般用于进入组件之前需要操作\n//父子组件有时候好像有点坑。。使用的时候自己注意吧\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n4.vue-router懒加载组件引入方式写法：\n```JavaScript\nconst HelloWorld = r => require.ensure([], () => r(require('@/components/HelloWorld')), 'Home');\n```\n5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)\n```JavaScript\n@click=\"isTrue&&chooseCompany\"//这样写在click方法里打debugger并不会进去\n\n@click=\"isTrue&&chooseCompany()\"//所以这才是解锁得正确方式~~~\n```\n6.vue定义了别名(alias)，引用图片路径错误问题\n```JavaScript\nvue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a module path, prefix it with ~\n//就是要在别名前面加一个~\nalias: {\n  'src': path.resolve(__dirname, '../src'),\n  'assets': path.resolve(__dirname, '../src/assets'),\n  'components': path.resolve(__dirname, '../src/components')\n}\n\n<template>\n    <img src=\"~assets/images/logo.jpg\" />//引用\n</template>\n<script>\nimport 'assets/css/style.css'\n</script>\n<style>\n.logo {\n    background: url(~asset/images/bg.jpg)\n}\n</style>\n//意思就是: 告诉加载器它是一个模块，而不是相对路径\n//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.\n```","slug":"Vue疑难杂症","published":1,"updated":"2018-08-31T05:16:22.556Z","_id":"cjlhemj4h0005ponui3dkckxj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>使用Vue开发项目的过程中遇到的问题及解决方法<br><a id=\"more\"></a><br>本文收集群友发得问题而写…持续更新。。。<br>话不多说，直接上问题与解决方法：<br>1.vue-resource 处理多个请求的问题<br><strong>不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了</strong><br>解决方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其实github上有源码，我就直接复制粘贴了</span></span><br><span class=\"line\"> <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/someUrl'</span>, &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// use before callback</span></span><br><span class=\"line\">    before(request) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// abort previous request, if exists</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.previousRequest) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.previousRequest.abort();<span class=\"comment\">//中断请求</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// set previous request on Vue instance</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.previousRequest = request;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// success callback</span></span><br><span class=\"line\">  &#125;, err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// error callback</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>2.组件通信(包含非父子组件)<br><strong>最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接</strong><br><a href=\"https://cn.vuejs.org/v2/guide/components.html#Prop\" target=\"_blank\" rel=\"noopener\">组件传值-Prop</a><br>使用prop的注意点：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;/child1&gt;</span><br><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> :msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;/child1&gt;</span><br><span class=\"line\"><span class=\"comment\">//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>子组件修改父组件的数据操作：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.</span></span><br><span class=\"line\">子组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div @click=<span class=\"string\">\"toChange\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    toChange() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        this.$emit('getChange','shadow'); /</span><span class=\"regexp\">/主动触发getChange方法，'shadow'为向父组件传递的数据</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">父组件：</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;child @getChange=\"change\" :msg=\"msg\"&gt;&lt;/</span>child&gt; <span class=\"comment\">//监听子组件触发的getChange事件,然后调用change方法</span></span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    change(msg) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = msg;<span class=\"comment\">//父组件得msg值为shadow</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>下面说一下非父子组件的传值：</strong><br>vue的官网其实已经写了 <a href=\"https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信\" target=\"_blank\" rel=\"noopener\">bus</a>，但是好像并不详细 好多人不会用，下面讲解一下用法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写法可以有两种(注意！！都是在main.js进行操作)：</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">   data: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 空的实例放到根组件下，所有的子组件都能调用</span></span><br><span class=\"line\">    Bus: <span class=\"keyword\">new</span> Vue()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//第一种写法的使用方法为(发送，接收)：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种写法类似插件，就是简化使用：</span></span><br><span class=\"line\">Vue.prototype.$Bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"><span class=\"comment\">//使用方法就是写法上的改变：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>除了bus非父子组件通信就要用vuex了，之前有过<a href=\"https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/\">vuex</a>得文章，写得一般 有问题得可以加群讨论(163958730)</strong><br>3.vue-router导航守卫<br><em>这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下</em><br>一些基础的参数说明我就不写了吧。。<a href=\"https://router.vuejs.org/zh-cn/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">官网链接</a><br><strong>router.beforeEach</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.requireAuth))&#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;  <span class=\"comment\">// 判断当前的token是否存在</span></span><br><span class=\"line\">      next();<span class=\"comment\">//已登录直接进入下一个页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/login'</span>,</span><br><span class=\"line\">        query: &#123;<span class=\"attr\">redirect</span>: to.fullPath&#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//需要登录的组件相对应的路由加上配置</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"result\"</span>,</span><br><span class=\"line\">            component: result,</span><br><span class=\"line\">            name: <span class=\"string\">'result'</span>,</span><br><span class=\"line\">            meta: &#123;<span class=\"attr\">requireAuth</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p><strong>beforeRouteEnter(组件内的守护)</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一般用于进入组件之前需要操作</span></span><br><span class=\"line\"><span class=\"comment\">//父子组件有时候好像有点坑。。使用的时候自己注意吧</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.vue-router懒加载组件引入方式写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HelloWorld = <span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">require</span>.ensure([], () =&gt; r(<span class=\"built_in\">require</span>(<span class=\"string\">'@/components/HelloWorld'</span>)), <span class=\"string\">'Home'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany\"</span><span class=\"comment\">//这样写在click方法里打debugger并不会进去</span></span><br><span class=\"line\"></span><br><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany()\"</span><span class=\"comment\">//所以这才是解锁得正确方式~~~</span></span><br></pre></td></tr></table></figure></p>\n<p>6.vue定义了别名(alias)，引用图片路径错误问题<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a <span class=\"built_in\">module</span> path, prefix it <span class=\"keyword\">with</span> ~</span><br><span class=\"line\"><span class=\"comment\">//就是要在别名前面加一个~</span></span><br><span class=\"line\">alias: &#123;</span><br><span class=\"line\">  <span class=\"string\">'src'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>),</span><br><span class=\"line\">  <span class=\"string\">'assets'</span>: path.resolve(__dirname, <span class=\"string\">'../src/assets'</span>),</span><br><span class=\"line\">  <span class=\"string\">'components'</span>: path.resolve(__dirname, <span class=\"string\">'../src/components'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;img src=<span class=\"string\">\"~assets/images/logo.jpg\"</span> /&gt;<span class=\"comment\">//引用</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import 'assets/</span>css/style.css<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">.logo &#123;</span></span><br><span class=\"line\"><span class=\"string\">    background: url(~asset/images/bg.jpg)</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">//意思就是: 告诉加载器它是一个模块，而不是相对路径</span></span><br><span class=\"line\"><span class=\"string\">//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>使用Vue开发项目的过程中遇到的问题及解决方法<br>","more":"<br>本文收集群友发得问题而写…持续更新。。。<br>话不多说，直接上问题与解决方法：<br>1.vue-resource 处理多个请求的问题<br><strong>不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了</strong><br>解决方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其实github上有源码，我就直接复制粘贴了</span></span><br><span class=\"line\"> <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/someUrl'</span>, &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// use before callback</span></span><br><span class=\"line\">    before(request) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// abort previous request, if exists</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.previousRequest) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.previousRequest.abort();<span class=\"comment\">//中断请求</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// set previous request on Vue instance</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.previousRequest = request;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// success callback</span></span><br><span class=\"line\">  &#125;, err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// error callback</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>2.组件通信(包含非父子组件)<br><strong>最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接</strong><br><a href=\"https://cn.vuejs.org/v2/guide/components.html#Prop\" target=\"_blank\" rel=\"noopener\">组件传值-Prop</a><br>使用prop的注意点：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;/child1&gt;</span><br><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> :msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;/child1&gt;</span><br><span class=\"line\"><span class=\"comment\">//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>子组件修改父组件的数据操作：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.</span></span><br><span class=\"line\">子组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div @click=<span class=\"string\">\"toChange\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    toChange() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        this.$emit('getChange','shadow'); /</span><span class=\"regexp\">/主动触发getChange方法，'shadow'为向父组件传递的数据</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">父组件：</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;child @getChange=\"change\" :msg=\"msg\"&gt;&lt;/</span>child&gt; <span class=\"comment\">//监听子组件触发的getChange事件,然后调用change方法</span></span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    change(msg) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = msg;<span class=\"comment\">//父组件得msg值为shadow</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>下面说一下非父子组件的传值：</strong><br>vue的官网其实已经写了 <a href=\"https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信\" target=\"_blank\" rel=\"noopener\">bus</a>，但是好像并不详细 好多人不会用，下面讲解一下用法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写法可以有两种(注意！！都是在main.js进行操作)：</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">   data: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 空的实例放到根组件下，所有的子组件都能调用</span></span><br><span class=\"line\">    Bus: <span class=\"keyword\">new</span> Vue()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//第一种写法的使用方法为(发送，接收)：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种写法类似插件，就是简化使用：</span></span><br><span class=\"line\">Vue.prototype.$Bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"><span class=\"comment\">//使用方法就是写法上的改变：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>除了bus非父子组件通信就要用vuex了，之前有过<a href=\"https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/\">vuex</a>得文章，写得一般 有问题得可以加群讨论(163958730)</strong><br>3.vue-router导航守卫<br><em>这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下</em><br>一些基础的参数说明我就不写了吧。。<a href=\"https://router.vuejs.org/zh-cn/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">官网链接</a><br><strong>router.beforeEach</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.requireAuth))&#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;  <span class=\"comment\">// 判断当前的token是否存在</span></span><br><span class=\"line\">      next();<span class=\"comment\">//已登录直接进入下一个页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/login'</span>,</span><br><span class=\"line\">        query: &#123;<span class=\"attr\">redirect</span>: to.fullPath&#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//需要登录的组件相对应的路由加上配置</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"result\"</span>,</span><br><span class=\"line\">            component: result,</span><br><span class=\"line\">            name: <span class=\"string\">'result'</span>,</span><br><span class=\"line\">            meta: &#123;<span class=\"attr\">requireAuth</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p><strong>beforeRouteEnter(组件内的守护)</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一般用于进入组件之前需要操作</span></span><br><span class=\"line\"><span class=\"comment\">//父子组件有时候好像有点坑。。使用的时候自己注意吧</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.vue-router懒加载组件引入方式写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HelloWorld = <span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">require</span>.ensure([], () =&gt; r(<span class=\"built_in\">require</span>(<span class=\"string\">'@/components/HelloWorld'</span>)), <span class=\"string\">'Home'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany\"</span><span class=\"comment\">//这样写在click方法里打debugger并不会进去</span></span><br><span class=\"line\"></span><br><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany()\"</span><span class=\"comment\">//所以这才是解锁得正确方式~~~</span></span><br></pre></td></tr></table></figure></p>\n<p>6.vue定义了别名(alias)，引用图片路径错误问题<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a <span class=\"built_in\">module</span> path, prefix it <span class=\"keyword\">with</span> ~</span><br><span class=\"line\"><span class=\"comment\">//就是要在别名前面加一个~</span></span><br><span class=\"line\">alias: &#123;</span><br><span class=\"line\">  <span class=\"string\">'src'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>),</span><br><span class=\"line\">  <span class=\"string\">'assets'</span>: path.resolve(__dirname, <span class=\"string\">'../src/assets'</span>),</span><br><span class=\"line\">  <span class=\"string\">'components'</span>: path.resolve(__dirname, <span class=\"string\">'../src/components'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;img src=<span class=\"string\">\"~assets/images/logo.jpg\"</span> /&gt;<span class=\"comment\">//引用</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import 'assets/</span>css/style.css<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">.logo &#123;</span></span><br><span class=\"line\"><span class=\"string\">    background: url(~asset/images/bg.jpg)</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">//意思就是: 告诉加载器它是一个模块，而不是相对路径</span></span><br><span class=\"line\"><span class=\"string\">//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.</span></span><br></pre></td></tr></table></figure></p>"},{"title":"export和export Default区别","date":"2018-06-28T02:09:45.000Z","_content":"ES6 export和export Default区别\n<!-- more -->\n>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。\n```JavaScript\n//export :基本用法是放置在一个\"声明\"之前，或一组由{}语法（注意，此处的{}语法与对象无关）\nvar a = 1, b = 2;\nfunction square(x) {\n    return x * x;\n}\nexport { a, b, square}\n//等同于\nexport var a = 1;\nexport var b = 2;\nexport function square(x) {\n    return x * x;\n}\n//假设文件名为test.js，你需要导入上面得变量或方法\nimport {a,b,square}//{}不能少~~\n//当两个js文件中有相同命名得方法时 引入会造成混乱\nimport {test} from './a.js'\nimport {test} from './b.js'\t\n//正确使用姿势\nimport {test as aTest} from './a.js'\nimport {test as bTest} from './b.js'\n//使用方法 aTest();bTest();\n//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间\nimport * as aFun from './a.js'//两个文件中可能还有其他同名function\nimport * as bFun from './b.js'\naFun.test() ;\nbFun.test();\n```\n```JavaScript\n//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，\n//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)\n//------ myFunc.js ------\nexport default function () { ... };\n\n//------ main1.js ------\nimport myFunc from 'myFunc';//import命令后面，不使用大括号。\nmyFunc();\n//export default输出多个方法\nexport default {\n  a() {\n    return 'a'\n  },\n  b() {\n    return 'b'\n  },\n  c() {\n    return 'c'\n  }\n}\n```\n>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign\n```JavaScript\nimport * as myFunc from './ambidextrous-cow.js' \n\nexport default Object.assign(speak, myFunc) //Object.assign只能用于function\n\nexport function speak () {\n  console.log('Hello World')\n}\n\n//对应得引入：\nimport defaultFunc from './ambidextrous-cow'\nimport * as otherFunc from './ambidextrous-cow'\n\ndefaultFunc () // Hello World\ndefaultFunc .speak() // Hello World\notherFunc.speak() // Hello World\n```","source":"_posts/export和exportDefault区别.md","raw":"---\ntitle: export和export Default区别\ndate: 2018-06-28 10:09:45\ncategories:\n- ES6\ntags:\n- ES6\n---\nES6 export和export Default区别\n<!-- more -->\n>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。\n```JavaScript\n//export :基本用法是放置在一个\"声明\"之前，或一组由{}语法（注意，此处的{}语法与对象无关）\nvar a = 1, b = 2;\nfunction square(x) {\n    return x * x;\n}\nexport { a, b, square}\n//等同于\nexport var a = 1;\nexport var b = 2;\nexport function square(x) {\n    return x * x;\n}\n//假设文件名为test.js，你需要导入上面得变量或方法\nimport {a,b,square}//{}不能少~~\n//当两个js文件中有相同命名得方法时 引入会造成混乱\nimport {test} from './a.js'\nimport {test} from './b.js'\t\n//正确使用姿势\nimport {test as aTest} from './a.js'\nimport {test as bTest} from './b.js'\n//使用方法 aTest();bTest();\n//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间\nimport * as aFun from './a.js'//两个文件中可能还有其他同名function\nimport * as bFun from './b.js'\naFun.test() ;\nbFun.test();\n```\n```JavaScript\n//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，\n//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)\n//------ myFunc.js ------\nexport default function () { ... };\n\n//------ main1.js ------\nimport myFunc from 'myFunc';//import命令后面，不使用大括号。\nmyFunc();\n//export default输出多个方法\nexport default {\n  a() {\n    return 'a'\n  },\n  b() {\n    return 'b'\n  },\n  c() {\n    return 'c'\n  }\n}\n```\n>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign\n```JavaScript\nimport * as myFunc from './ambidextrous-cow.js' \n\nexport default Object.assign(speak, myFunc) //Object.assign只能用于function\n\nexport function speak () {\n  console.log('Hello World')\n}\n\n//对应得引入：\nimport defaultFunc from './ambidextrous-cow'\nimport * as otherFunc from './ambidextrous-cow'\n\ndefaultFunc () // Hello World\ndefaultFunc .speak() // Hello World\notherFunc.speak() // Hello World\n```","slug":"export和exportDefault区别","published":1,"updated":"2018-08-31T05:22:12.531Z","_id":"cjlhemj4j0006ponueabgbvdk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ES6 export和export Default区别<br><a id=\"more\"></a></p>\n<blockquote>\n<p>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export :基本用法是放置在一个\"声明\"之前，或一组由&#123;&#125;语法（注意，此处的&#123;&#125;语法与对象无关）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; a, b, square&#125;</span><br><span class=\"line\"><span class=\"comment\">//等同于</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//假设文件名为test.js，你需要导入上面得变量或方法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;a,b,square&#125;<span class=\"comment\">//&#123;&#125;不能少~~</span></span><br><span class=\"line\"><span class=\"comment\">//当两个js文件中有相同命名得方法时 引入会造成混乱</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span>\t</span><br><span class=\"line\"><span class=\"comment\">//正确使用姿势</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> aTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> bTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\"><span class=\"comment\">//使用方法 aTest();bTest();</span></span><br><span class=\"line\"><span class=\"comment\">//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aFun <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span><span class=\"comment\">//两个文件中可能还有其他同名function</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bFun <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\">aFun.test() ;</span><br><span class=\"line\">bFun.test();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，</span></span><br><span class=\"line\"><span class=\"comment\">//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)</span></span><br><span class=\"line\"><span class=\"comment\">//------ myFunc.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; ... &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ main1.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'myFunc'</span>;<span class=\"comment\">//import命令后面，不使用大括号。</span></span><br><span class=\"line\">myFunc();</span><br><span class=\"line\"><span class=\"comment\">//export default输出多个方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'a'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'b'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  c() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'c'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow.js'</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"built_in\">Object</span>.assign(speak, myFunc) <span class=\"comment\">//Object.assign只能用于function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello World'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对应得引入：</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> defaultFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> otherFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"></span><br><span class=\"line\">defaultFunc () <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">defaultFunc .speak() <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">otherFunc.speak() <span class=\"comment\">// Hello World</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>ES6 export和export Default区别<br>","more":"</p>\n<blockquote>\n<p>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export :基本用法是放置在一个\"声明\"之前，或一组由&#123;&#125;语法（注意，此处的&#123;&#125;语法与对象无关）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; a, b, square&#125;</span><br><span class=\"line\"><span class=\"comment\">//等同于</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//假设文件名为test.js，你需要导入上面得变量或方法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;a,b,square&#125;<span class=\"comment\">//&#123;&#125;不能少~~</span></span><br><span class=\"line\"><span class=\"comment\">//当两个js文件中有相同命名得方法时 引入会造成混乱</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span>\t</span><br><span class=\"line\"><span class=\"comment\">//正确使用姿势</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> aTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> bTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\"><span class=\"comment\">//使用方法 aTest();bTest();</span></span><br><span class=\"line\"><span class=\"comment\">//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aFun <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span><span class=\"comment\">//两个文件中可能还有其他同名function</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bFun <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\">aFun.test() ;</span><br><span class=\"line\">bFun.test();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，</span></span><br><span class=\"line\"><span class=\"comment\">//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)</span></span><br><span class=\"line\"><span class=\"comment\">//------ myFunc.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; ... &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ main1.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'myFunc'</span>;<span class=\"comment\">//import命令后面，不使用大括号。</span></span><br><span class=\"line\">myFunc();</span><br><span class=\"line\"><span class=\"comment\">//export default输出多个方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'a'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'b'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  c() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'c'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow.js'</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"built_in\">Object</span>.assign(speak, myFunc) <span class=\"comment\">//Object.assign只能用于function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello World'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对应得引入：</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> defaultFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> otherFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"></span><br><span class=\"line\">defaultFunc () <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">defaultFunc .speak() <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">otherFunc.speak() <span class=\"comment\">// Hello World</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>"},{"title":"git操作遇到的问题","date":"2018-05-08T10:46:34.000Z","_content":"##### 比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\n`解决办法：git config core.ignorecase false //设置大小写敏感`\n`恢复设置:git config core.ignorecase true`\n##### 创建.gitignore文件--git bash执行\n`touch .gitignore`\n##### git pull 报错--refusing to merge unrelated histories\n```\ngit pull --allow-unrelated-histories\n//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可\n```","source":"_posts/git操作遇到的问题.md","raw":"---\ntitle: git操作遇到的问题\ndate: 2018-05-08 18:46:34\ncategories:\n- git\ntags:\n- git\n---\n##### 比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\n`解决办法：git config core.ignorecase false //设置大小写敏感`\n`恢复设置:git config core.ignorecase true`\n##### 创建.gitignore文件--git bash执行\n`touch .gitignore`\n##### git pull 报错--refusing to merge unrelated histories\n```\ngit pull --allow-unrelated-histories\n//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可\n```","slug":"git操作遇到的问题","published":1,"updated":"2018-07-19T08:04:47.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhemj4m000aponubv6tv30x","content":"<h5 id=\"比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"><a href=\"#比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\" class=\"headerlink\" title=\"比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"></a>比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件</h5><p><code>解决办法：git config core.ignorecase false //设置大小写敏感</code><br><code>恢复设置:git config core.ignorecase true</code></p>\n<h5 id=\"创建-gitignore文件–git-bash执行\"><a href=\"#创建-gitignore文件–git-bash执行\" class=\"headerlink\" title=\"创建.gitignore文件–git bash执行\"></a>创建.gitignore文件–git bash执行</h5><p><code>touch .gitignore</code></p>\n<h5 id=\"git-pull-报错–refusing-to-merge-unrelated-histories\"><a href=\"#git-pull-报错–refusing-to-merge-unrelated-histories\" class=\"headerlink\" title=\"git pull 报错–refusing to merge unrelated histories\"></a>git pull 报错–refusing to merge unrelated histories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --allow-unrelated-histories</span><br><span class=\"line\">//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"><a href=\"#比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\" class=\"headerlink\" title=\"比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"></a>比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件</h5><p><code>解决办法：git config core.ignorecase false //设置大小写敏感</code><br><code>恢复设置:git config core.ignorecase true</code></p>\n<h5 id=\"创建-gitignore文件–git-bash执行\"><a href=\"#创建-gitignore文件–git-bash执行\" class=\"headerlink\" title=\"创建.gitignore文件–git bash执行\"></a>创建.gitignore文件–git bash执行</h5><p><code>touch .gitignore</code></p>\n<h5 id=\"git-pull-报错–refusing-to-merge-unrelated-histories\"><a href=\"#git-pull-报错–refusing-to-merge-unrelated-histories\" class=\"headerlink\" title=\"git pull 报错–refusing to merge unrelated histories\"></a>git pull 报错–refusing to merge unrelated histories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --allow-unrelated-histories</span><br><span class=\"line\">//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2018-01-08T06:22:23.000Z","_content":"测试文章。。可以不看\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-01-08 14:22:23\n---\n测试文章。。可以不看\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-08-31T05:21:36.253Z","_id":"cjlhemj4q000bponu7ma2p6my","comments":1,"layout":"post","photos":[],"link":"","content":"<p>测试文章。。可以不看<br><a id=\"more\"></a><br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>测试文章。。可以不看<br>","more":"<br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"express+mongodb写接口遇坑","date":"2018-08-01T07:53:49.000Z","_content":"express+mongodb写api接口遇到的一些问题及解决方法\n<!-- more -->\n##### node crypto密码加密\n```JavaScript\n#express加密密码时报错 Digest already called\n#报错写法：\nconst crypto = require('crypto');//密码加密\nconst md5 = crypto.createHash('md5');\n#正确写法：放到router.post(xx,(req,res)=>{})中去\nrequire('crypto').createHash('md5').update(req.body.password).digest('hex')\n```\n##### mongodb 查询\n```JavaScript\n//只输出id和title字段，第一个参数为查询条件，空代表查询所有\ndb.news.find( {}, { id: 1, title: 1 } )\n//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法\n//不输出内容字段，其它字段都输出\ndb.news.find( {查询条件}, {content: 0 } )\n```\n##### express-session 本地接口没问题，部署以后post请求会出现参数不匹配--502\n```JavaScript\n#查看nginx error.log报错信息:\nupstream prematurely closed connection while reading response header from upstream, client: xx.xxx.xxx.xx, server: shadow.com, request: \"POST /user/login HTTP/1.1\",\n#排查了很久发现是退出登录以后再次请求没有清除session\n#退出登录方法中调用:\nreq.session.destroy();\n```\n##### express process.env.NODE_ENV判断不起作用\n```JavaScript\n#在启动的时候设置NODE_ENV\nset NODE_ENV=development&& node index.js\n需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况\n```\n##### multer文件上传\n```JavaScript\npostman测试的时候key的值要跟upload.single('file') single中的一样\n//服务器访问图片404--添加图片代理:\nlocation /images {\n    proxy_pass http://localhost:3000;\n  }\n#注意：放在location / {} 前面 配置完重启nginx\n```","source":"_posts/express-mongodb写接口遇坑.md","raw":"---\ntitle: express+mongodb写接口遇坑\ndate: 2018-08-01 15:53:49\ncategories:\n- node\ntags:\n- node\n---\nexpress+mongodb写api接口遇到的一些问题及解决方法\n<!-- more -->\n##### node crypto密码加密\n```JavaScript\n#express加密密码时报错 Digest already called\n#报错写法：\nconst crypto = require('crypto');//密码加密\nconst md5 = crypto.createHash('md5');\n#正确写法：放到router.post(xx,(req,res)=>{})中去\nrequire('crypto').createHash('md5').update(req.body.password).digest('hex')\n```\n##### mongodb 查询\n```JavaScript\n//只输出id和title字段，第一个参数为查询条件，空代表查询所有\ndb.news.find( {}, { id: 1, title: 1 } )\n//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法\n//不输出内容字段，其它字段都输出\ndb.news.find( {查询条件}, {content: 0 } )\n```\n##### express-session 本地接口没问题，部署以后post请求会出现参数不匹配--502\n```JavaScript\n#查看nginx error.log报错信息:\nupstream prematurely closed connection while reading response header from upstream, client: xx.xxx.xxx.xx, server: shadow.com, request: \"POST /user/login HTTP/1.1\",\n#排查了很久发现是退出登录以后再次请求没有清除session\n#退出登录方法中调用:\nreq.session.destroy();\n```\n##### express process.env.NODE_ENV判断不起作用\n```JavaScript\n#在启动的时候设置NODE_ENV\nset NODE_ENV=development&& node index.js\n需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况\n```\n##### multer文件上传\n```JavaScript\npostman测试的时候key的值要跟upload.single('file') single中的一样\n//服务器访问图片404--添加图片代理:\nlocation /images {\n    proxy_pass http://localhost:3000;\n  }\n#注意：放在location / {} 前面 配置完重启nginx\n```","slug":"express-mongodb写接口遇坑","published":1,"updated":"2018-08-31T03:12:45.674Z","_id":"cjlhemj4t000fponuqd2nhlme","comments":1,"layout":"post","photos":[],"link":"","content":"<p>express+mongodb写api接口遇到的一些问题及解决方法<br><a id=\"more\"></a></p>\n<h5 id=\"node-crypto密码加密\"><a href=\"#node-crypto密码加密\" class=\"headerlink\" title=\"node crypto密码加密\"></a>node crypto密码加密</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#express加密密码时报错 Digest already called</span><br><span class=\"line\">#报错写法：</span><br><span class=\"line\"><span class=\"keyword\">const</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);<span class=\"comment\">//密码加密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = crypto.createHash(<span class=\"string\">'md5'</span>);</span><br><span class=\"line\">#正确写法：放到router.post(xx,(req,res)=&gt;&#123;&#125;)中去</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>).createHash(<span class=\"string\">'md5'</span>).update(req.body.password).digest(<span class=\"string\">'hex'</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mongodb-查询\"><a href=\"#mongodb-查询\" class=\"headerlink\" title=\"mongodb 查询\"></a>mongodb 查询</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只输出id和title字段，第一个参数为查询条件，空代表查询所有</span></span><br><span class=\"line\">db.news.find( &#123;&#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"number\">1</span> &#125; )</span><br><span class=\"line\"><span class=\"comment\">//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法</span></span><br><span class=\"line\"><span class=\"comment\">//不输出内容字段，其它字段都输出</span></span><br><span class=\"line\">db.news.find( &#123;查询条件&#125;, &#123;<span class=\"attr\">content</span>: <span class=\"number\">0</span> &#125; )</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\"><a href=\"#express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\" class=\"headerlink\" title=\"express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502\"></a>express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看nginx error.log报错信息:</span><br><span class=\"line\">upstream prematurely closed connection <span class=\"keyword\">while</span> reading response header <span class=\"keyword\">from</span> upstream, <span class=\"attr\">client</span>: xx.xxx.xxx.xx, <span class=\"attr\">server</span>: shadow.com, <span class=\"attr\">request</span>: <span class=\"string\">\"POST /user/login HTTP/1.1\"</span>,</span><br><span class=\"line\">#排查了很久发现是退出登录以后再次请求没有清除session</span><br><span class=\"line\">#退出登录方法中调用:</span><br><span class=\"line\">req.session.destroy();</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-process-env-NODE-ENV判断不起作用\"><a href=\"#express-process-env-NODE-ENV判断不起作用\" class=\"headerlink\" title=\"express process.env.NODE_ENV判断不起作用\"></a>express process.env.NODE_ENV判断不起作用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在启动的时候设置NODE_ENV</span><br><span class=\"line\">set NODE_ENV=development&amp;&amp; node index.js</span><br><span class=\"line\">需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况</span><br></pre></td></tr></table></figure>\n<h5 id=\"multer文件上传\"><a href=\"#multer文件上传\" class=\"headerlink\" title=\"multer文件上传\"></a>multer文件上传</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman测试的时候key的值要跟upload.single(<span class=\"string\">'file'</span>) single中的一样</span><br><span class=\"line\"><span class=\"comment\">//服务器访问图片404--添加图片代理:</span></span><br><span class=\"line\">location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">#注意：放在location / &#123;&#125; 前面 配置完重启nginx</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>express+mongodb写api接口遇到的一些问题及解决方法<br>","more":"</p>\n<h5 id=\"node-crypto密码加密\"><a href=\"#node-crypto密码加密\" class=\"headerlink\" title=\"node crypto密码加密\"></a>node crypto密码加密</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#express加密密码时报错 Digest already called</span><br><span class=\"line\">#报错写法：</span><br><span class=\"line\"><span class=\"keyword\">const</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);<span class=\"comment\">//密码加密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = crypto.createHash(<span class=\"string\">'md5'</span>);</span><br><span class=\"line\">#正确写法：放到router.post(xx,(req,res)=&gt;&#123;&#125;)中去</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>).createHash(<span class=\"string\">'md5'</span>).update(req.body.password).digest(<span class=\"string\">'hex'</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mongodb-查询\"><a href=\"#mongodb-查询\" class=\"headerlink\" title=\"mongodb 查询\"></a>mongodb 查询</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只输出id和title字段，第一个参数为查询条件，空代表查询所有</span></span><br><span class=\"line\">db.news.find( &#123;&#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"number\">1</span> &#125; )</span><br><span class=\"line\"><span class=\"comment\">//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法</span></span><br><span class=\"line\"><span class=\"comment\">//不输出内容字段，其它字段都输出</span></span><br><span class=\"line\">db.news.find( &#123;查询条件&#125;, &#123;<span class=\"attr\">content</span>: <span class=\"number\">0</span> &#125; )</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\"><a href=\"#express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\" class=\"headerlink\" title=\"express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502\"></a>express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看nginx error.log报错信息:</span><br><span class=\"line\">upstream prematurely closed connection <span class=\"keyword\">while</span> reading response header <span class=\"keyword\">from</span> upstream, <span class=\"attr\">client</span>: xx.xxx.xxx.xx, <span class=\"attr\">server</span>: shadow.com, <span class=\"attr\">request</span>: <span class=\"string\">\"POST /user/login HTTP/1.1\"</span>,</span><br><span class=\"line\">#排查了很久发现是退出登录以后再次请求没有清除session</span><br><span class=\"line\">#退出登录方法中调用:</span><br><span class=\"line\">req.session.destroy();</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-process-env-NODE-ENV判断不起作用\"><a href=\"#express-process-env-NODE-ENV判断不起作用\" class=\"headerlink\" title=\"express process.env.NODE_ENV判断不起作用\"></a>express process.env.NODE_ENV判断不起作用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在启动的时候设置NODE_ENV</span><br><span class=\"line\">set NODE_ENV=development&amp;&amp; node index.js</span><br><span class=\"line\">需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况</span><br></pre></td></tr></table></figure>\n<h5 id=\"multer文件上传\"><a href=\"#multer文件上传\" class=\"headerlink\" title=\"multer文件上传\"></a>multer文件上传</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman测试的时候key的值要跟upload.single(<span class=\"string\">'file'</span>) single中的一样</span><br><span class=\"line\"><span class=\"comment\">//服务器访问图片404--添加图片代理:</span></span><br><span class=\"line\">location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">#注意：放在location / &#123;&#125; 前面 配置完重启nginx</span><br></pre></td></tr></table></figure>"},{"title":"git操作--github","date":"2018-01-11T03:29:05.000Z","_content":"##### github设置项目默认语言类型展示\n```javascript\n*.js linguist-language=JavaScript\n*.css linguist-language=JavaScript\n*.html linguist-language=JavaScript\n```\n*末尾的JavaScript可以更换你要展示得语言*  \n###### git添加ssh\n* 1.首先需要检查你电脑是否已经有 SSH key    \n运行 git Bash 客户端，输入如下代码：\n```\n$ cd ~/.ssh\n$ ls\n```\n这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。\n* 2.创建一个 SSH key \n```\n$ ssh-keygen -t rsa -C \"your_email@qq.com\"\n```\n代码参数含义：\n\n-t 指定密钥类型，默认是 rsa ，可以省略。\n-C 设置注释文字，比如邮箱。\n-f 指定密钥文件存储文件名。\n>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘>用户>自己的用户名>.ssh]目录下已经生成好了。\n\n<br/>\n* 3.添加你的 SSH key 到 github上面去\n首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制\n\n**前端小伙伴学习群：163958730**","source":"_posts/git操作-github.md","raw":"---\ntitle: git操作--github\ndate: 2018-01-11 11:29:05\ncategories:\n- git\ntags:\n- git\n---\n##### github设置项目默认语言类型展示\n```javascript\n*.js linguist-language=JavaScript\n*.css linguist-language=JavaScript\n*.html linguist-language=JavaScript\n```\n*末尾的JavaScript可以更换你要展示得语言*  \n###### git添加ssh\n* 1.首先需要检查你电脑是否已经有 SSH key    \n运行 git Bash 客户端，输入如下代码：\n```\n$ cd ~/.ssh\n$ ls\n```\n这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。\n* 2.创建一个 SSH key \n```\n$ ssh-keygen -t rsa -C \"your_email@qq.com\"\n```\n代码参数含义：\n\n-t 指定密钥类型，默认是 rsa ，可以省略。\n-C 设置注释文字，比如邮箱。\n-f 指定密钥文件存储文件名。\n>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘>用户>自己的用户名>.ssh]目录下已经生成好了。\n\n<br/>\n* 3.添加你的 SSH key 到 github上面去\n首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制\n\n**前端小伙伴学习群：163958730**","slug":"git操作-github","published":1,"updated":"2018-07-18T06:09:21.264Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhemj93000yponur6o583er","content":"<h5 id=\"github设置项目默认语言类型展示\"><a href=\"#github设置项目默认语言类型展示\" class=\"headerlink\" title=\"github设置项目默认语言类型展示\"></a>github设置项目默认语言类型展示</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js linguist-language=JavaScript</span><br><span class=\"line\">*.css linguist-language=JavaScript</span><br><span class=\"line\">*.html linguist-language=JavaScript</span><br></pre></td></tr></table></figure>\n<p><em>末尾的JavaScript可以更换你要展示得语言</em>  </p>\n<h6 id=\"git添加ssh\"><a href=\"#git添加ssh\" class=\"headerlink\" title=\"git添加ssh\"></a>git添加ssh</h6><ul>\n<li>1.首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh</span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。</p>\n<ul>\n<li>2.创建一个 SSH key <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@qq.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>代码参数含义：</p>\n<p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p>\n<blockquote>\n<p>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘&gt;用户&gt;自己的用户名&gt;.ssh]目录下已经生成好了。</p>\n</blockquote>\n<p><br></p>\n<ul>\n<li>3.添加你的 SSH key 到 github上面去<br>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制</li>\n</ul>\n<p><strong>前端小伙伴学习群：163958730</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"github设置项目默认语言类型展示\"><a href=\"#github设置项目默认语言类型展示\" class=\"headerlink\" title=\"github设置项目默认语言类型展示\"></a>github设置项目默认语言类型展示</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js linguist-language=JavaScript</span><br><span class=\"line\">*.css linguist-language=JavaScript</span><br><span class=\"line\">*.html linguist-language=JavaScript</span><br></pre></td></tr></table></figure>\n<p><em>末尾的JavaScript可以更换你要展示得语言</em>  </p>\n<h6 id=\"git添加ssh\"><a href=\"#git添加ssh\" class=\"headerlink\" title=\"git添加ssh\"></a>git添加ssh</h6><ul>\n<li>1.首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh</span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。</p>\n<ul>\n<li>2.创建一个 SSH key <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@qq.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>代码参数含义：</p>\n<p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p>\n<blockquote>\n<p>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘&gt;用户&gt;自己的用户名&gt;.ssh]目录下已经生成好了。</p>\n</blockquote>\n<p><br></p>\n<ul>\n<li>3.添加你的 SSH key 到 github上面去<br>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制</li>\n</ul>\n<p><strong>前端小伙伴学习群：163958730</strong></p>\n"},{"title":"linux服务器配置(node环境)","date":"2018-07-27T09:17:12.000Z","_content":"linux服务器配置(node环境)\n<!-- more -->\n##### 新建node安装目录，与node项目目录\n```JavaScript\nsudo mkdir -p /www/dev/node //目录位置可选\n下载node二进制文件包：\n sudo wget https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找\n解压包命令：\n sudo tar zxvf node-v8.11.3-linux-x64.tar.xz --这里有个坑 这个命令会报错\n正确解压命令：\n sudo tar xvf node-v8.11.3-linux-x64.tar.xz\n配置node环境变量：\n sudo vim /etc/profile\n //按i插入到最下面\nexport NODE_HOME=/www/dev/node/node-v8.11.3-linux-x64 //node安装目录\nexport PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符\n编辑完以后按'esc' 输入':wq' 回车保存退出\nsource /etc/profile --使文件生效\n```\n##### 安装npm\n```JavaScript\ncurl https://npmjs.org/install.sh | sh\n```\n##### 安装pm2\n```\nsudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm\n//执行完这两步才可以npm install\nsudo npm install pm2 -g\n同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2\n```\n###### 上传并启动项目(已上传忽略)\n```JavaScript\nsudo npm install //安装项目所需依赖\n启动项目: sudo pm2 start index.js// -- node index.js\n停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill\n```\n##### 安装配置Nginx\n```JavaScript\n//开始前，请确认gcc g++开发类库是否装好，默认已经安装。\n  whereis gcc\n//进入安装目录\n  cd /usr/local/src\n//安装PCRE库\n  wget http://zlib.net/zlib-1.2.11.tar.gz\n  tar zxvf zlib-1.2.11.tar.gz\n  cd zlib-1.2.11\n  ./configure\n  make\n  make install\n//安装openssl（某些vps默认没装ssl)\n  wget https://www.openssl.org/source/openssl-1.0.1t.tar.gz\n  tar -zxvf openssl-1.0.1t.tar.gz\n//安装nginx\n  wget http://nginx.org/download/nginx-1.1.10.tar.gz\n  tar -zxvf nginx-1.1.10.tar.gz\n  cd nginx-1.1.10\n  ./configure\n  make\n  make install\n--make install可能会报错：make: *** No rule to make target 'install'.  Stop.\n解决：\nubuntu下--\n  apt-get install openssl\n  apt-get install libssl-dev\ncentos下--\n  yum -y install openssl openssl-devel\n然后再从./configure开始执行\n```\n##### 启动nginx\n```JavaScript\n//查看nginx是否启动:\n启动：/usr/local/nginx/sbin/nginx\n停止：/usr/local/nginx/sbin/nginx -s stop\n ps aux|grep nginx\n//结果:\nroot     124023  0.0  0.0  28732   540 ?        Ss   16:59   0:00 nginx: master process /usr/local/nginx/sbin/nginx\nnobody   124024  0.0  0.2  29132  2536 ?        S    16:59   0:00 nginx: worker process\nroot     124048  0.0  0.1  14684  1036 pts/0    S+   17:04   0:00 grep --color=auto nginx\n//必须有前两个进程 否则启动失败\n\n//修改了配置文件以后重启nginx\n/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload\n//贴一小段配置代码：\nserver {\n        listen       8090;\n        server_name  www.shadow.com; #服务器域名\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n           # root   html;\n           # index  index.html index.htm;\n           proxy_pass http://127.0.0.1:3000;\n           proxy_redirect default;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n##### 安装MongoDB\n```JavaScript\n//切换到安装目录\n cd /usr/local/soft/  --没有就新建 mkdir soft\n//下载：\n curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n//解压：\n tar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n//移动到/usr/local/mongodb/目录：\n mv mongodb-linux-x86_64-3.6.4 /usr/local/mongodb\n//编辑环境变量：\n vim /etc/profile\nexport MONGODB_HOME=/usr/local/mongodb/\nexport PATH=$MONGODB_HOME/bin --添加到之前的node前\nsource /etc/profile --使之生效\n//切换到新目录的bin目录下：\n cd /usr/local/mongodb/bin\n//新建mongodb.conf文件：--touch mongodb.conf\n#端口号\nport=27017\n#数据目录--没有需要手动创建 mkdir\ndbpath=/usr/local/mongodb/data/db\n#日志目录--没有需要手动创建 mkdir touch\nlogpath=/usr/local/mongodb/log/out.log\n#设置后台运行\nfork=true\n#日志输出方式\nlogappend=true\n#开启认证\n#auth=true\n//启动mongodb:\n./mongod -f mongodb.conf\n或者：./mongod -config mongodb.conf\n```","source":"_posts/linux服务器配置-node环境.md","raw":"---\ntitle: linux服务器配置(node环境)\ndate: 2018-07-27 17:17:12\ncategories:\n- node\ntags:\n- node\n---\nlinux服务器配置(node环境)\n<!-- more -->\n##### 新建node安装目录，与node项目目录\n```JavaScript\nsudo mkdir -p /www/dev/node //目录位置可选\n下载node二进制文件包：\n sudo wget https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找\n解压包命令：\n sudo tar zxvf node-v8.11.3-linux-x64.tar.xz --这里有个坑 这个命令会报错\n正确解压命令：\n sudo tar xvf node-v8.11.3-linux-x64.tar.xz\n配置node环境变量：\n sudo vim /etc/profile\n //按i插入到最下面\nexport NODE_HOME=/www/dev/node/node-v8.11.3-linux-x64 //node安装目录\nexport PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符\n编辑完以后按'esc' 输入':wq' 回车保存退出\nsource /etc/profile --使文件生效\n```\n##### 安装npm\n```JavaScript\ncurl https://npmjs.org/install.sh | sh\n```\n##### 安装pm2\n```\nsudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm\n//执行完这两步才可以npm install\nsudo npm install pm2 -g\n同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2\n```\n###### 上传并启动项目(已上传忽略)\n```JavaScript\nsudo npm install //安装项目所需依赖\n启动项目: sudo pm2 start index.js// -- node index.js\n停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill\n```\n##### 安装配置Nginx\n```JavaScript\n//开始前，请确认gcc g++开发类库是否装好，默认已经安装。\n  whereis gcc\n//进入安装目录\n  cd /usr/local/src\n//安装PCRE库\n  wget http://zlib.net/zlib-1.2.11.tar.gz\n  tar zxvf zlib-1.2.11.tar.gz\n  cd zlib-1.2.11\n  ./configure\n  make\n  make install\n//安装openssl（某些vps默认没装ssl)\n  wget https://www.openssl.org/source/openssl-1.0.1t.tar.gz\n  tar -zxvf openssl-1.0.1t.tar.gz\n//安装nginx\n  wget http://nginx.org/download/nginx-1.1.10.tar.gz\n  tar -zxvf nginx-1.1.10.tar.gz\n  cd nginx-1.1.10\n  ./configure\n  make\n  make install\n--make install可能会报错：make: *** No rule to make target 'install'.  Stop.\n解决：\nubuntu下--\n  apt-get install openssl\n  apt-get install libssl-dev\ncentos下--\n  yum -y install openssl openssl-devel\n然后再从./configure开始执行\n```\n##### 启动nginx\n```JavaScript\n//查看nginx是否启动:\n启动：/usr/local/nginx/sbin/nginx\n停止：/usr/local/nginx/sbin/nginx -s stop\n ps aux|grep nginx\n//结果:\nroot     124023  0.0  0.0  28732   540 ?        Ss   16:59   0:00 nginx: master process /usr/local/nginx/sbin/nginx\nnobody   124024  0.0  0.2  29132  2536 ?        S    16:59   0:00 nginx: worker process\nroot     124048  0.0  0.1  14684  1036 pts/0    S+   17:04   0:00 grep --color=auto nginx\n//必须有前两个进程 否则启动失败\n\n//修改了配置文件以后重启nginx\n/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload\n//贴一小段配置代码：\nserver {\n        listen       8090;\n        server_name  www.shadow.com; #服务器域名\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n           # root   html;\n           # index  index.html index.htm;\n           proxy_pass http://127.0.0.1:3000;\n           proxy_redirect default;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n##### 安装MongoDB\n```JavaScript\n//切换到安装目录\n cd /usr/local/soft/  --没有就新建 mkdir soft\n//下载：\n curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n//解压：\n tar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n//移动到/usr/local/mongodb/目录：\n mv mongodb-linux-x86_64-3.6.4 /usr/local/mongodb\n//编辑环境变量：\n vim /etc/profile\nexport MONGODB_HOME=/usr/local/mongodb/\nexport PATH=$MONGODB_HOME/bin --添加到之前的node前\nsource /etc/profile --使之生效\n//切换到新目录的bin目录下：\n cd /usr/local/mongodb/bin\n//新建mongodb.conf文件：--touch mongodb.conf\n#端口号\nport=27017\n#数据目录--没有需要手动创建 mkdir\ndbpath=/usr/local/mongodb/data/db\n#日志目录--没有需要手动创建 mkdir touch\nlogpath=/usr/local/mongodb/log/out.log\n#设置后台运行\nfork=true\n#日志输出方式\nlogappend=true\n#开启认证\n#auth=true\n//启动mongodb:\n./mongod -f mongodb.conf\n或者：./mongod -config mongodb.conf\n```","slug":"linux服务器配置-node环境","published":1,"updated":"2018-08-31T05:20:44.085Z","_id":"cjlhemj960010ponugrcexfki","comments":1,"layout":"post","photos":[],"link":"","content":"<p>linux服务器配置(node环境)<br><a id=\"more\"></a></p>\n<h5 id=\"新建node安装目录，与node项目目录\"><a href=\"#新建node安装目录，与node项目目录\" class=\"headerlink\" title=\"新建node安装目录，与node项目目录\"></a>新建node安装目录，与node项目目录</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /www/dev/node <span class=\"comment\">//目录位置可选</span></span><br><span class=\"line\">下载node二进制文件包：</span><br><span class=\"line\"> sudo wget https:<span class=\"comment\">//nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找</span></span><br><span class=\"line\">解压包命令：</span><br><span class=\"line\"> sudo tar zxvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz --这里有个坑 这个命令会报错</span><br><span class=\"line\">正确解压命令：</span><br><span class=\"line\"> sudo tar xvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz</span><br><span class=\"line\">配置node环境变量：</span><br><span class=\"line\"> sudo vim /etc/profile</span><br><span class=\"line\"> <span class=\"comment\">//按i插入到最下面</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> NODE_HOME=<span class=\"regexp\">/www/</span>dev/node/node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64 <span class=\"comment\">//node安装目录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符</span><br><span class=\"line\">编辑完以后按<span class=\"string\">'esc'</span> 输入<span class=\"string\">':wq'</span> 回车保存退出</span><br><span class=\"line\">source /etc/profile --使文件生效</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:<span class=\"comment\">//npmjs.org/install.sh | sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装pm2\"><a href=\"#安装pm2\" class=\"headerlink\" title=\"安装pm2\"></a>安装pm2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm</span><br><span class=\"line\">//执行完这两步才可以npm install</span><br><span class=\"line\">sudo npm install pm2 -g</span><br><span class=\"line\">同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传并启动项目-已上传忽略\"><a href=\"#上传并启动项目-已上传忽略\" class=\"headerlink\" title=\"上传并启动项目(已上传忽略)\"></a>上传并启动项目(已上传忽略)</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install <span class=\"comment\">//安装项目所需依赖</span></span><br><span class=\"line\">启动项目: sudo pm2 start index.js<span class=\"comment\">// -- node index.js</span></span><br><span class=\"line\">停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装配置Nginx\"><a href=\"#安装配置Nginx\" class=\"headerlink\" title=\"安装配置Nginx\"></a>安装配置Nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开始前，请确认gcc g++开发类库是否装好，默认已经安装。</span></span><br><span class=\"line\">  whereis gcc</span><br><span class=\"line\"><span class=\"comment\">//进入安装目录</span></span><br><span class=\"line\">  cd /usr/local/src</span><br><span class=\"line\"><span class=\"comment\">//安装PCRE库</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//zlib.net/zlib-1.2.11.tar.gz</span></span><br><span class=\"line\">  tar zxvf zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span>.tar.gz</span><br><span class=\"line\">  cd zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\"><span class=\"comment\">//安装openssl（某些vps默认没装ssl)</span></span><br><span class=\"line\">  wget https:<span class=\"comment\">//www.openssl.org/source/openssl-1.0.1t.tar.gz</span></span><br><span class=\"line\">  tar -zxvf openssl<span class=\"number\">-1.0</span><span class=\"number\">.1</span>t.tar.gz</span><br><span class=\"line\"><span class=\"comment\">//安装nginx</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//nginx.org/download/nginx-1.1.10.tar.gz</span></span><br><span class=\"line\">  tar -zxvf nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span>.tar.gz</span><br><span class=\"line\">  cd nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\">--make install可能会报错：make: *** No rule to make target <span class=\"string\">'install'</span>.  Stop.</span><br><span class=\"line\">解决：</span><br><span class=\"line\">ubuntu下--</span><br><span class=\"line\">  apt-get install openssl</span><br><span class=\"line\">  apt-get install libssl-dev</span><br><span class=\"line\">centos下--</span><br><span class=\"line\">  yum -y install openssl openssl-devel</span><br><span class=\"line\">然后再从./configure开始执行</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查看nginx是否启动:</span></span><br><span class=\"line\">启动：/usr/local/nginx/sbin/nginx</span><br><span class=\"line\">停止：/usr/local/nginx/sbin/nginx -s stop</span><br><span class=\"line\"> ps aux|grep nginx</span><br><span class=\"line\"><span class=\"comment\">//结果:</span></span><br><span class=\"line\">root     <span class=\"number\">124023</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.0</span>  <span class=\"number\">28732</span>   <span class=\"number\">540</span> ?        Ss   <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">nobody   <span class=\"number\">124024</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.2</span>  <span class=\"number\">29132</span>  <span class=\"number\">2536</span> ?        S    <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: worker process</span><br><span class=\"line\">root     <span class=\"number\">124048</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.1</span>  <span class=\"number\">14684</span>  <span class=\"number\">1036</span> pts/<span class=\"number\">0</span>    S+   <span class=\"number\">17</span>:<span class=\"number\">04</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> grep --color=auto nginx</span><br><span class=\"line\"><span class=\"comment\">//必须有前两个进程 否则启动失败</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改了配置文件以后重启nginx</span></span><br><span class=\"line\">/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload</span><br><span class=\"line\"><span class=\"comment\">//贴一小段配置代码：</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">8090</span>;</span><br><span class=\"line\">        server_name  www.shadow.com; #服务器域名</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           # root   html;</span><br><span class=\"line\">           # index  index.html index.htm;</span><br><span class=\"line\">           proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">           proxy_redirect <span class=\"keyword\">default</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the static page /50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /<span class=\"number\">50</span>x.html;</span><br><span class=\"line\">        location = <span class=\"regexp\">/50x.html &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            root   html;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//切换到安装目录</span></span><br><span class=\"line\"> cd /usr/local/soft/  --没有就新建 mkdir soft</span><br><span class=\"line\"><span class=\"comment\">//下载：</span></span><br><span class=\"line\"> curl -O https:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span></span><br><span class=\"line\"><span class=\"comment\">//解压：</span></span><br><span class=\"line\"> tar -zxvf mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span>.tgz</span><br><span class=\"line\"><span class=\"comment\">//移动到/usr/local/mongodb/目录：</span></span><br><span class=\"line\"> mv mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span> /usr/local/mongodb</span><br><span class=\"line\"><span class=\"comment\">//编辑环境变量：</span></span><br><span class=\"line\"> vim /etc/profile</span><br><span class=\"line\"><span class=\"keyword\">export</span> MONGODB_HOME=<span class=\"regexp\">/usr/</span>local/mongodb/</span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$MONGODB_HOME/bin --添加到之前的node前</span><br><span class=\"line\">source /etc/profile --使之生效</span><br><span class=\"line\"><span class=\"comment\">//切换到新目录的bin目录下：</span></span><br><span class=\"line\"> cd /usr/local/mongodb/bin</span><br><span class=\"line\"><span class=\"comment\">//新建mongodb.conf文件：--touch mongodb.conf</span></span><br><span class=\"line\">#端口号</span><br><span class=\"line\">port=<span class=\"number\">27017</span></span><br><span class=\"line\">#数据目录--没有需要手动创建 mkdir</span><br><span class=\"line\">dbpath=<span class=\"regexp\">/usr/</span>local/mongodb/data/db</span><br><span class=\"line\">#日志目录--没有需要手动创建 mkdir touch</span><br><span class=\"line\">logpath=<span class=\"regexp\">/usr/</span>local/mongodb/log/out.log</span><br><span class=\"line\">#设置后台运行</span><br><span class=\"line\">fork=<span class=\"literal\">true</span></span><br><span class=\"line\">#日志输出方式</span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">#开启认证</span><br><span class=\"line\">#auth=true</span><br><span class=\"line\"><span class=\"comment\">//启动mongodb:</span></span><br><span class=\"line\">./mongod -f mongodb.conf</span><br><span class=\"line\">或者：./mongod -config mongodb.conf</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>linux服务器配置(node环境)<br>","more":"</p>\n<h5 id=\"新建node安装目录，与node项目目录\"><a href=\"#新建node安装目录，与node项目目录\" class=\"headerlink\" title=\"新建node安装目录，与node项目目录\"></a>新建node安装目录，与node项目目录</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /www/dev/node <span class=\"comment\">//目录位置可选</span></span><br><span class=\"line\">下载node二进制文件包：</span><br><span class=\"line\"> sudo wget https:<span class=\"comment\">//nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找</span></span><br><span class=\"line\">解压包命令：</span><br><span class=\"line\"> sudo tar zxvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz --这里有个坑 这个命令会报错</span><br><span class=\"line\">正确解压命令：</span><br><span class=\"line\"> sudo tar xvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz</span><br><span class=\"line\">配置node环境变量：</span><br><span class=\"line\"> sudo vim /etc/profile</span><br><span class=\"line\"> <span class=\"comment\">//按i插入到最下面</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> NODE_HOME=<span class=\"regexp\">/www/</span>dev/node/node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64 <span class=\"comment\">//node安装目录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符</span><br><span class=\"line\">编辑完以后按<span class=\"string\">'esc'</span> 输入<span class=\"string\">':wq'</span> 回车保存退出</span><br><span class=\"line\">source /etc/profile --使文件生效</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:<span class=\"comment\">//npmjs.org/install.sh | sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装pm2\"><a href=\"#安装pm2\" class=\"headerlink\" title=\"安装pm2\"></a>安装pm2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm</span><br><span class=\"line\">//执行完这两步才可以npm install</span><br><span class=\"line\">sudo npm install pm2 -g</span><br><span class=\"line\">同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传并启动项目-已上传忽略\"><a href=\"#上传并启动项目-已上传忽略\" class=\"headerlink\" title=\"上传并启动项目(已上传忽略)\"></a>上传并启动项目(已上传忽略)</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install <span class=\"comment\">//安装项目所需依赖</span></span><br><span class=\"line\">启动项目: sudo pm2 start index.js<span class=\"comment\">// -- node index.js</span></span><br><span class=\"line\">停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装配置Nginx\"><a href=\"#安装配置Nginx\" class=\"headerlink\" title=\"安装配置Nginx\"></a>安装配置Nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开始前，请确认gcc g++开发类库是否装好，默认已经安装。</span></span><br><span class=\"line\">  whereis gcc</span><br><span class=\"line\"><span class=\"comment\">//进入安装目录</span></span><br><span class=\"line\">  cd /usr/local/src</span><br><span class=\"line\"><span class=\"comment\">//安装PCRE库</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//zlib.net/zlib-1.2.11.tar.gz</span></span><br><span class=\"line\">  tar zxvf zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span>.tar.gz</span><br><span class=\"line\">  cd zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\"><span class=\"comment\">//安装openssl（某些vps默认没装ssl)</span></span><br><span class=\"line\">  wget https:<span class=\"comment\">//www.openssl.org/source/openssl-1.0.1t.tar.gz</span></span><br><span class=\"line\">  tar -zxvf openssl<span class=\"number\">-1.0</span><span class=\"number\">.1</span>t.tar.gz</span><br><span class=\"line\"><span class=\"comment\">//安装nginx</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//nginx.org/download/nginx-1.1.10.tar.gz</span></span><br><span class=\"line\">  tar -zxvf nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span>.tar.gz</span><br><span class=\"line\">  cd nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\">--make install可能会报错：make: *** No rule to make target <span class=\"string\">'install'</span>.  Stop.</span><br><span class=\"line\">解决：</span><br><span class=\"line\">ubuntu下--</span><br><span class=\"line\">  apt-get install openssl</span><br><span class=\"line\">  apt-get install libssl-dev</span><br><span class=\"line\">centos下--</span><br><span class=\"line\">  yum -y install openssl openssl-devel</span><br><span class=\"line\">然后再从./configure开始执行</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查看nginx是否启动:</span></span><br><span class=\"line\">启动：/usr/local/nginx/sbin/nginx</span><br><span class=\"line\">停止：/usr/local/nginx/sbin/nginx -s stop</span><br><span class=\"line\"> ps aux|grep nginx</span><br><span class=\"line\"><span class=\"comment\">//结果:</span></span><br><span class=\"line\">root     <span class=\"number\">124023</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.0</span>  <span class=\"number\">28732</span>   <span class=\"number\">540</span> ?        Ss   <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">nobody   <span class=\"number\">124024</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.2</span>  <span class=\"number\">29132</span>  <span class=\"number\">2536</span> ?        S    <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: worker process</span><br><span class=\"line\">root     <span class=\"number\">124048</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.1</span>  <span class=\"number\">14684</span>  <span class=\"number\">1036</span> pts/<span class=\"number\">0</span>    S+   <span class=\"number\">17</span>:<span class=\"number\">04</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> grep --color=auto nginx</span><br><span class=\"line\"><span class=\"comment\">//必须有前两个进程 否则启动失败</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改了配置文件以后重启nginx</span></span><br><span class=\"line\">/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload</span><br><span class=\"line\"><span class=\"comment\">//贴一小段配置代码：</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">8090</span>;</span><br><span class=\"line\">        server_name  www.shadow.com; #服务器域名</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           # root   html;</span><br><span class=\"line\">           # index  index.html index.htm;</span><br><span class=\"line\">           proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">           proxy_redirect <span class=\"keyword\">default</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the static page /50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /<span class=\"number\">50</span>x.html;</span><br><span class=\"line\">        location = <span class=\"regexp\">/50x.html &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            root   html;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//切换到安装目录</span></span><br><span class=\"line\"> cd /usr/local/soft/  --没有就新建 mkdir soft</span><br><span class=\"line\"><span class=\"comment\">//下载：</span></span><br><span class=\"line\"> curl -O https:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span></span><br><span class=\"line\"><span class=\"comment\">//解压：</span></span><br><span class=\"line\"> tar -zxvf mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span>.tgz</span><br><span class=\"line\"><span class=\"comment\">//移动到/usr/local/mongodb/目录：</span></span><br><span class=\"line\"> mv mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span> /usr/local/mongodb</span><br><span class=\"line\"><span class=\"comment\">//编辑环境变量：</span></span><br><span class=\"line\"> vim /etc/profile</span><br><span class=\"line\"><span class=\"keyword\">export</span> MONGODB_HOME=<span class=\"regexp\">/usr/</span>local/mongodb/</span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$MONGODB_HOME/bin --添加到之前的node前</span><br><span class=\"line\">source /etc/profile --使之生效</span><br><span class=\"line\"><span class=\"comment\">//切换到新目录的bin目录下：</span></span><br><span class=\"line\"> cd /usr/local/mongodb/bin</span><br><span class=\"line\"><span class=\"comment\">//新建mongodb.conf文件：--touch mongodb.conf</span></span><br><span class=\"line\">#端口号</span><br><span class=\"line\">port=<span class=\"number\">27017</span></span><br><span class=\"line\">#数据目录--没有需要手动创建 mkdir</span><br><span class=\"line\">dbpath=<span class=\"regexp\">/usr/</span>local/mongodb/data/db</span><br><span class=\"line\">#日志目录--没有需要手动创建 mkdir touch</span><br><span class=\"line\">logpath=<span class=\"regexp\">/usr/</span>local/mongodb/log/out.log</span><br><span class=\"line\">#设置后台运行</span><br><span class=\"line\">fork=<span class=\"literal\">true</span></span><br><span class=\"line\">#日志输出方式</span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">#开启认证</span><br><span class=\"line\">#auth=true</span><br><span class=\"line\"><span class=\"comment\">//启动mongodb:</span></span><br><span class=\"line\">./mongod -f mongodb.conf</span><br><span class=\"line\">或者：./mongod -config mongodb.conf</span><br></pre></td></tr></table></figure>"},{"title":"js踩坑IE8","date":"2018-04-12T02:55:15.000Z","_content":"JavaScript在ie8的兼容处理(如forEach、indexOf..)\n<!-- more -->\n##### 记一次项目中遇到得坑吧。。\n1.IE8不兼容forEach--作为一个遍历神器 不能用怎么行  0.0\n```JavaScript\n//解决办法 在js文件中添加下面的代码：\nif ( !Array.prototype.forEach ) {  \n  Array.prototype.forEach = function forEach( callback, thisArg ) {  \n    var T, k;  \n    if ( this == null ) {  \n      throw new TypeError( \"this is null or not defined\" );  \n    }  \n    var O = Object(this);  \n    var len = O.length >>> 0;   \n    if ( typeof callback !== \"function\" ) {  \n      throw new TypeError( callback + \" is not a function\" );  \n    }  \n    if ( arguments.length > 1 ) {  \n      T = thisArg;  \n    }  \n    k = 0;  \n    while( k < len ) {  \n      var kValue;  \n      if ( k in O ) {  \n        kValue = O[ k ];  \n        callback.call( T, kValue, k, O );  \n      }  \n      k++;  \n    }  \n  };  \n}  \n//要加在调用forEach之前\n```\n2.IE8不兼容indexOf\n```JavaScript\nif (!Array.prototype.indexOf){  \n        Array.prototype.indexOf = function(elt /*, from*/){  \n        var len = this.length >>> 0;  \n        var from = Number(arguments[1]) || 0;  \n        from = (from < 0)  \n             ? Math.ceil(from)  \n             : Math.floor(from);  \n        if (from < 0)  \n          from += len;  \n        for (; from < len; from++)  \n        {  \n          if (from in this &&  \n              this[from] === elt)  \n            return from;  \n        }  \n        return -1;  \n      };  \n    }  \n//同样加在调用indexOf之前\n```","source":"_posts/js踩坑IE8.md","raw":"---\ntitle: js踩坑IE8\ndate: 2018-04-12 10:55:15\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript在ie8的兼容处理(如forEach、indexOf..)\n<!-- more -->\n##### 记一次项目中遇到得坑吧。。\n1.IE8不兼容forEach--作为一个遍历神器 不能用怎么行  0.0\n```JavaScript\n//解决办法 在js文件中添加下面的代码：\nif ( !Array.prototype.forEach ) {  \n  Array.prototype.forEach = function forEach( callback, thisArg ) {  \n    var T, k;  \n    if ( this == null ) {  \n      throw new TypeError( \"this is null or not defined\" );  \n    }  \n    var O = Object(this);  \n    var len = O.length >>> 0;   \n    if ( typeof callback !== \"function\" ) {  \n      throw new TypeError( callback + \" is not a function\" );  \n    }  \n    if ( arguments.length > 1 ) {  \n      T = thisArg;  \n    }  \n    k = 0;  \n    while( k < len ) {  \n      var kValue;  \n      if ( k in O ) {  \n        kValue = O[ k ];  \n        callback.call( T, kValue, k, O );  \n      }  \n      k++;  \n    }  \n  };  \n}  \n//要加在调用forEach之前\n```\n2.IE8不兼容indexOf\n```JavaScript\nif (!Array.prototype.indexOf){  \n        Array.prototype.indexOf = function(elt /*, from*/){  \n        var len = this.length >>> 0;  \n        var from = Number(arguments[1]) || 0;  \n        from = (from < 0)  \n             ? Math.ceil(from)  \n             : Math.floor(from);  \n        if (from < 0)  \n          from += len;  \n        for (; from < len; from++)  \n        {  \n          if (from in this &&  \n              this[from] === elt)  \n            return from;  \n        }  \n        return -1;  \n      };  \n    }  \n//同样加在调用indexOf之前\n```","slug":"js踩坑IE8","published":1,"updated":"2018-08-31T04:48:04.049Z","_id":"cjlhemj9a0013ponuiuekgtuo","comments":1,"layout":"post","photos":[],"link":"","content":"<p>JavaScript在ie8的兼容处理(如forEach、indexOf..)<br><a id=\"more\"></a></p>\n<h5 id=\"记一次项目中遇到得坑吧。。\"><a href=\"#记一次项目中遇到得坑吧。。\" class=\"headerlink\" title=\"记一次项目中遇到得坑吧。。\"></a>记一次项目中遇到得坑吧。。</h5><p>1.IE8不兼容forEach–作为一个遍历神器 不能用怎么行  0.0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决办法 在js文件中添加下面的代码：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">Array</span>.prototype.forEach ) &#123;  </span><br><span class=\"line\">  <span class=\"built_in\">Array</span>.prototype.forEach = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">forEach</span>(<span class=\"params\"> callback, thisArg </span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> T, k;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">this</span> == <span class=\"literal\">null</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( <span class=\"string\">\"this is null or not defined\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> O = <span class=\"built_in\">Object</span>(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = O.length &gt;&gt;&gt; <span class=\"number\">0</span>;   </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">typeof</span> callback !== <span class=\"string\">\"function\"</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( callback + <span class=\"string\">\" is not a function\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"built_in\">arguments</span>.length &gt; <span class=\"number\">1</span> ) &#123;  </span><br><span class=\"line\">      T = thisArg;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    k = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">while</span>( k &lt; len ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">var</span> kValue;  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( k <span class=\"keyword\">in</span> O ) &#123;  </span><br><span class=\"line\">        kValue = O[ k ];  </span><br><span class=\"line\">        callback.call( T, kValue, k, O );  </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">      k++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  &#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">//要加在调用forEach之前</span></span><br></pre></td></tr></table></figure></p>\n<p>2.IE8不兼容indexOf<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.prototype.indexOf)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">Array</span>.prototype.indexOf = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elt <span class=\"regexp\">/*, from*/</span></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> len = <span class=\"keyword\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">from</span> = <span class=\"built_in\">Number</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]) || <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">from</span> = (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">             ? <span class=\"built_in\">Math</span>.ceil(<span class=\"keyword\">from</span>)  </span><br><span class=\"line\">             : <span class=\"built_in\">Math</span>.floor(<span class=\"keyword\">from</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">          <span class=\"keyword\">from</span> += len;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; <span class=\"keyword\">from</span> &lt; len; <span class=\"keyword\">from</span>++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> <span class=\"keyword\">in</span> <span class=\"keyword\">this</span> &amp;&amp;  </span><br><span class=\"line\">              <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>] === elt)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">from</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;  </span><br><span class=\"line\">      &#125;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"comment\">//同样加在调用indexOf之前</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>JavaScript在ie8的兼容处理(如forEach、indexOf..)<br>","more":"</p>\n<h5 id=\"记一次项目中遇到得坑吧。。\"><a href=\"#记一次项目中遇到得坑吧。。\" class=\"headerlink\" title=\"记一次项目中遇到得坑吧。。\"></a>记一次项目中遇到得坑吧。。</h5><p>1.IE8不兼容forEach–作为一个遍历神器 不能用怎么行  0.0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决办法 在js文件中添加下面的代码：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">Array</span>.prototype.forEach ) &#123;  </span><br><span class=\"line\">  <span class=\"built_in\">Array</span>.prototype.forEach = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">forEach</span>(<span class=\"params\"> callback, thisArg </span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> T, k;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">this</span> == <span class=\"literal\">null</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( <span class=\"string\">\"this is null or not defined\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> O = <span class=\"built_in\">Object</span>(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = O.length &gt;&gt;&gt; <span class=\"number\">0</span>;   </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">typeof</span> callback !== <span class=\"string\">\"function\"</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( callback + <span class=\"string\">\" is not a function\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"built_in\">arguments</span>.length &gt; <span class=\"number\">1</span> ) &#123;  </span><br><span class=\"line\">      T = thisArg;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    k = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">while</span>( k &lt; len ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">var</span> kValue;  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( k <span class=\"keyword\">in</span> O ) &#123;  </span><br><span class=\"line\">        kValue = O[ k ];  </span><br><span class=\"line\">        callback.call( T, kValue, k, O );  </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">      k++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  &#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">//要加在调用forEach之前</span></span><br></pre></td></tr></table></figure></p>\n<p>2.IE8不兼容indexOf<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.prototype.indexOf)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">Array</span>.prototype.indexOf = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elt <span class=\"regexp\">/*, from*/</span></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> len = <span class=\"keyword\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">from</span> = <span class=\"built_in\">Number</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]) || <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">from</span> = (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">             ? <span class=\"built_in\">Math</span>.ceil(<span class=\"keyword\">from</span>)  </span><br><span class=\"line\">             : <span class=\"built_in\">Math</span>.floor(<span class=\"keyword\">from</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">          <span class=\"keyword\">from</span> += len;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; <span class=\"keyword\">from</span> &lt; len; <span class=\"keyword\">from</span>++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> <span class=\"keyword\">in</span> <span class=\"keyword\">this</span> &amp;&amp;  </span><br><span class=\"line\">              <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>] === elt)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">from</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;  </span><br><span class=\"line\">      &#125;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"comment\">//同样加在调用indexOf之前</span></span><br></pre></td></tr></table></figure></p>"},{"title":"nodejs搭建简易脚手架遇到得坑","date":"2018-06-14T05:37:32.000Z","_content":"nodejs搭建自己的cli--目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决\n<!-- more -->\n##### 第三方库\n*   [commander.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js)，可以自动的解析命令和参数，用于处理用户输入的命令。\n*   [download-git-repo](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo)，下载并提取 git 仓库，用于下载项目模板。\n*   [Inquirer.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js)，通用的命令行用户界面集合，用于和用户进行交互。\n*   [handlebars.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js)，模板引擎，将用户提交的信息动态填充到文件中。\n*   [ora](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora)，下载过程久的话，可以用于显示下载中的动画效果。\n*   [chalk](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk)，可以给终端的字体加上颜色。\n*   [log-symbols](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols)，可以在终端上显示出 √ 或 × 等的图标。\n\n##### 首先自己搭好一个demo传到github(或者gitLab都可以)\n修改demo得package.json(handlebars语法):\n```JavaScript\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{description}}\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"{{author}}\",\n  \"license\": \"ISC\"\n}\n```\n##### 再建一个新的空项目：\n`npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S`\n在package.json加入字段：\n```JavaScript\n\"bin\": {\n    \"shadownc\": \"./index.js\"//执行文件路径\n  },\n```\n##### index.js:\n```JavaScript\n//在顶部添加这句:\n#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，\n首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。\n//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)\n//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git\n//正确写法：\ndownload('github:Shadownc/express-tpl#master', name, {clone: true}, (err) => {\n    console.log(err ? 'Fail' : 'Success')\n})\n//还有一种简写：\nShadownc/express-tpl#master\n//#master为模板所在的分支\n```\n欢迎加群讨论：163958730","source":"_posts/nodejs搭建简易脚手架遇到得坑.md","raw":"---\ntitle: nodejs搭建简易脚手架遇到得坑\ndate: 2018-06-14 13:37:32\ncategories:\n- node\ntags:\n- node\n---\nnodejs搭建自己的cli--目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决\n<!-- more -->\n##### 第三方库\n*   [commander.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js)，可以自动的解析命令和参数，用于处理用户输入的命令。\n*   [download-git-repo](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo)，下载并提取 git 仓库，用于下载项目模板。\n*   [Inquirer.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js)，通用的命令行用户界面集合，用于和用户进行交互。\n*   [handlebars.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js)，模板引擎，将用户提交的信息动态填充到文件中。\n*   [ora](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora)，下载过程久的话，可以用于显示下载中的动画效果。\n*   [chalk](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk)，可以给终端的字体加上颜色。\n*   [log-symbols](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols)，可以在终端上显示出 √ 或 × 等的图标。\n\n##### 首先自己搭好一个demo传到github(或者gitLab都可以)\n修改demo得package.json(handlebars语法):\n```JavaScript\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{description}}\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"{{author}}\",\n  \"license\": \"ISC\"\n}\n```\n##### 再建一个新的空项目：\n`npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S`\n在package.json加入字段：\n```JavaScript\n\"bin\": {\n    \"shadownc\": \"./index.js\"//执行文件路径\n  },\n```\n##### index.js:\n```JavaScript\n//在顶部添加这句:\n#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，\n首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。\n//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)\n//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git\n//正确写法：\ndownload('github:Shadownc/express-tpl#master', name, {clone: true}, (err) => {\n    console.log(err ? 'Fail' : 'Success')\n})\n//还有一种简写：\nShadownc/express-tpl#master\n//#master为模板所在的分支\n```\n欢迎加群讨论：163958730","slug":"nodejs搭建简易脚手架遇到得坑","published":1,"updated":"2018-08-31T05:20:27.851Z","_id":"cjlhemj9e0015ponur6ih0pil","comments":1,"layout":"post","photos":[],"link":"","content":"<p>nodejs搭建自己的cli–目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决<br><a id=\"more\"></a></p>\n<h5 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h5><ul>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js\" target=\"_blank\" rel=\"noopener\">commander.js</a>，可以自动的解析命令和参数，用于处理用户输入的命令。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo\" target=\"_blank\" rel=\"noopener\">download-git-repo</a>，下载并提取 git 仓库，用于下载项目模板。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js\" target=\"_blank\" rel=\"noopener\">Inquirer.js</a>，通用的命令行用户界面集合，用于和用户进行交互。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js\" target=\"_blank\" rel=\"noopener\">handlebars.js</a>，模板引擎，将用户提交的信息动态填充到文件中。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora\" target=\"_blank\" rel=\"noopener\">ora</a>，下载过程久的话，可以用于显示下载中的动画效果。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk\" target=\"_blank\" rel=\"noopener\">chalk</a>，可以给终端的字体加上颜色。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols\" target=\"_blank\" rel=\"noopener\">log-symbols</a>，可以在终端上显示出 √ 或 × 等的图标。</li>\n</ul>\n<h5 id=\"首先自己搭好一个demo传到github-或者gitLab都可以\"><a href=\"#首先自己搭好一个demo传到github-或者gitLab都可以\" class=\"headerlink\" title=\"首先自己搭好一个demo传到github(或者gitLab都可以)\"></a>首先自己搭好一个demo传到github(或者gitLab都可以)</h5><p>修改demo得package.json(handlebars语法):<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"再建一个新的空项目：\"><a href=\"#再建一个新的空项目：\" class=\"headerlink\" title=\"再建一个新的空项目：\"></a>再建一个新的空项目：</h5><p><code>npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S</code><br>在package.json加入字段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"bin\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"shadownc\"</span>: <span class=\"string\">\"./index.js\"</span><span class=\"comment\">//执行文件路径</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js:\"></a>index.js:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顶部添加这句:</span></span><br><span class=\"line\"><span class=\"meta\">#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，</span></span><br><span class=\"line\">首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。</span><br><span class=\"line\"><span class=\"comment\">//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)</span></span><br><span class=\"line\"><span class=\"comment\">//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git</span></span><br><span class=\"line\"><span class=\"comment\">//正确写法：</span></span><br><span class=\"line\">download(<span class=\"string\">'github:Shadownc/express-tpl#master'</span>, name, &#123;<span class=\"attr\">clone</span>: <span class=\"literal\">true</span>&#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err ? <span class=\"string\">'Fail'</span> : <span class=\"string\">'Success'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//还有一种简写：</span></span><br><span class=\"line\">Shadownc/express-tpl#master</span><br><span class=\"line\"><span class=\"comment\">//#master为模板所在的分支</span></span><br></pre></td></tr></table></figure>\n<p>欢迎加群讨论：163958730</p>\n","site":{"data":{}},"excerpt":"<p>nodejs搭建自己的cli–目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决<br>","more":"</p>\n<h5 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h5><ul>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js\" target=\"_blank\" rel=\"noopener\">commander.js</a>，可以自动的解析命令和参数，用于处理用户输入的命令。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo\" target=\"_blank\" rel=\"noopener\">download-git-repo</a>，下载并提取 git 仓库，用于下载项目模板。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js\" target=\"_blank\" rel=\"noopener\">Inquirer.js</a>，通用的命令行用户界面集合，用于和用户进行交互。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js\" target=\"_blank\" rel=\"noopener\">handlebars.js</a>，模板引擎，将用户提交的信息动态填充到文件中。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora\" target=\"_blank\" rel=\"noopener\">ora</a>，下载过程久的话，可以用于显示下载中的动画效果。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk\" target=\"_blank\" rel=\"noopener\">chalk</a>，可以给终端的字体加上颜色。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols\" target=\"_blank\" rel=\"noopener\">log-symbols</a>，可以在终端上显示出 √ 或 × 等的图标。</li>\n</ul>\n<h5 id=\"首先自己搭好一个demo传到github-或者gitLab都可以\"><a href=\"#首先自己搭好一个demo传到github-或者gitLab都可以\" class=\"headerlink\" title=\"首先自己搭好一个demo传到github(或者gitLab都可以)\"></a>首先自己搭好一个demo传到github(或者gitLab都可以)</h5><p>修改demo得package.json(handlebars语法):<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"再建一个新的空项目：\"><a href=\"#再建一个新的空项目：\" class=\"headerlink\" title=\"再建一个新的空项目：\"></a>再建一个新的空项目：</h5><p><code>npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S</code><br>在package.json加入字段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"bin\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"shadownc\"</span>: <span class=\"string\">\"./index.js\"</span><span class=\"comment\">//执行文件路径</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js:\"></a>index.js:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顶部添加这句:</span></span><br><span class=\"line\"><span class=\"meta\">#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，</span></span><br><span class=\"line\">首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。</span><br><span class=\"line\"><span class=\"comment\">//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)</span></span><br><span class=\"line\"><span class=\"comment\">//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git</span></span><br><span class=\"line\"><span class=\"comment\">//正确写法：</span></span><br><span class=\"line\">download(<span class=\"string\">'github:Shadownc/express-tpl#master'</span>, name, &#123;<span class=\"attr\">clone</span>: <span class=\"literal\">true</span>&#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err ? <span class=\"string\">'Fail'</span> : <span class=\"string\">'Success'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//还有一种简写：</span></span><br><span class=\"line\">Shadownc/express-tpl#master</span><br><span class=\"line\"><span class=\"comment\">//#master为模板所在的分支</span></span><br></pre></td></tr></table></figure>\n<p>欢迎加群讨论：163958730</p>"},{"title":"nodejs批量修改文件名","date":"2018-03-06T05:44:42.000Z","_content":"nodejs批量修改文件名源代码及使用方法\n<!-- more -->\n##### 先上代码：\n```JavaScript\nlet fs = require('fs'),\n    src = 'src',\n    dist = 'dist',\n    args = process.argv.slice(2),//从数组第二个开始返回\n    filename = 'image',\n    index = 0;\n\n//执行命令错误提示\nif (args.length === 0 || args[0].match('--help')) {\n    console.log('--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n');\n    return false;\n}\n\nargs.forEach((item, i) => {\n    if (item.match('-src')) {\n        src = args[i + 1];//获取源文件文件夹名称\n    } else if (item.match('-dist')) {\n        dist = args[i + 1];//获取目标文件文件夹名称\n    } else if (item.match('-n')) {\n        filename = args[i + 1];//文件名\n    } else if (item.match('-i')) {\n        index = args[i + 1];//文件索引 从x开始\n    }\n});\n\nfs.readdir(src, (err, files) => {//读取源文件目录\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(dist);\n        fs.access(dist, existing => {\n            if (existing) {//如果dist文件夹不存在则新建文件夹\n                fs.mkdir(dist, () => {\n                    copyFile(files, src, dist, filename, index);\n                })\n            } else {\n                copyFile(files, src, dist, filename, index);\n            }\n        });\n    }\n});\n\nfunction copyFile(files, src, dist, filename, index) {\n    files.forEach(n => {\n        let readFile,\n            writeFile,\n            arr = n.split('.'),\n            oldPath = src + '/' + n,//老路径\n            newPath = dist + '/' + filename + index + '.' + arr[arr.length - 1];//拼接文件后缀名 新路径\n        fs.stat(oldPath, (err, stats) => {\n            if (err) {\n                console.log(err);\n            } else if (stats.isFile()) {//判断是否是文件 执行复制移动操作\n                readFile = fs.createReadStream(oldPath);\n                writeFile = fs.createWriteStream(newPath);\n                readFile.pipe(writeFile);//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。\n            }\n        });\n        index++;\n    })\n}\n```\n**使用方法：**`node xx -src imgdir -dist newImgDir -n newName- -i 1`\n>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名\nnewName：新图片的前缀名；1：索引从1开始 可以自定义\n\n","source":"_posts/nodejs批量修改文件名.md","raw":"---\ntitle: nodejs批量修改文件名\ndate: 2018-03-06 13:44:42\ncategories:\n- node\ntags:\n- node\n---\nnodejs批量修改文件名源代码及使用方法\n<!-- more -->\n##### 先上代码：\n```JavaScript\nlet fs = require('fs'),\n    src = 'src',\n    dist = 'dist',\n    args = process.argv.slice(2),//从数组第二个开始返回\n    filename = 'image',\n    index = 0;\n\n//执行命令错误提示\nif (args.length === 0 || args[0].match('--help')) {\n    console.log('--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n');\n    return false;\n}\n\nargs.forEach((item, i) => {\n    if (item.match('-src')) {\n        src = args[i + 1];//获取源文件文件夹名称\n    } else if (item.match('-dist')) {\n        dist = args[i + 1];//获取目标文件文件夹名称\n    } else if (item.match('-n')) {\n        filename = args[i + 1];//文件名\n    } else if (item.match('-i')) {\n        index = args[i + 1];//文件索引 从x开始\n    }\n});\n\nfs.readdir(src, (err, files) => {//读取源文件目录\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(dist);\n        fs.access(dist, existing => {\n            if (existing) {//如果dist文件夹不存在则新建文件夹\n                fs.mkdir(dist, () => {\n                    copyFile(files, src, dist, filename, index);\n                })\n            } else {\n                copyFile(files, src, dist, filename, index);\n            }\n        });\n    }\n});\n\nfunction copyFile(files, src, dist, filename, index) {\n    files.forEach(n => {\n        let readFile,\n            writeFile,\n            arr = n.split('.'),\n            oldPath = src + '/' + n,//老路径\n            newPath = dist + '/' + filename + index + '.' + arr[arr.length - 1];//拼接文件后缀名 新路径\n        fs.stat(oldPath, (err, stats) => {\n            if (err) {\n                console.log(err);\n            } else if (stats.isFile()) {//判断是否是文件 执行复制移动操作\n                readFile = fs.createReadStream(oldPath);\n                writeFile = fs.createWriteStream(newPath);\n                readFile.pipe(writeFile);//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。\n            }\n        });\n        index++;\n    })\n}\n```\n**使用方法：**`node xx -src imgdir -dist newImgDir -n newName- -i 1`\n>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名\nnewName：新图片的前缀名；1：索引从1开始 可以自定义\n\n","slug":"nodejs批量修改文件名","published":1,"updated":"2018-08-31T05:19:37.730Z","_id":"cjlhemj9i0018ponu94ka0qrh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>nodejs批量修改文件名源代码及使用方法<br><a id=\"more\"></a></p>\n<h5 id=\"先上代码：\"><a href=\"#先上代码：\" class=\"headerlink\" title=\"先上代码：\"></a>先上代码：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>),</span><br><span class=\"line\">    src = <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    dist = <span class=\"string\">'dist'</span>,</span><br><span class=\"line\">    args = process.argv.slice(<span class=\"number\">2</span>),<span class=\"comment\">//从数组第二个开始返回</span></span><br><span class=\"line\">    filename = <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行命令错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (args.length === <span class=\"number\">0</span> || args[<span class=\"number\">0</span>].match(<span class=\"string\">'--help'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">args.forEach(<span class=\"function\">(<span class=\"params\">item, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-src'</span>)) &#123;</span><br><span class=\"line\">        src = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取源文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-dist'</span>)) &#123;</span><br><span class=\"line\">        dist = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取目标文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-n'</span>)) &#123;</span><br><span class=\"line\">        filename = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件名</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-i'</span>)) &#123;</span><br><span class=\"line\">        index = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件索引 从x开始</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdir(src, (err, files) =&gt; &#123;<span class=\"comment\">//读取源文件目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(dist);</span><br><span class=\"line\">        fs.access(dist, existing =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (existing) &#123;<span class=\"comment\">//如果dist文件夹不存在则新建文件夹</span></span><br><span class=\"line\">                fs.mkdir(dist, () =&gt; &#123;</span><br><span class=\"line\">                    copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyFile</span>(<span class=\"params\">files, src, dist, filename, index</span>) </span>&#123;</span><br><span class=\"line\">    files.forEach(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> readFile,</span><br><span class=\"line\">            writeFile,</span><br><span class=\"line\">            arr = n.split(<span class=\"string\">'.'</span>),</span><br><span class=\"line\">            oldPath = src + <span class=\"string\">'/'</span> + n,<span class=\"comment\">//老路径</span></span><br><span class=\"line\">            newPath = dist + <span class=\"string\">'/'</span> + filename + index + <span class=\"string\">'.'</span> + arr[arr.length - <span class=\"number\">1</span>];<span class=\"comment\">//拼接文件后缀名 新路径</span></span><br><span class=\"line\">        fs.stat(oldPath, (err, stats) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stats.isFile()) &#123;<span class=\"comment\">//判断是否是文件 执行复制移动操作</span></span><br><span class=\"line\">                readFile = fs.createReadStream(oldPath);</span><br><span class=\"line\">                writeFile = fs.createWriteStream(newPath);</span><br><span class=\"line\">                readFile.pipe(writeFile);<span class=\"comment\">//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>使用方法：</strong><code>node xx -src imgdir -dist newImgDir -n newName- -i 1</code></p>\n<blockquote>\n<p>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名<br>newName：新图片的前缀名；1：索引从1开始 可以自定义</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>nodejs批量修改文件名源代码及使用方法<br>","more":"</p>\n<h5 id=\"先上代码：\"><a href=\"#先上代码：\" class=\"headerlink\" title=\"先上代码：\"></a>先上代码：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>),</span><br><span class=\"line\">    src = <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    dist = <span class=\"string\">'dist'</span>,</span><br><span class=\"line\">    args = process.argv.slice(<span class=\"number\">2</span>),<span class=\"comment\">//从数组第二个开始返回</span></span><br><span class=\"line\">    filename = <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行命令错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (args.length === <span class=\"number\">0</span> || args[<span class=\"number\">0</span>].match(<span class=\"string\">'--help'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">args.forEach(<span class=\"function\">(<span class=\"params\">item, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-src'</span>)) &#123;</span><br><span class=\"line\">        src = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取源文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-dist'</span>)) &#123;</span><br><span class=\"line\">        dist = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取目标文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-n'</span>)) &#123;</span><br><span class=\"line\">        filename = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件名</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-i'</span>)) &#123;</span><br><span class=\"line\">        index = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件索引 从x开始</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdir(src, (err, files) =&gt; &#123;<span class=\"comment\">//读取源文件目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(dist);</span><br><span class=\"line\">        fs.access(dist, existing =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (existing) &#123;<span class=\"comment\">//如果dist文件夹不存在则新建文件夹</span></span><br><span class=\"line\">                fs.mkdir(dist, () =&gt; &#123;</span><br><span class=\"line\">                    copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyFile</span>(<span class=\"params\">files, src, dist, filename, index</span>) </span>&#123;</span><br><span class=\"line\">    files.forEach(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> readFile,</span><br><span class=\"line\">            writeFile,</span><br><span class=\"line\">            arr = n.split(<span class=\"string\">'.'</span>),</span><br><span class=\"line\">            oldPath = src + <span class=\"string\">'/'</span> + n,<span class=\"comment\">//老路径</span></span><br><span class=\"line\">            newPath = dist + <span class=\"string\">'/'</span> + filename + index + <span class=\"string\">'.'</span> + arr[arr.length - <span class=\"number\">1</span>];<span class=\"comment\">//拼接文件后缀名 新路径</span></span><br><span class=\"line\">        fs.stat(oldPath, (err, stats) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stats.isFile()) &#123;<span class=\"comment\">//判断是否是文件 执行复制移动操作</span></span><br><span class=\"line\">                readFile = fs.createReadStream(oldPath);</span><br><span class=\"line\">                writeFile = fs.createWriteStream(newPath);</span><br><span class=\"line\">                readFile.pipe(writeFile);<span class=\"comment\">//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>使用方法：</strong><code>node xx -src imgdir -dist newImgDir -n newName- -i 1</code></p>\n<blockquote>\n<p>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名<br>newName：新图片的前缀名；1：索引从1开始 可以自定义</p>\n</blockquote>"},{"title":"return和return false的区别","date":"2018-05-16T06:56:34.000Z","_content":"JavaScript return和return false的区别\n<!-- more -->\n##### return和return false的区别\n一、返回控制与函数结果，\n\n语法为：return 表达式;\n语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果\n\n 二、返回控制，\n\n无函数结果，语法为：return;\n\n在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   \n\n Return False 就相当于终止符，Return True 就相当于执行符。   \n\n 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   \n\n onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   \n\n 你想取消对象的默认动作就可以return false。\n首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。\n```JavaScript\nfunction a(){\n\n   if(True)\n       return false;\n},//这是没有任何问题的。\n```\n\n如果我改成这种\n\n```JavaScript\nfunction a(){\n    return false\n}\nfunction b(){\n    console.log(11);\n    return true\n}\nfunction c(){\n    console.log(22);\n    return true\n}\nfunction test() {\n    if(!a()){\n        console.log(33);\n        return\n    }\n    b();\n    c();\n  }\n  test();//结果只打印33 在if里面加return和return false效果是一样得\n```\n即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面\n\nreturn false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。\n\n总之：return false 只在当前函数有效，不会影响其他外部函数的执行。\n\n \n\n三：总结\n\nretrun true； 返回正确的处理结果。\n\nreturn false；分会错误的处理结果，终止处理。\n\nreturn；把控制权返回给页面。\n\n","source":"_posts/return和returnFalse的区别.md","raw":"---\ntitle: return和return false的区别\ndate: 2018-05-16 14:56:34\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript return和return false的区别\n<!-- more -->\n##### return和return false的区别\n一、返回控制与函数结果，\n\n语法为：return 表达式;\n语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果\n\n 二、返回控制，\n\n无函数结果，语法为：return;\n\n在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   \n\n Return False 就相当于终止符，Return True 就相当于执行符。   \n\n 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   \n\n onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   \n\n 你想取消对象的默认动作就可以return false。\n首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。\n```JavaScript\nfunction a(){\n\n   if(True)\n       return false;\n},//这是没有任何问题的。\n```\n\n如果我改成这种\n\n```JavaScript\nfunction a(){\n    return false\n}\nfunction b(){\n    console.log(11);\n    return true\n}\nfunction c(){\n    console.log(22);\n    return true\n}\nfunction test() {\n    if(!a()){\n        console.log(33);\n        return\n    }\n    b();\n    c();\n  }\n  test();//结果只打印33 在if里面加return和return false效果是一样得\n```\n即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面\n\nreturn false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。\n\n总之：return false 只在当前函数有效，不会影响其他外部函数的执行。\n\n \n\n三：总结\n\nretrun true； 返回正确的处理结果。\n\nreturn false；分会错误的处理结果，终止处理。\n\nreturn；把控制权返回给页面。\n\n","slug":"return和returnFalse的区别","published":1,"updated":"2018-08-31T05:19:14.297Z","_id":"cjlhemj9l001bponupdug0bdq","comments":1,"layout":"post","photos":[],"link":"","content":"<p>JavaScript return和return false的区别<br><a id=\"more\"></a></p>\n<h5 id=\"return和return-false的区别\"><a href=\"#return和return-false的区别\" class=\"headerlink\" title=\"return和return false的区别\"></a>return和return false的区别</h5><p>一、返回控制与函数结果，</p>\n<p>语法为：return 表达式;<br>语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果</p>\n<p> 二、返回控制，</p>\n<p>无函数结果，语法为：return;</p>\n<p>在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   </p>\n<p> Return False 就相当于终止符，Return True 就相当于执行符。   </p>\n<p> 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   </p>\n<p> onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   </p>\n<p> 你想取消对象的默认动作就可以return false。<br>首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(True)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"comment\">//这是没有任何问题的。</span></span><br></pre></td></tr></table></figure></p>\n<p>如果我改成这种</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">33</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">    c();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test();<span class=\"comment\">//结果只打印33 在if里面加return和return false效果是一样得</span></span><br></pre></td></tr></table></figure>\n<p>即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面</p>\n<p>return false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。</p>\n<p>总之：return false 只在当前函数有效，不会影响其他外部函数的执行。</p>\n<p>三：总结</p>\n<p>retrun true； 返回正确的处理结果。</p>\n<p>return false；分会错误的处理结果，终止处理。</p>\n<p>return；把控制权返回给页面。</p>\n","site":{"data":{}},"excerpt":"<p>JavaScript return和return false的区别<br>","more":"</p>\n<h5 id=\"return和return-false的区别\"><a href=\"#return和return-false的区别\" class=\"headerlink\" title=\"return和return false的区别\"></a>return和return false的区别</h5><p>一、返回控制与函数结果，</p>\n<p>语法为：return 表达式;<br>语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果</p>\n<p> 二、返回控制，</p>\n<p>无函数结果，语法为：return;</p>\n<p>在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   </p>\n<p> Return False 就相当于终止符，Return True 就相当于执行符。   </p>\n<p> 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   </p>\n<p> onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   </p>\n<p> 你想取消对象的默认动作就可以return false。<br>首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(True)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"comment\">//这是没有任何问题的。</span></span><br></pre></td></tr></table></figure></p>\n<p>如果我改成这种</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">33</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">    c();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test();<span class=\"comment\">//结果只打印33 在if里面加return和return false效果是一样得</span></span><br></pre></td></tr></table></figure>\n<p>即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面</p>\n<p>return false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。</p>\n<p>总之：return false 只在当前函数有效，不会影响其他外部函数的执行。</p>\n<p>三：总结</p>\n<p>retrun true； 返回正确的处理结果。</p>\n<p>return false；分会错误的处理结果，终止处理。</p>\n<p>return；把控制权返回给页面。</p>"},{"title":"travis-ci配置","date":"2018-07-18T07:52:53.000Z","_content":"travis-ci自动部署hexo到github教程\n<!-- more -->\n##### .travis.yml--贴一下配置文件\n```JavaScript\nlanguage: node_js\nnode_js: stable\n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\n    \n#安装hexo及插件\ninstall:\n  - npm install  \n\n#清除 生成\nscript:\n  - hexo clean  \n  - hexo g\n\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name \"username\"\n  - git config user.email \"useremail\"\n  - git add .\n  - git commit -m \"update\"\n  - git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" master:master\n  #- git push --force --quiet \"https://${GH_TOKEN}@${你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https}\" master:master\n\n#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build\n#branches:\n#  only:\n#    - blogTS\n\n#build以后的地址\nenv:\n global:\n   - GH_REF: (分发布用的分支地址)  //讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下\n```\n##### 步骤：\n创建 Personal access tokens\nPersonal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。\n\n在 `Settings` -> `Developer settings` -> `Personal access tokens` 中可以生成一个新的 token。\n\n权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。\n\n##### 配置 Travis CI\n注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 `Build only if .travis.yml is present`。你还可以开启 `Limit concurrent jobs` 限制并发任务。为了使配置文件更具通用性，我们需要在` Environment Variables` 中添加几个要用到的环境变量：\n```JavaScript\nGH_TOKEN（生成的 Personal access tokens）\nGIT_NAME（部署时的提交者名称）\nGIT_EMAIL（部署时的提交者邮箱）\nCUSTOM_DOMAIN（自定义域名）\nCUSTOM_PATH（自定义输出目录）\n```\n因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 `Display value in build log`，比如你的 `GH_TOKEN`，否则其它看到日志的人就可以操作你的仓库了。\n","source":"_posts/travis-ci配置.md","raw":"---\ntitle: travis-ci配置\ndate: 2018-07-18 15:52:53\ncategories:\n- git\ntags:\n- git\n---\ntravis-ci自动部署hexo到github教程\n<!-- more -->\n##### .travis.yml--贴一下配置文件\n```JavaScript\nlanguage: node_js\nnode_js: stable\n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\n    \n#安装hexo及插件\ninstall:\n  - npm install  \n\n#清除 生成\nscript:\n  - hexo clean  \n  - hexo g\n\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name \"username\"\n  - git config user.email \"useremail\"\n  - git add .\n  - git commit -m \"update\"\n  - git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" master:master\n  #- git push --force --quiet \"https://${GH_TOKEN}@${你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https}\" master:master\n\n#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build\n#branches:\n#  only:\n#    - blogTS\n\n#build以后的地址\nenv:\n global:\n   - GH_REF: (分发布用的分支地址)  //讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下\n```\n##### 步骤：\n创建 Personal access tokens\nPersonal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。\n\n在 `Settings` -> `Developer settings` -> `Personal access tokens` 中可以生成一个新的 token。\n\n权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。\n\n##### 配置 Travis CI\n注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 `Build only if .travis.yml is present`。你还可以开启 `Limit concurrent jobs` 限制并发任务。为了使配置文件更具通用性，我们需要在` Environment Variables` 中添加几个要用到的环境变量：\n```JavaScript\nGH_TOKEN（生成的 Personal access tokens）\nGIT_NAME（部署时的提交者名称）\nGIT_EMAIL（部署时的提交者邮箱）\nCUSTOM_DOMAIN（自定义域名）\nCUSTOM_PATH（自定义输出目录）\n```\n因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 `Display value in build log`，比如你的 `GH_TOKEN`，否则其它看到日志的人就可以操作你的仓库了。\n","slug":"travis-ci配置","published":1,"updated":"2018-08-31T05:18:49.489Z","_id":"cjlhemj9o001eponuxwyflzrx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>travis-ci自动部署hexo到github教程<br><a id=\"more\"></a></p>\n<h5 id=\"travis-yml–贴一下配置文件\"><a href=\"#travis-yml–贴一下配置文件\" class=\"headerlink\" title=\".travis.yml–贴一下配置文件\"></a>.travis.yml–贴一下配置文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">#安装hexo及插件</span><br><span class=\"line\">install:</span><br><span class=\"line\">  - npm install  </span><br><span class=\"line\"></span><br><span class=\"line\">#清除 生成</span><br><span class=\"line\">script:</span><br><span class=\"line\">  - hexo clean  </span><br><span class=\"line\">  - hexo g</span><br><span class=\"line\"></span><br><span class=\"line\">after_script:</span><br><span class=\"line\">  - cd ./public</span><br><span class=\"line\">  - git init</span><br><span class=\"line\">  - git config user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">  - git config user.email <span class=\"string\">\"useremail\"</span></span><br><span class=\"line\">  - git add .</span><br><span class=\"line\">  - git commit -m <span class=\"string\">\"update\"</span></span><br><span class=\"line\">  - git push --force --quiet <span class=\"string\">\"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\"</span> master:master</span><br><span class=\"line\">  #- git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https&#125;\" master:master</span><br><span class=\"line\"></span><br><span class=\"line\">#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build</span><br><span class=\"line\">#branches:</span><br><span class=\"line\">#  only:</span><br><span class=\"line\">#    - blogTS</span><br><span class=\"line\"></span><br><span class=\"line\">#build以后的地址</span><br><span class=\"line\">env:</span><br><span class=\"line\"> global:</span><br><span class=\"line\">   - GH_REF: (分发布用的分支地址)  <span class=\"comment\">//讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h5><p>创建 Personal access tokens<br>Personal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。</p>\n<p>在 <code>Settings</code> -&gt; <code>Developer settings</code> -&gt; <code>Personal access tokens</code> 中可以生成一个新的 token。</p>\n<p>权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。</p>\n<h5 id=\"配置-Travis-CI\"><a href=\"#配置-Travis-CI\" class=\"headerlink\" title=\"配置 Travis CI\"></a>配置 Travis CI</h5><p>注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 <code>Build only if .travis.yml is present</code>。你还可以开启 <code>Limit concurrent jobs</code> 限制并发任务。为了使配置文件更具通用性，我们需要在<code>Environment Variables</code> 中添加几个要用到的环境变量：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH_TOKEN（生成的 Personal access tokens）</span><br><span class=\"line\">GIT_NAME（部署时的提交者名称）</span><br><span class=\"line\">GIT_EMAIL（部署时的提交者邮箱）</span><br><span class=\"line\">CUSTOM_DOMAIN（自定义域名）</span><br><span class=\"line\">CUSTOM_PATH（自定义输出目录）</span><br></pre></td></tr></table></figure></p>\n<p>因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 <code>Display value in build log</code>，比如你的 <code>GH_TOKEN</code>，否则其它看到日志的人就可以操作你的仓库了。</p>\n","site":{"data":{}},"excerpt":"<p>travis-ci自动部署hexo到github教程<br>","more":"</p>\n<h5 id=\"travis-yml–贴一下配置文件\"><a href=\"#travis-yml–贴一下配置文件\" class=\"headerlink\" title=\".travis.yml–贴一下配置文件\"></a>.travis.yml–贴一下配置文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">#安装hexo及插件</span><br><span class=\"line\">install:</span><br><span class=\"line\">  - npm install  </span><br><span class=\"line\"></span><br><span class=\"line\">#清除 生成</span><br><span class=\"line\">script:</span><br><span class=\"line\">  - hexo clean  </span><br><span class=\"line\">  - hexo g</span><br><span class=\"line\"></span><br><span class=\"line\">after_script:</span><br><span class=\"line\">  - cd ./public</span><br><span class=\"line\">  - git init</span><br><span class=\"line\">  - git config user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">  - git config user.email <span class=\"string\">\"useremail\"</span></span><br><span class=\"line\">  - git add .</span><br><span class=\"line\">  - git commit -m <span class=\"string\">\"update\"</span></span><br><span class=\"line\">  - git push --force --quiet <span class=\"string\">\"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\"</span> master:master</span><br><span class=\"line\">  #- git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https&#125;\" master:master</span><br><span class=\"line\"></span><br><span class=\"line\">#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build</span><br><span class=\"line\">#branches:</span><br><span class=\"line\">#  only:</span><br><span class=\"line\">#    - blogTS</span><br><span class=\"line\"></span><br><span class=\"line\">#build以后的地址</span><br><span class=\"line\">env:</span><br><span class=\"line\"> global:</span><br><span class=\"line\">   - GH_REF: (分发布用的分支地址)  <span class=\"comment\">//讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h5><p>创建 Personal access tokens<br>Personal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。</p>\n<p>在 <code>Settings</code> -&gt; <code>Developer settings</code> -&gt; <code>Personal access tokens</code> 中可以生成一个新的 token。</p>\n<p>权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。</p>\n<h5 id=\"配置-Travis-CI\"><a href=\"#配置-Travis-CI\" class=\"headerlink\" title=\"配置 Travis CI\"></a>配置 Travis CI</h5><p>注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 <code>Build only if .travis.yml is present</code>。你还可以开启 <code>Limit concurrent jobs</code> 限制并发任务。为了使配置文件更具通用性，我们需要在<code>Environment Variables</code> 中添加几个要用到的环境变量：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH_TOKEN（生成的 Personal access tokens）</span><br><span class=\"line\">GIT_NAME（部署时的提交者名称）</span><br><span class=\"line\">GIT_EMAIL（部署时的提交者邮箱）</span><br><span class=\"line\">CUSTOM_DOMAIN（自定义域名）</span><br><span class=\"line\">CUSTOM_PATH（自定义输出目录）</span><br></pre></td></tr></table></figure></p>\n<p>因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 <code>Display value in build log</code>，比如你的 <code>GH_TOKEN</code>，否则其它看到日志的人就可以操作你的仓库了。</p>"},{"title":"关于最新版vue-cli","date":"2018-01-15T05:24:49.000Z","_content":"vue-cli创建项目报错原因及解决\n<!-- more -->\n### 如题。。\n今天准备新建个`vue-cli`的项目测试用，但是当你`cmd`执行命令的时候却一直报错。。\n`cmd`命令：\n```\nvue init webpack projectName\n```\n**执行上面的命令时报了如下错误：**\n![](/images/vueerror.jpg '错误截图')\n\n度娘上搜也并没有发现很好的解决办法。。\n最后本地`cmd`查看了下`vue-cli`的版本\n发现是**2.8.1**的，下面就是解决这个报错的方法：\n```\nnpm i vue-cli -g\n```\n**将本地的vue-cli升级到最新版本**\n**有不同见解的小伙伴欢迎加群163958730讨论**","source":"_posts/关于最新版vue-cli.md","raw":"---\ntitle: '关于最新版vue-cli'\ndate: 2018-01-15 13:24:49\ncategories:\n- Vue\ntags:\n- Vue\n---\nvue-cli创建项目报错原因及解决\n<!-- more -->\n### 如题。。\n今天准备新建个`vue-cli`的项目测试用，但是当你`cmd`执行命令的时候却一直报错。。\n`cmd`命令：\n```\nvue init webpack projectName\n```\n**执行上面的命令时报了如下错误：**\n![](/images/vueerror.jpg '错误截图')\n\n度娘上搜也并没有发现很好的解决办法。。\n最后本地`cmd`查看了下`vue-cli`的版本\n发现是**2.8.1**的，下面就是解决这个报错的方法：\n```\nnpm i vue-cli -g\n```\n**将本地的vue-cli升级到最新版本**\n**有不同见解的小伙伴欢迎加群163958730讨论**","slug":"关于最新版vue-cli","published":1,"updated":"2018-08-31T05:13:04.138Z","_id":"cjlhemj9q001hponua9w40ds1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>vue-cli创建项目报错原因及解决<br><a id=\"more\"></a></p>\n<h3 id=\"如题。。\"><a href=\"#如题。。\" class=\"headerlink\" title=\"如题。。\"></a>如题。。</h3><p>今天准备新建个<code>vue-cli</code>的项目测试用，但是当你<code>cmd</code>执行命令的时候却一直报错。。<br><code>cmd</code>命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack projectName</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行上面的命令时报了如下错误：</strong><br><img src=\"/images/vueerror.jpg\" alt=\"\" title=\"错误截图\"></p>\n<p>度娘上搜也并没有发现很好的解决办法。。<br>最后本地<code>cmd</code>查看了下<code>vue-cli</code>的版本<br>发现是<strong>2.8.1</strong>的，下面就是解决这个报错的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-cli -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>将本地的vue-cli升级到最新版本</strong><br><strong>有不同见解的小伙伴欢迎加群163958730讨论</strong></p>\n","site":{"data":{}},"excerpt":"<p>vue-cli创建项目报错原因及解决<br>","more":"</p>\n<h3 id=\"如题。。\"><a href=\"#如题。。\" class=\"headerlink\" title=\"如题。。\"></a>如题。。</h3><p>今天准备新建个<code>vue-cli</code>的项目测试用，但是当你<code>cmd</code>执行命令的时候却一直报错。。<br><code>cmd</code>命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack projectName</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行上面的命令时报了如下错误：</strong><br><img src=\"/images/vueerror.jpg\" alt=\"\" title=\"错误截图\"></p>\n<p>度娘上搜也并没有发现很好的解决办法。。<br>最后本地<code>cmd</code>查看了下<code>vue-cli</code>的版本<br>发现是<strong>2.8.1</strong>的，下面就是解决这个报错的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-cli -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>将本地的vue-cli升级到最新版本</strong><br><strong>有不同见解的小伙伴欢迎加群163958730讨论</strong></p>"},{"title":"vue点击空白处隐藏","date":"2018-03-15T07:59:01.000Z","_content":"Vue点击空白处隐藏--适用于pc菜单展开的隐藏\n<!-- more -->\n##### 方法有两种\n1.div失去焦点事件：\n```JavaScript\n<div @click=\"show()\" :tabindex=\"-1\" @blur=\"hide()\">hide</div>\n//hide方法里控制v-if,v-show\n```\n2.监听点击事件\n```JavaScript\ndocument.addEventListener(\"click\", e => {\n      console.log(e.target);\n      if (!this.$el.contains(e.target)) this.show = false;\n    });\n//this.show 为data中控制v-if,v-show的属性\n```","source":"_posts/vue点击空白处隐藏.md","raw":"---\ntitle: vue点击空白处隐藏\ndate: 2018-03-15 15:59:01\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue点击空白处隐藏--适用于pc菜单展开的隐藏\n<!-- more -->\n##### 方法有两种\n1.div失去焦点事件：\n```JavaScript\n<div @click=\"show()\" :tabindex=\"-1\" @blur=\"hide()\">hide</div>\n//hide方法里控制v-if,v-show\n```\n2.监听点击事件\n```JavaScript\ndocument.addEventListener(\"click\", e => {\n      console.log(e.target);\n      if (!this.$el.contains(e.target)) this.show = false;\n    });\n//this.show 为data中控制v-if,v-show的属性\n```","slug":"vue点击空白处隐藏","published":1,"updated":"2018-08-31T05:18:05.426Z","_id":"cjlhemj9u001kponu9jr4z63m","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Vue点击空白处隐藏–适用于pc菜单展开的隐藏<br><a id=\"more\"></a></p>\n<h5 id=\"方法有两种\"><a href=\"#方法有两种\" class=\"headerlink\" title=\"方法有两种\"></a>方法有两种</h5><p>1.div失去焦点事件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div @click=<span class=\"string\">\"show()\"</span> :tabindex=<span class=\"string\">\"-1\"</span> @blur=<span class=\"string\">\"hide()\"</span>&gt;hide&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/hide方法里控制v-if,v-show</span></span><br></pre></td></tr></table></figure></p>\n<p>2.监听点击事件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"click\"</span>, e =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(e.target);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.$el.contains(e.target)) <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//this.show 为data中控制v-if,v-show的属性</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Vue点击空白处隐藏–适用于pc菜单展开的隐藏<br>","more":"</p>\n<h5 id=\"方法有两种\"><a href=\"#方法有两种\" class=\"headerlink\" title=\"方法有两种\"></a>方法有两种</h5><p>1.div失去焦点事件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div @click=<span class=\"string\">\"show()\"</span> :tabindex=<span class=\"string\">\"-1\"</span> @blur=<span class=\"string\">\"hide()\"</span>&gt;hide&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/hide方法里控制v-if,v-show</span></span><br></pre></td></tr></table></figure></p>\n<p>2.监听点击事件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"click\"</span>, e =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(e.target);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.$el.contains(e.target)) <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//this.show 为data中控制v-if,v-show的属性</span></span><br></pre></td></tr></table></figure></p>"},{"title":"常用方法封装","date":"2018-03-15T06:55:45.000Z","_content":"##### 修改对象的key值\n```JavaScript\n//如果data是对象可以免去遍历这一步\nreplaceKey(data, oldKeyName, newKeyName) {\n      data.forEach(item => {\n        for (let key in item) {\n          if (key == oldKeyName) {\n            item[newKeyName] = item[key];\n            delete item[key];\n          }\n        }\n      });\n      return data;\n    }\n```\n##### es6解构赋值删除不需要的属性\n```JavaScript\nlet {phone, qqList, ...obj} = {ck1: '1', phone:\"10086\", qqList:{}, ck2: '2', ck3: '3'};\nconsole.log(obj); // {ck1: '1', ck2: '2', ck3: '3'}\n```\n\n##### reduce删除对象中重复的属性--网上的例子\n```JavaScript\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\n\nlet obj = {};\n\nperson = person.reduce((cur,next) => {\n    obj[next.id] ? \"\" : obj[next.id] = true && cur.push(next);\n    return cur;\n},[]) //设置cur默认类型为数组，并且初始值为空的数组\n//log(person);\n```\n\n##### 检测是否是数组\n```JavaScript\nArray.isArray([]);  // true\nArray.isArray(undefined); // false;\n\narray instanceof Array; // true 检测对象的原型链是否指向构造函数的prototype对象\n```\n\n##### 数组的一些操作\n```JavaScript\n//遍历数组\nlet arr=[1,2,3,4,3,2,1];\n//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。\n//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值\nfor (let value of arr) {//break 跳出循环下面的方法继续执行；return 终止运行\n  console.log(value);//输出1,2,3,4,3,2,1\n}\n\n//map 返回一个新数组\nlet users = [\n  {name: \"张含韵\", \"email\": \"zhang@email.com\"},\n  {name: \"江一燕\",   \"email\": \"jiang@email.com\"},\n  {name: \"李小璐\",  \"email\": \"li@email.com\"}\n];\nlet emails = users.map(item=>item.email);\n\n//filter 返回过滤后的新数组\nlet arr=[1,2,3,4,3,2,1,2];\nlet newArr1=arr.filter((value,index,arr)=>value>=3)\nconsole.log(newArr1);//输出[3,4,3]\n```\n##### 时间戳转 y-m-d h:m:s\n```JavaScript\nfunction timestampToTime(timestamp,full) {\n    var date = timestamp.length == 10 ? new Date(timestamp * 1000) : new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n    Y = date.getFullYear() + '-';\n    M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    D = date.getDate() + ' ';\n    h = date.getHours() + ':';\n    m = date.getMinutes() + ':';\n    s = date.getSeconds();\n    //return Y+M+D+h+m+s;\n    if (full) {\n        return Y + M + D + h + m + s;//2018-11-11 11:11:11\n    } else {\n        return { ymd: Y + M + D, hms: h + m + s }\n    }\n}\n```","source":"_posts/常用方法封装.md","raw":"---\ntitle: 常用方法封装\ndate: 2018-03-15 14:55:45\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n##### 修改对象的key值\n```JavaScript\n//如果data是对象可以免去遍历这一步\nreplaceKey(data, oldKeyName, newKeyName) {\n      data.forEach(item => {\n        for (let key in item) {\n          if (key == oldKeyName) {\n            item[newKeyName] = item[key];\n            delete item[key];\n          }\n        }\n      });\n      return data;\n    }\n```\n##### es6解构赋值删除不需要的属性\n```JavaScript\nlet {phone, qqList, ...obj} = {ck1: '1', phone:\"10086\", qqList:{}, ck2: '2', ck3: '3'};\nconsole.log(obj); // {ck1: '1', ck2: '2', ck3: '3'}\n```\n\n##### reduce删除对象中重复的属性--网上的例子\n```JavaScript\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\n\nlet obj = {};\n\nperson = person.reduce((cur,next) => {\n    obj[next.id] ? \"\" : obj[next.id] = true && cur.push(next);\n    return cur;\n},[]) //设置cur默认类型为数组，并且初始值为空的数组\n//log(person);\n```\n\n##### 检测是否是数组\n```JavaScript\nArray.isArray([]);  // true\nArray.isArray(undefined); // false;\n\narray instanceof Array; // true 检测对象的原型链是否指向构造函数的prototype对象\n```\n\n##### 数组的一些操作\n```JavaScript\n//遍历数组\nlet arr=[1,2,3,4,3,2,1];\n//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。\n//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值\nfor (let value of arr) {//break 跳出循环下面的方法继续执行；return 终止运行\n  console.log(value);//输出1,2,3,4,3,2,1\n}\n\n//map 返回一个新数组\nlet users = [\n  {name: \"张含韵\", \"email\": \"zhang@email.com\"},\n  {name: \"江一燕\",   \"email\": \"jiang@email.com\"},\n  {name: \"李小璐\",  \"email\": \"li@email.com\"}\n];\nlet emails = users.map(item=>item.email);\n\n//filter 返回过滤后的新数组\nlet arr=[1,2,3,4,3,2,1,2];\nlet newArr1=arr.filter((value,index,arr)=>value>=3)\nconsole.log(newArr1);//输出[3,4,3]\n```\n##### 时间戳转 y-m-d h:m:s\n```JavaScript\nfunction timestampToTime(timestamp,full) {\n    var date = timestamp.length == 10 ? new Date(timestamp * 1000) : new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n    Y = date.getFullYear() + '-';\n    M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    D = date.getDate() + ' ';\n    h = date.getHours() + ':';\n    m = date.getMinutes() + ':';\n    s = date.getSeconds();\n    //return Y+M+D+h+m+s;\n    if (full) {\n        return Y + M + D + h + m + s;//2018-11-11 11:11:11\n    } else {\n        return { ymd: Y + M + D, hms: h + m + s }\n    }\n}\n```","slug":"常用方法封装","published":1,"updated":"2018-07-18T06:09:21.598Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlhemj9x001nponu45mjpbob","content":"<h5 id=\"修改对象的key值\"><a href=\"#修改对象的key值\" class=\"headerlink\" title=\"修改对象的key值\"></a>修改对象的key值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//如果data是对象可以免去遍历这一步</span></span><br><span class=\"line\">replaceKey(data, oldKeyName, newKeyName) &#123;</span><br><span class=\"line\">      data.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (key == oldKeyName) &#123;</span><br><span class=\"line\">            item[newKeyName] = item[key];</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> item[key];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"es6解构赋值删除不需要的属性\"><a href=\"#es6解构赋值删除不需要的属性\" class=\"headerlink\" title=\"es6解构赋值删除不需要的属性\"></a>es6解构赋值删除不需要的属性</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;phone, qqList, ...obj&#125; = &#123;<span class=\"attr\">ck1</span>: <span class=\"string\">'1'</span>, <span class=\"attr\">phone</span>:<span class=\"string\">\"10086\"</span>, <span class=\"attr\">qqList</span>:&#123;&#125;, <span class=\"attr\">ck2</span>: <span class=\"string\">'2'</span>, <span class=\"attr\">ck3</span>: <span class=\"string\">'3'</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj); <span class=\"comment\">// &#123;ck1: '1', ck2: '2', ck3: '3'&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce删除对象中重复的属性–网上的例子\"><a href=\"#reduce删除对象中重复的属性–网上的例子\" class=\"headerlink\" title=\"reduce删除对象中重复的属性–网上的例子\"></a>reduce删除对象中重复的属性–网上的例子</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小明\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小张\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小李\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小孙\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小周\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小陈\"</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person = person.reduce(<span class=\"function\">(<span class=\"params\">cur,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    obj[next.id] ? <span class=\"string\">\"\"</span> : obj[next.id] = <span class=\"literal\">true</span> &amp;&amp; cur.push(next);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">&#125;,[]) <span class=\"comment\">//设置cur默认类型为数组，并且初始值为空的数组</span></span><br><span class=\"line\"><span class=\"comment\">//log(person);</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"检测是否是数组\"><a href=\"#检测是否是数组\" class=\"headerlink\" title=\"检测是否是数组\"></a>检测是否是数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.isArray([]);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>.isArray(<span class=\"literal\">undefined</span>); <span class=\"comment\">// false;</span></span><br><span class=\"line\"></span><br><span class=\"line\">array <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true 检测对象的原型链是否指向构造函数的prototype对象</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"数组的一些操作\"><a href=\"#数组的一些操作\" class=\"headerlink\" title=\"数组的一些操作\"></a>数组的一些操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。</span></span><br><span class=\"line\"><span class=\"comment\">//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;<span class=\"comment\">//break 跳出循环下面的方法继续执行；return 终止运行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);<span class=\"comment\">//输出1,2,3,4,3,2,1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//map 返回一个新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> users = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"张含韵\"</span>, <span class=\"string\">\"email\"</span>: <span class=\"string\">\"zhang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"江一燕\"</span>,   <span class=\"string\">\"email\"</span>: <span class=\"string\">\"jiang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"李小璐\"</span>,  <span class=\"string\">\"email\"</span>: <span class=\"string\">\"li@email.com\"</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> emails = users.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item.email);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filter 返回过滤后的新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr1=arr.filter(<span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>value&gt;=<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1);<span class=\"comment\">//输出[3,4,3]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"时间戳转-y-m-d-h-m-s\"><a href=\"#时间戳转-y-m-d-h-m-s\" class=\"headerlink\" title=\"时间戳转 y-m-d h:m:s\"></a>时间戳转 y-m-d h:m:s</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timestampToTime</span>(<span class=\"params\">timestamp,full</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = timestamp.length == <span class=\"number\">10</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp * <span class=\"number\">1000</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp);<span class=\"comment\">//时间戳为10位需*1000，时间戳为13位的话不需乘1000</span></span><br><span class=\"line\">    Y = date.getFullYear() + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    D = date.getDate() + <span class=\"string\">' '</span>;</span><br><span class=\"line\">    h = date.getHours() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    m = date.getMinutes() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    s = date.getSeconds();</span><br><span class=\"line\">    <span class=\"comment\">//return Y+M+D+h+m+s;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (full) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Y + M + D + h + m + s;<span class=\"comment\">//2018-11-11 11:11:11</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">ymd</span>: Y + M + D, <span class=\"attr\">hms</span>: h + m + s &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"修改对象的key值\"><a href=\"#修改对象的key值\" class=\"headerlink\" title=\"修改对象的key值\"></a>修改对象的key值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//如果data是对象可以免去遍历这一步</span></span><br><span class=\"line\">replaceKey(data, oldKeyName, newKeyName) &#123;</span><br><span class=\"line\">      data.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (key == oldKeyName) &#123;</span><br><span class=\"line\">            item[newKeyName] = item[key];</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> item[key];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"es6解构赋值删除不需要的属性\"><a href=\"#es6解构赋值删除不需要的属性\" class=\"headerlink\" title=\"es6解构赋值删除不需要的属性\"></a>es6解构赋值删除不需要的属性</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;phone, qqList, ...obj&#125; = &#123;<span class=\"attr\">ck1</span>: <span class=\"string\">'1'</span>, <span class=\"attr\">phone</span>:<span class=\"string\">\"10086\"</span>, <span class=\"attr\">qqList</span>:&#123;&#125;, <span class=\"attr\">ck2</span>: <span class=\"string\">'2'</span>, <span class=\"attr\">ck3</span>: <span class=\"string\">'3'</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj); <span class=\"comment\">// &#123;ck1: '1', ck2: '2', ck3: '3'&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce删除对象中重复的属性–网上的例子\"><a href=\"#reduce删除对象中重复的属性–网上的例子\" class=\"headerlink\" title=\"reduce删除对象中重复的属性–网上的例子\"></a>reduce删除对象中重复的属性–网上的例子</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小明\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小张\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小李\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小孙\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小周\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小陈\"</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person = person.reduce(<span class=\"function\">(<span class=\"params\">cur,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    obj[next.id] ? <span class=\"string\">\"\"</span> : obj[next.id] = <span class=\"literal\">true</span> &amp;&amp; cur.push(next);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">&#125;,[]) <span class=\"comment\">//设置cur默认类型为数组，并且初始值为空的数组</span></span><br><span class=\"line\"><span class=\"comment\">//log(person);</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"检测是否是数组\"><a href=\"#检测是否是数组\" class=\"headerlink\" title=\"检测是否是数组\"></a>检测是否是数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.isArray([]);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>.isArray(<span class=\"literal\">undefined</span>); <span class=\"comment\">// false;</span></span><br><span class=\"line\"></span><br><span class=\"line\">array <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true 检测对象的原型链是否指向构造函数的prototype对象</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"数组的一些操作\"><a href=\"#数组的一些操作\" class=\"headerlink\" title=\"数组的一些操作\"></a>数组的一些操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。</span></span><br><span class=\"line\"><span class=\"comment\">//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;<span class=\"comment\">//break 跳出循环下面的方法继续执行；return 终止运行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);<span class=\"comment\">//输出1,2,3,4,3,2,1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//map 返回一个新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> users = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"张含韵\"</span>, <span class=\"string\">\"email\"</span>: <span class=\"string\">\"zhang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"江一燕\"</span>,   <span class=\"string\">\"email\"</span>: <span class=\"string\">\"jiang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"李小璐\"</span>,  <span class=\"string\">\"email\"</span>: <span class=\"string\">\"li@email.com\"</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> emails = users.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item.email);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filter 返回过滤后的新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr1=arr.filter(<span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>value&gt;=<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1);<span class=\"comment\">//输出[3,4,3]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"时间戳转-y-m-d-h-m-s\"><a href=\"#时间戳转-y-m-d-h-m-s\" class=\"headerlink\" title=\"时间戳转 y-m-d h:m:s\"></a>时间戳转 y-m-d h:m:s</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timestampToTime</span>(<span class=\"params\">timestamp,full</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = timestamp.length == <span class=\"number\">10</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp * <span class=\"number\">1000</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp);<span class=\"comment\">//时间戳为10位需*1000，时间戳为13位的话不需乘1000</span></span><br><span class=\"line\">    Y = date.getFullYear() + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    D = date.getDate() + <span class=\"string\">' '</span>;</span><br><span class=\"line\">    h = date.getHours() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    m = date.getMinutes() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    s = date.getSeconds();</span><br><span class=\"line\">    <span class=\"comment\">//return Y+M+D+h+m+s;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (full) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Y + M + D + h + m + s;<span class=\"comment\">//2018-11-11 11:11:11</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">ymd</span>: Y + M + D, <span class=\"attr\">hms</span>: h + m + s &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"分秒倒计时","date":"2018-05-11T10:05:01.000Z","_content":"Vue倒计时代码--适用于未支付订单倒计时\n<!-- more -->\n```JavaScript\ndata() {\n    return {\n      timeLeft: \"\"\n    };\n  },\n//在mounted中调用\n mounted() {\n    setInterval(this.countTime, 1000);\n  },\n//方法如下\nmethods: {\n    countTime() {\n      //获取当前时间\n      let date = new Date();\n      let now = date.getTime();\n      //设置截止时间\n      //let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间\n      let end = new Date(\"2018-05-11 15:02\").getTime() + 15 * 60 * 1000;\n      //console.log(end, \"结束时间\");\n      //时间差\n      let leftT = end - now;\n      //console.log(leftT, \"时间差\");\n      //定义变量 d,h,m,s保存倒计时的时间\n      let d, h, m, s;\n      if (leftT >= 0) {\n        //d = Math.floor(leftT / 1000 / 60 / 60 / 24);\n        //h = Math.floor((leftT / 1000 / 60 / 60) % 24);\n        m = Math.floor((leftT / 1000 / 60) % 60);\n        s = Math.floor((leftT / 1000) % 60);\n      } else {\n        m = 0;\n        s = 0;\n      }\n      clearInterval(this.countTime);\n      //将倒计时赋值到data中\n      this.timeLeft = `${m}分${s<10 ? `0${s}` : `${s}` }秒`;\n    }\n  }\n```","source":"_posts/分秒倒计时.md","raw":"---\ntitle: 分秒倒计时\ndate: 2018-05-11 18:05:01\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nVue倒计时代码--适用于未支付订单倒计时\n<!-- more -->\n```JavaScript\ndata() {\n    return {\n      timeLeft: \"\"\n    };\n  },\n//在mounted中调用\n mounted() {\n    setInterval(this.countTime, 1000);\n  },\n//方法如下\nmethods: {\n    countTime() {\n      //获取当前时间\n      let date = new Date();\n      let now = date.getTime();\n      //设置截止时间\n      //let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间\n      let end = new Date(\"2018-05-11 15:02\").getTime() + 15 * 60 * 1000;\n      //console.log(end, \"结束时间\");\n      //时间差\n      let leftT = end - now;\n      //console.log(leftT, \"时间差\");\n      //定义变量 d,h,m,s保存倒计时的时间\n      let d, h, m, s;\n      if (leftT >= 0) {\n        //d = Math.floor(leftT / 1000 / 60 / 60 / 24);\n        //h = Math.floor((leftT / 1000 / 60 / 60) % 24);\n        m = Math.floor((leftT / 1000 / 60) % 60);\n        s = Math.floor((leftT / 1000) % 60);\n      } else {\n        m = 0;\n        s = 0;\n      }\n      clearInterval(this.countTime);\n      //将倒计时赋值到data中\n      this.timeLeft = `${m}分${s<10 ? `0${s}` : `${s}` }秒`;\n    }\n  }\n```","slug":"分秒倒计时","published":1,"updated":"2018-08-31T05:23:00.779Z","_id":"cjlhemja1001qponuqxa29vmn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Vue倒计时代码–适用于未支付订单倒计时<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      timeLeft: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//在mounted中调用</span></span><br><span class=\"line\"> mounted() &#123;</span><br><span class=\"line\">    setInterval(<span class=\"keyword\">this</span>.countTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//方法如下</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    countTime() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> now = date.getTime();</span><br><span class=\"line\">      <span class=\"comment\">//设置截止时间</span></span><br><span class=\"line\">      <span class=\"comment\">//let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"2018-05-11 15:02\"</span>).getTime() + <span class=\"number\">15</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(end, \"结束时间\");</span></span><br><span class=\"line\">      <span class=\"comment\">//时间差</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> leftT = end - now;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(leftT, \"时间差\");</span></span><br><span class=\"line\">      <span class=\"comment\">//定义变量 d,h,m,s保存倒计时的时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> d, h, m, s;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (leftT &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//d = Math.floor(leftT / 1000 / 60 / 60 / 24);</span></span><br><span class=\"line\">        <span class=\"comment\">//h = Math.floor((leftT / 1000 / 60 / 60) % 24);</span></span><br><span class=\"line\">        m = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">        s = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        s = <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      clearInterval(<span class=\"keyword\">this</span>.countTime);</span><br><span class=\"line\">      <span class=\"comment\">//将倒计时赋值到data中</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.timeLeft = <span class=\"string\">`<span class=\"subst\">$&#123;m&#125;</span>分<span class=\"subst\">$&#123;s&lt;<span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;s&#125;</span>`</span> : <span class=\"string\">`<span class=\"subst\">$&#123;s&#125;</span>`</span> &#125;</span>秒`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Vue倒计时代码–适用于未支付订单倒计时<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      timeLeft: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//在mounted中调用</span></span><br><span class=\"line\"> mounted() &#123;</span><br><span class=\"line\">    setInterval(<span class=\"keyword\">this</span>.countTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//方法如下</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    countTime() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> now = date.getTime();</span><br><span class=\"line\">      <span class=\"comment\">//设置截止时间</span></span><br><span class=\"line\">      <span class=\"comment\">//let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"2018-05-11 15:02\"</span>).getTime() + <span class=\"number\">15</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(end, \"结束时间\");</span></span><br><span class=\"line\">      <span class=\"comment\">//时间差</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> leftT = end - now;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(leftT, \"时间差\");</span></span><br><span class=\"line\">      <span class=\"comment\">//定义变量 d,h,m,s保存倒计时的时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> d, h, m, s;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (leftT &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//d = Math.floor(leftT / 1000 / 60 / 60 / 24);</span></span><br><span class=\"line\">        <span class=\"comment\">//h = Math.floor((leftT / 1000 / 60 / 60) % 24);</span></span><br><span class=\"line\">        m = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">        s = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        s = <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      clearInterval(<span class=\"keyword\">this</span>.countTime);</span><br><span class=\"line\">      <span class=\"comment\">//将倒计时赋值到data中</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.timeLeft = <span class=\"string\">`<span class=\"subst\">$&#123;m&#125;</span>分<span class=\"subst\">$&#123;s&lt;<span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;s&#125;</span>`</span> : <span class=\"string\">`<span class=\"subst\">$&#123;s&#125;</span>`</span> &#125;</span>秒`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"something about Vuex...","date":"2018-01-17T08:41:37.000Z","_content":"Vuex从入门到放弃...哈哈哈\n<!-- more -->\n安装什么得应该不用多说了吧。。不会安装的点击官网链接\n\n**Vuex:**<https://vuex.vuejs.org/zh-cn/installation.html>\n\n引入使用：\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n```\n在你的store或者vuex目录下创建一个store：\n```javascript\n// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n       ...\n    },\n    mutations: {\n        ...\n    }\n})\n\nexport default store\n\n//在main.js挂载store\nimport store from './vuex'\nnew Vue({\n  el: '#app',\n  router,\n // 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件\n  store ,//必须是store\n  components: { App },\n  template: '<App/>'\n})\n//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'\n//还有另一种导出方法\nexport default new Vuex.Store({\n  state: {\n     ...\n  },\n  actions,\n  getters,\n  modules: {\n    ...\n  }\n})\n```\n**接下来是核心模块**\n* state\n```javascript\n//从store取出state\ncomputed: {\n    count () {\n      return this.store.state.count\n    }\n  }\n```\n##### **mapState 辅助函数**\n```javascript\n// 在单独构建的版本中辅助函数为 Vuex.mapState\nimport { mapState } from 'vuex'\n\ncomputed: mapState({\n    // 箭头函数可使代码更简练\n    count: state => state.count,\n\n    // 传字符串参数 'count' 等同于 `state => state.count`\n    countAlias: 'count',\n\n    // 为了能够使用 `this` 获取局部状态，必须使用常规函数\n    countPlusLocalState (state) {\n      return state.count + this.localCount\n    }  \n    //es6\n    countPlusLocalState: state => {\n        return state.count + this.localCount;\n      }\n  })\n如果你想将一个 state属性另取一个名字，使用对象形式：\n当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。\ncomputed: mapState([\n  // 映射 this.count 为 store.state.count\n  'count'\n])\n//...mapState\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n```\n* getters\n项目中我也没怎么用过，类似于计算属性\n>```javascript\nconst store = new Vuex.Store({\n  state: {\n    todos: [\n      { id: 1, text: '...', done: true },\n      { id: 2, text: '...', done: false }\n   ]\n  },\n  getters: {\n    doneTodos: state => {\n      return state.todos.filter(todo => todo.done)//返回done是true的新数组\n    }\n  }\n})\n```\n**Getter 也可以接受其他 getter 作为第二个参数：**\n```javascript\ngetters: {\n  // ...\n  doneTodosCount: (state, getters) => {\n    return getters.doneTodos.length\n  }\n}\nstore.getters.doneTodosCount // -> 1\n```\n##### mapGetters 辅助函数去官网看吧 和mapState差不多。。\n\n* mutations\n>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：\n#\n```javascript\n mutations: {\n    increment (state,payload) {\n      // 变更状态\n      payload ? state.count+=payload : state.count++\n    }\n  }\n```\n>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：\n#\n`store.commit('increment') || store.commit('increment',10)`\n**payload可以是对象：**\n```javascript\nmutations: {\n  increment (state, payload) {\n    state.count += payload.amount\n  }\n}\n\nstore.commit('increment', {\n  amount: 10\n})\n\n```\n**在组件中提交 Mutation**\n>你可以在组件中使用 this.$store.commit('xxx') 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。\n#\n```javascript\nimport { mapMutations } from 'vuex'\nmethods: {\n    ...mapMutations([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='increment(payload) --payload可传可不传'\n      // `mapMutations` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`\n    ]),\n    ...mapMutations({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='add() --payload同上'\n    })\n  }\n```\n* actions\n* Action 类似于 mutation，不同在于：\n Action 提交的是 mutation，而不是直接变更状态。\nAction 可以包含任意异步操作。\n```javascript\n actions: {\n    increment (context) {\n      context.commit('increment')\n      //Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation\n      ，或者通过 context.state 和 context.getters 来获取 state 和 getters。\n    }\n  }\n```\n**Action 通过 store.dispatch 方法触发：**\n`store.dispatch('increment')`\n>实践中，我们会经常用到 ES2015 的 [参数解构](https://github.com/lukehoban/es6features#destructuring) 来简化代码（特别是我们需要调用 `commit` 很多次的时候）：\n#\n```javascript\nactions: {\n  increment ({ commit }) {\n    commit('increment')\n  }\n}\n```\n**Actions 支持同样的载荷方式和对象方式进行分发：**\n```javascript\nactions: {\n        increment({ commit, state }, payload) {\n            commit('increment', payload)//mutations接收payload 如未传则默认null\n        }\n    }\n```\n**在组件中分发 Action**\n```javascript\nimport { mapActions } from 'vuex'\n//类似于mutations\n methods: {\n    ...mapActions([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`\n\n      // `mapActions` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`\n    ]),\n    ...mapActions({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.dispatch('increment')`\n    })\n  }\n```\n**组合 Action深入了解[见官网](https://vuex.vuejs.org/zh-cn/actions.html)**\n* modules\n>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter\n>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。\n>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：\n#\n```javascript\nconst moduleA = {\n  // ...\n  actions: {\n    incrementIfOddOnRootSum ({ state, commit, rootState }) {//state为moduleA的局部state,rootState是根的state\n      if ((state.count + rootState.count) % 2 === 1) {\n        commit('increment')\n      }\n    }\n  }\n}\n```","source":"_posts/关于Vuex.md","raw":"---\ntitle: something about Vuex...\ndate: 2018-01-17 16:41:37\ncategories:\n- Vue\ntags:\n- Vue\n---\nVuex从入门到放弃...哈哈哈\n<!-- more -->\n安装什么得应该不用多说了吧。。不会安装的点击官网链接\n\n**Vuex:**<https://vuex.vuejs.org/zh-cn/installation.html>\n\n引入使用：\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n```\n在你的store或者vuex目录下创建一个store：\n```javascript\n// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n       ...\n    },\n    mutations: {\n        ...\n    }\n})\n\nexport default store\n\n//在main.js挂载store\nimport store from './vuex'\nnew Vue({\n  el: '#app',\n  router,\n // 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件\n  store ,//必须是store\n  components: { App },\n  template: '<App/>'\n})\n//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'\n//还有另一种导出方法\nexport default new Vuex.Store({\n  state: {\n     ...\n  },\n  actions,\n  getters,\n  modules: {\n    ...\n  }\n})\n```\n**接下来是核心模块**\n* state\n```javascript\n//从store取出state\ncomputed: {\n    count () {\n      return this.store.state.count\n    }\n  }\n```\n##### **mapState 辅助函数**\n```javascript\n// 在单独构建的版本中辅助函数为 Vuex.mapState\nimport { mapState } from 'vuex'\n\ncomputed: mapState({\n    // 箭头函数可使代码更简练\n    count: state => state.count,\n\n    // 传字符串参数 'count' 等同于 `state => state.count`\n    countAlias: 'count',\n\n    // 为了能够使用 `this` 获取局部状态，必须使用常规函数\n    countPlusLocalState (state) {\n      return state.count + this.localCount\n    }  \n    //es6\n    countPlusLocalState: state => {\n        return state.count + this.localCount;\n      }\n  })\n如果你想将一个 state属性另取一个名字，使用对象形式：\n当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。\ncomputed: mapState([\n  // 映射 this.count 为 store.state.count\n  'count'\n])\n//...mapState\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n```\n* getters\n项目中我也没怎么用过，类似于计算属性\n>```javascript\nconst store = new Vuex.Store({\n  state: {\n    todos: [\n      { id: 1, text: '...', done: true },\n      { id: 2, text: '...', done: false }\n   ]\n  },\n  getters: {\n    doneTodos: state => {\n      return state.todos.filter(todo => todo.done)//返回done是true的新数组\n    }\n  }\n})\n```\n**Getter 也可以接受其他 getter 作为第二个参数：**\n```javascript\ngetters: {\n  // ...\n  doneTodosCount: (state, getters) => {\n    return getters.doneTodos.length\n  }\n}\nstore.getters.doneTodosCount // -> 1\n```\n##### mapGetters 辅助函数去官网看吧 和mapState差不多。。\n\n* mutations\n>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：\n#\n```javascript\n mutations: {\n    increment (state,payload) {\n      // 变更状态\n      payload ? state.count+=payload : state.count++\n    }\n  }\n```\n>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：\n#\n`store.commit('increment') || store.commit('increment',10)`\n**payload可以是对象：**\n```javascript\nmutations: {\n  increment (state, payload) {\n    state.count += payload.amount\n  }\n}\n\nstore.commit('increment', {\n  amount: 10\n})\n\n```\n**在组件中提交 Mutation**\n>你可以在组件中使用 this.$store.commit('xxx') 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。\n#\n```javascript\nimport { mapMutations } from 'vuex'\nmethods: {\n    ...mapMutations([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='increment(payload) --payload可传可不传'\n      // `mapMutations` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`\n    ]),\n    ...mapMutations({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='add() --payload同上'\n    })\n  }\n```\n* actions\n* Action 类似于 mutation，不同在于：\n Action 提交的是 mutation，而不是直接变更状态。\nAction 可以包含任意异步操作。\n```javascript\n actions: {\n    increment (context) {\n      context.commit('increment')\n      //Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation\n      ，或者通过 context.state 和 context.getters 来获取 state 和 getters。\n    }\n  }\n```\n**Action 通过 store.dispatch 方法触发：**\n`store.dispatch('increment')`\n>实践中，我们会经常用到 ES2015 的 [参数解构](https://github.com/lukehoban/es6features#destructuring) 来简化代码（特别是我们需要调用 `commit` 很多次的时候）：\n#\n```javascript\nactions: {\n  increment ({ commit }) {\n    commit('increment')\n  }\n}\n```\n**Actions 支持同样的载荷方式和对象方式进行分发：**\n```javascript\nactions: {\n        increment({ commit, state }, payload) {\n            commit('increment', payload)//mutations接收payload 如未传则默认null\n        }\n    }\n```\n**在组件中分发 Action**\n```javascript\nimport { mapActions } from 'vuex'\n//类似于mutations\n methods: {\n    ...mapActions([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`\n\n      // `mapActions` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`\n    ]),\n    ...mapActions({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.dispatch('increment')`\n    })\n  }\n```\n**组合 Action深入了解[见官网](https://vuex.vuejs.org/zh-cn/actions.html)**\n* modules\n>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter\n>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。\n>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：\n#\n```javascript\nconst moduleA = {\n  // ...\n  actions: {\n    incrementIfOddOnRootSum ({ state, commit, rootState }) {//state为moduleA的局部state,rootState是根的state\n      if ((state.count + rootState.count) % 2 === 1) {\n        commit('increment')\n      }\n    }\n  }\n}\n```","slug":"关于Vuex","published":1,"updated":"2018-08-31T05:13:26.159Z","_id":"cjlhemja3001tponu2rzxkd7q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Vuex从入门到放弃…哈哈哈<br><a id=\"more\"></a><br>安装什么得应该不用多说了吧。。不会安装的点击官网链接</p>\n<p><strong>Vuex:</strong><a href=\"https://vuex.vuejs.org/zh-cn/installation.html\" target=\"_blank\" rel=\"noopener\">https://vuex.vuejs.org/zh-cn/installation.html</a></p>\n<p>引入使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p>\n<p>在你的store或者vuex目录下创建一个store：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    state: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mutations: &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在main.js挂载store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\"> <span class=\"comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></span><br><span class=\"line\">  store ,<span class=\"comment\">//必须是store</span></span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'</span></span><br><span class=\"line\"><span class=\"comment\">//还有另一种导出方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">     ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions,</span><br><span class=\"line\">  getters,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>接下来是核心模块</strong></p>\n<ul>\n<li>state<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从store取出state</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    count () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.store.state.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"mapState-辅助函数\"><a href=\"#mapState-辅助函数\" class=\"headerlink\" title=\"mapState 辅助函数\"></a><strong>mapState 辅助函数</strong></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 箭头函数可使代码更简练</span></span><br><span class=\"line\">    count: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.count,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></span><br><span class=\"line\">    countAlias: <span class=\"string\">'count'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></span><br><span class=\"line\">    countPlusLocalState (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">//es6</span></span><br><span class=\"line\">    countPlusLocalState: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">如果你想将一个 state属性另取一个名字，使用对象形式：</span><br><span class=\"line\">当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。</span><br><span class=\"line\">computed: mapState([</span><br><span class=\"line\">  <span class=\"comment\">// 映射 this.count 为 store.state.count</span></span><br><span class=\"line\">  <span class=\"string\">'count'</span></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//...mapState</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  localComputed () &#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class=\"line\">  ...mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>getters<br>项目中我也没怎么用过，类似于计算属性<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doneTodos: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.todos.filter(<span class=\"function\"><span class=\"params\">todo</span> =&gt;</span> todo.done)<span class=\"comment\">//返回done是true的新数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<p><strong>Getter 也可以接受其他 getter 作为第二个参数：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  doneTodosCount: <span class=\"function\">(<span class=\"params\">state, getters</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> getters.doneTodos.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.getters.doneTodosCount <span class=\"comment\">// -&gt; 1</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"mapGetters-辅助函数去官网看吧-和mapState差不多。。\"><a href=\"#mapGetters-辅助函数去官网看吧-和mapState差不多。。\" class=\"headerlink\" title=\"mapGetters 辅助函数去官网看吧 和mapState差不多。。\"></a>mapGetters 辅助函数去官网看吧 和mapState差不多。。</h5><ul>\n<li>mutations<blockquote>\n<p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">   increment (state,payload) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 变更状态</span></span><br><span class=\"line\">     payload ? state.count+=payload : state.count++</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：<br>#<br><code>store.commit(&#39;increment&#39;) || store.commit(&#39;increment&#39;,10)</code><br><strong>payload可以是对象：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  increment (state, payload) &#123;</span><br><span class=\"line\">    state.count += payload.amount</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">store.commit(<span class=\"string\">'increment'</span>, &#123;</span><br><span class=\"line\">  amount: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>在组件中提交 Mutation</strong></p>\n<blockquote>\n<p>你可以在组件中使用 this.$store.commit(‘xxx’) 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapMutations([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='increment(payload) --payload可传可不传'</span></span><br><span class=\"line\">      <span class=\"comment\">// `mapMutations` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapMutations(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='add() --payload同上'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>actions</li>\n<li>Action 类似于 mutation，不同在于：<br>Action 提交的是 mutation，而不是直接变更状态。<br>Action 可以包含任意异步操作。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">   increment (context) &#123;</span><br><span class=\"line\">     context.commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">     <span class=\"comment\">//Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation</span></span><br><span class=\"line\">     ，或者通过 context.state 和 context.getters 来获取 state 和 getters。</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>Action 通过 store.dispatch 方法触发：</strong><br><code>store.dispatch(&#39;increment&#39;)</code></p>\n<blockquote>\n<p>实践中，我们会经常用到 ES2015 的 <a href=\"https://github.com/lukehoban/es6features#destructuring\" target=\"_blank\" rel=\"noopener\">参数解构</a> 来简化代码（特别是我们需要调用 <code>commit</code> 很多次的时候）：<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  increment (&#123; commit &#125;) &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>Actions 支持同样的载荷方式和对象方式进行分发：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">        increment(&#123; commit, state &#125;, payload) &#123;</span><br><span class=\"line\">            commit(<span class=\"string\">'increment'</span>, payload)<span class=\"comment\">//mutations接收payload 如未传则默认null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>在组件中分发 Action</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"comment\">//类似于mutations</span></span><br><span class=\"line\"> methods: &#123;</span><br><span class=\"line\">    ...mapActions([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// `mapActions` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapActions(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组合 Action深入了解<a href=\"https://vuex.vuejs.org/zh-cn/actions.html\" target=\"_blank\" rel=\"noopener\">见官网</a></strong></p>\n<ul>\n<li>modules<blockquote>\n<p>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter<br>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。<br>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;<span class=\"comment\">//state为moduleA的局部state,rootState是根的state</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((state.count + rootState.count) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Vuex从入门到放弃…哈哈哈<br>","more":"<br>安装什么得应该不用多说了吧。。不会安装的点击官网链接</p>\n<p><strong>Vuex:</strong><a href=\"https://vuex.vuejs.org/zh-cn/installation.html\" target=\"_blank\" rel=\"noopener\">https://vuex.vuejs.org/zh-cn/installation.html</a></p>\n<p>引入使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p>\n<p>在你的store或者vuex目录下创建一个store：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    state: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mutations: &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在main.js挂载store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\"> <span class=\"comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></span><br><span class=\"line\">  store ,<span class=\"comment\">//必须是store</span></span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'</span></span><br><span class=\"line\"><span class=\"comment\">//还有另一种导出方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">     ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions,</span><br><span class=\"line\">  getters,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>接下来是核心模块</strong></p>\n<ul>\n<li>state<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从store取出state</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    count () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.store.state.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"mapState-辅助函数\"><a href=\"#mapState-辅助函数\" class=\"headerlink\" title=\"mapState 辅助函数\"></a><strong>mapState 辅助函数</strong></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 箭头函数可使代码更简练</span></span><br><span class=\"line\">    count: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.count,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></span><br><span class=\"line\">    countAlias: <span class=\"string\">'count'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></span><br><span class=\"line\">    countPlusLocalState (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">//es6</span></span><br><span class=\"line\">    countPlusLocalState: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">如果你想将一个 state属性另取一个名字，使用对象形式：</span><br><span class=\"line\">当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。</span><br><span class=\"line\">computed: mapState([</span><br><span class=\"line\">  <span class=\"comment\">// 映射 this.count 为 store.state.count</span></span><br><span class=\"line\">  <span class=\"string\">'count'</span></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//...mapState</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  localComputed () &#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class=\"line\">  ...mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>getters<br>项目中我也没怎么用过，类似于计算属性<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doneTodos: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.todos.filter(<span class=\"function\"><span class=\"params\">todo</span> =&gt;</span> todo.done)<span class=\"comment\">//返回done是true的新数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<p><strong>Getter 也可以接受其他 getter 作为第二个参数：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  doneTodosCount: <span class=\"function\">(<span class=\"params\">state, getters</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> getters.doneTodos.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.getters.doneTodosCount <span class=\"comment\">// -&gt; 1</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"mapGetters-辅助函数去官网看吧-和mapState差不多。。\"><a href=\"#mapGetters-辅助函数去官网看吧-和mapState差不多。。\" class=\"headerlink\" title=\"mapGetters 辅助函数去官网看吧 和mapState差不多。。\"></a>mapGetters 辅助函数去官网看吧 和mapState差不多。。</h5><ul>\n<li>mutations<blockquote>\n<p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">   increment (state,payload) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 变更状态</span></span><br><span class=\"line\">     payload ? state.count+=payload : state.count++</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：<br>#<br><code>store.commit(&#39;increment&#39;) || store.commit(&#39;increment&#39;,10)</code><br><strong>payload可以是对象：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  increment (state, payload) &#123;</span><br><span class=\"line\">    state.count += payload.amount</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">store.commit(<span class=\"string\">'increment'</span>, &#123;</span><br><span class=\"line\">  amount: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>在组件中提交 Mutation</strong></p>\n<blockquote>\n<p>你可以在组件中使用 this.$store.commit(‘xxx’) 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapMutations([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='increment(payload) --payload可传可不传'</span></span><br><span class=\"line\">      <span class=\"comment\">// `mapMutations` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapMutations(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='add() --payload同上'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>actions</li>\n<li>Action 类似于 mutation，不同在于：<br>Action 提交的是 mutation，而不是直接变更状态。<br>Action 可以包含任意异步操作。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">   increment (context) &#123;</span><br><span class=\"line\">     context.commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">     <span class=\"comment\">//Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation</span></span><br><span class=\"line\">     ，或者通过 context.state 和 context.getters 来获取 state 和 getters。</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>Action 通过 store.dispatch 方法触发：</strong><br><code>store.dispatch(&#39;increment&#39;)</code></p>\n<blockquote>\n<p>实践中，我们会经常用到 ES2015 的 <a href=\"https://github.com/lukehoban/es6features#destructuring\" target=\"_blank\" rel=\"noopener\">参数解构</a> 来简化代码（特别是我们需要调用 <code>commit</code> 很多次的时候）：<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  increment (&#123; commit &#125;) &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>Actions 支持同样的载荷方式和对象方式进行分发：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">        increment(&#123; commit, state &#125;, payload) &#123;</span><br><span class=\"line\">            commit(<span class=\"string\">'increment'</span>, payload)<span class=\"comment\">//mutations接收payload 如未传则默认null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>在组件中分发 Action</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"comment\">//类似于mutations</span></span><br><span class=\"line\"> methods: &#123;</span><br><span class=\"line\">    ...mapActions([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// `mapActions` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapActions(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组合 Action深入了解<a href=\"https://vuex.vuejs.org/zh-cn/actions.html\" target=\"_blank\" rel=\"noopener\">见官网</a></strong></p>\n<ul>\n<li>modules<blockquote>\n<p>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter<br>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。<br>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;<span class=\"comment\">//state为moduleA的局部state,rootState是根的state</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((state.count + rootState.count) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>"},{"title":"判断是否滚动到底部","date":"2018-03-01T05:09:10.000Z","_content":"JavaScript判断是否滚动到底部--可用于列表的滚动加载\n<!-- more -->\n```JavaScript\n//滚动条在Y轴上的滚动距离\nfunction getScrollTop() {\n    var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n    if (document.body) {\n        bodyScrollTop = document.body.scrollTop;\n    }\n    if (document.documentElement) {\n        documentScrollTop = document.documentElement.scrollTop;\n    }\n    scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n    return scrollTop;\n}\n\n//文档的总高度\nfunction getScrollHeight() {\n    var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n    if (document.body) {\n        bodyScrollHeight = document.body.scrollHeight;\n    }\n    if (document.documentElement) {\n        documentScrollHeight = document.documentElement.scrollHeight;\n    }\n    scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n    return scrollHeight;\n}\n\n//浏览器视口的高度\nfunction getWindowHeight() {\n    var windowHeight = 0;\n    if (document.compatMode == \"CSS1Compat\") {\n        windowHeight = document.documentElement.clientHeight;\n    } else {\n        windowHeight = document.body.clientHeight;\n    }\n    return windowHeight;\n}\n//判断是否滚动到底部\nfunction isBottom(distance) {\n    let bottomDistance = distance || 0;\n    if (getScrollTop() + getWindowHeight() + bottomDistance >= getScrollHeight()) {\n        //console.log(\"已经到底部\");\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport { isBottom }\n\n//引用 import {isBottom} from './isBottom.js'\n\n//滚动加载使用\n//vue中生命周期mounted执行\nwindow.addEventListener('scroll', this.loadMore) //this.loadMore为滚动加载的方法\n//移除监听\n//vue中生命周期beforeDestroy执行\nwindow.removeEventListener('scroll', this.loadMore)\n```\n\n**欢迎前端小伙伴加群一起学习进步：163958730**","source":"_posts/判断是否滚动到底部.md","raw":"---\ntitle: 判断是否滚动到底部\ndate: 2018-03-01 13:09:10\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript判断是否滚动到底部--可用于列表的滚动加载\n<!-- more -->\n```JavaScript\n//滚动条在Y轴上的滚动距离\nfunction getScrollTop() {\n    var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n    if (document.body) {\n        bodyScrollTop = document.body.scrollTop;\n    }\n    if (document.documentElement) {\n        documentScrollTop = document.documentElement.scrollTop;\n    }\n    scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n    return scrollTop;\n}\n\n//文档的总高度\nfunction getScrollHeight() {\n    var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n    if (document.body) {\n        bodyScrollHeight = document.body.scrollHeight;\n    }\n    if (document.documentElement) {\n        documentScrollHeight = document.documentElement.scrollHeight;\n    }\n    scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n    return scrollHeight;\n}\n\n//浏览器视口的高度\nfunction getWindowHeight() {\n    var windowHeight = 0;\n    if (document.compatMode == \"CSS1Compat\") {\n        windowHeight = document.documentElement.clientHeight;\n    } else {\n        windowHeight = document.body.clientHeight;\n    }\n    return windowHeight;\n}\n//判断是否滚动到底部\nfunction isBottom(distance) {\n    let bottomDistance = distance || 0;\n    if (getScrollTop() + getWindowHeight() + bottomDistance >= getScrollHeight()) {\n        //console.log(\"已经到底部\");\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport { isBottom }\n\n//引用 import {isBottom} from './isBottom.js'\n\n//滚动加载使用\n//vue中生命周期mounted执行\nwindow.addEventListener('scroll', this.loadMore) //this.loadMore为滚动加载的方法\n//移除监听\n//vue中生命周期beforeDestroy执行\nwindow.removeEventListener('scroll', this.loadMore)\n```\n\n**欢迎前端小伙伴加群一起学习进步：163958730**","slug":"判断是否滚动到底部","published":1,"updated":"2018-08-31T05:11:51.308Z","_id":"cjlhemja5001wponu2woon02n","comments":1,"layout":"post","photos":[],"link":"","content":"<p>JavaScript判断是否滚动到底部–可用于列表的滚动加载<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">\"CSS1Compat\"</span>) &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是否滚动到底部</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBottom</span>(<span class=\"params\">distance</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> bottomDistance = distance || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getScrollTop() + getWindowHeight() + bottomDistance &gt;= getScrollHeight()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(\"已经到底部\");</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; isBottom &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//引用 import &#123;isBottom&#125; from './isBottom.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//滚动加载使用</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期mounted执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore) <span class=\"comment\">//this.loadMore为滚动加载的方法</span></span><br><span class=\"line\"><span class=\"comment\">//移除监听</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期beforeDestroy执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore)</span><br></pre></td></tr></table></figure></p>\n<p><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>\n","site":{"data":{}},"excerpt":"<p>JavaScript判断是否滚动到底部–可用于列表的滚动加载<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">\"CSS1Compat\"</span>) &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是否滚动到底部</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBottom</span>(<span class=\"params\">distance</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> bottomDistance = distance || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getScrollTop() + getWindowHeight() + bottomDistance &gt;= getScrollHeight()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(\"已经到底部\");</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; isBottom &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//引用 import &#123;isBottom&#125; from './isBottom.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//滚动加载使用</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期mounted执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore) <span class=\"comment\">//this.loadMore为滚动加载的方法</span></span><br><span class=\"line\"><span class=\"comment\">//移除监听</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期beforeDestroy执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore)</span><br></pre></td></tr></table></figure></p>\n<p><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>"},{"title":"vue-transition","date":"2018-03-02T06:02:44.000Z","_content":"vue的过渡动画css\n<!-- more -->\n##### 关于vue的过渡动画,先上css:\n```css\n/* // down */\n.slide-down-enter-active {\n  transition: all 0.4s ease;\n}\n.slide-down-leave-active {\n  /* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */\n  transition: all 0.4s;\n}\n.slide-down-enter,\n.slide-down-leave-active {\n  transform: translateY(20px);\n  opacity: 0;\n}\n.slide-down-move {\n  transition: all 0.4s;\n}\n.slide-down-leave-active {\n  /* position: absolute !important;\n  width: 100%; */\n}\n\n/* // up */\n.slide-up-enter-active {\n  transition: all 0.5s ease 0.3s;\n}\n.slide-up-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-up-enter,\n.slide-up-leave-active {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n.slide-up-move {\n  transition: all 0.5s;\n}\n\n/* // left */\n.slide-left-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-left-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-left-enter {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-left-leave-active {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-left-move {\n  transition: all 0.5s;\n}\n\n/* // right */\n.slide-right-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-right-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-right-enter {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-right-leave-active {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-right-move {\n  transition: all 0.5s;\n}\n\n/* // fade */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-active {\n  opacity: 0;\n}\n.fade-move {\n  transition: transform 0.3s;\n}\n```\n使用方法：\n```\n<button v-on:click=\"show = !show\">\n            展开列表\n        </button>\n        <transition name=\"fade\">\n            <ul v-show=\"show\">\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n            </ul>\n        </transition>\n```\n测试案例就不放了。。自己放到代码里试试效果呗~\n**欢迎前端小伙伴加群一起学习进步：163958730**","source":"_posts/vue-transition.md","raw":"---\ntitle: vue-transition\ndate: 2018-03-02 14:02:44\ncategories:\n- Vue\ntags:\n- Vue\n---\nvue的过渡动画css\n<!-- more -->\n##### 关于vue的过渡动画,先上css:\n```css\n/* // down */\n.slide-down-enter-active {\n  transition: all 0.4s ease;\n}\n.slide-down-leave-active {\n  /* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */\n  transition: all 0.4s;\n}\n.slide-down-enter,\n.slide-down-leave-active {\n  transform: translateY(20px);\n  opacity: 0;\n}\n.slide-down-move {\n  transition: all 0.4s;\n}\n.slide-down-leave-active {\n  /* position: absolute !important;\n  width: 100%; */\n}\n\n/* // up */\n.slide-up-enter-active {\n  transition: all 0.5s ease 0.3s;\n}\n.slide-up-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-up-enter,\n.slide-up-leave-active {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n.slide-up-move {\n  transition: all 0.5s;\n}\n\n/* // left */\n.slide-left-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-left-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-left-enter {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-left-leave-active {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-left-move {\n  transition: all 0.5s;\n}\n\n/* // right */\n.slide-right-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-right-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-right-enter {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-right-leave-active {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-right-move {\n  transition: all 0.5s;\n}\n\n/* // fade */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-active {\n  opacity: 0;\n}\n.fade-move {\n  transition: transform 0.3s;\n}\n```\n使用方法：\n```\n<button v-on:click=\"show = !show\">\n            展开列表\n        </button>\n        <transition name=\"fade\">\n            <ul v-show=\"show\">\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n            </ul>\n        </transition>\n```\n测试案例就不放了。。自己放到代码里试试效果呗~\n**欢迎前端小伙伴加群一起学习进步：163958730**","slug":"vue-transition","published":1,"updated":"2018-08-31T05:15:11.602Z","_id":"cjlhemjaa001zponul8xdavlr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>vue的过渡动画css<br><a id=\"more\"></a></p>\n<h5 id=\"关于vue的过渡动画-先上css\"><a href=\"#关于vue的过渡动画-先上css\" class=\"headerlink\" title=\"关于vue的过渡动画,先上css:\"></a>关于vue的过渡动画,先上css:</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* // down */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* position: absolute !important;</span></span><br><span class=\"line\"><span class=\"comment\">  width: 100%; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // up */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // left */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(0.55, 0, 0.1, 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // right */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(0.55, 0, 0.1, 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // fade */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter-active</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class=\"line\">            展开列表</span><br><span class=\"line\">        &lt;/button&gt;</span><br><span class=\"line\">        &lt;transition name=&quot;fade&quot;&gt;</span><br><span class=\"line\">            &lt;ul v-show=&quot;show&quot;&gt;</span><br><span class=\"line\">                &lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;3&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;4&lt;/li&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">        &lt;/transition&gt;</span><br></pre></td></tr></table></figure></p>\n<p>测试案例就不放了。。自己放到代码里试试效果呗~<br><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>\n","site":{"data":{}},"excerpt":"<p>vue的过渡动画css<br>","more":"</p>\n<h5 id=\"关于vue的过渡动画-先上css\"><a href=\"#关于vue的过渡动画-先上css\" class=\"headerlink\" title=\"关于vue的过渡动画,先上css:\"></a>关于vue的过渡动画,先上css:</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* // down */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* position: absolute !important;</span></span><br><span class=\"line\"><span class=\"comment\">  width: 100%; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // up */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // left */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(0.55, 0, 0.1, 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // right */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(0.55, 0, 0.1, 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(20px);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // fade */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter-active</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class=\"line\">            展开列表</span><br><span class=\"line\">        &lt;/button&gt;</span><br><span class=\"line\">        &lt;transition name=&quot;fade&quot;&gt;</span><br><span class=\"line\">            &lt;ul v-show=&quot;show&quot;&gt;</span><br><span class=\"line\">                &lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;3&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;4&lt;/li&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">        &lt;/transition&gt;</span><br></pre></td></tr></table></figure></p>\n<p>测试案例就不放了。。自己放到代码里试试效果呗~<br><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>"},{"title":"正则Collect..","date":"2018-01-29T03:17:31.000Z","_content":"记录一些常用的正则表达式\n<!-- more -->\n```JavaScript\nlet reg;\n//数字最多两位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,2}$/;\n//数字最多一位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,1}$/;\n//qq号验证\n//^表示不匹配。d表示任意数字，{5,10}表示长度为5到10。   \nreg=/^\\d{5,10}$/;\n//e-mail\nreg=/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n//手机号码，支持17开头\nreg=/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//固话号码，支持400 或 800开头\nreg= /^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//手机号码、固话号码\nreg=/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8})|(400|800)([0-9\\\\-]{7,10})|(([0-9]{4}|[0-9]{3})(-| )?)?([0-9]{7,8})((-| |转)*([0-9]{1,4}))?$/;\n//微信号\nreg=/^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/;\n//只能输入中文,字母,数字\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/\n//只能输入中文,字母\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]+$/\n//只能输入中文,字母并限制长度\n//{1,10}最短1位 最长10位\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]{1,10}$/\n```","source":"_posts/正则Collect.md","raw":"---\ntitle: 正则Collect..\ndate: 2018-01-29 11:17:31\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n记录一些常用的正则表达式\n<!-- more -->\n```JavaScript\nlet reg;\n//数字最多两位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,2}$/;\n//数字最多一位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,1}$/;\n//qq号验证\n//^表示不匹配。d表示任意数字，{5,10}表示长度为5到10。   \nreg=/^\\d{5,10}$/;\n//e-mail\nreg=/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n//手机号码，支持17开头\nreg=/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//固话号码，支持400 或 800开头\nreg= /^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//手机号码、固话号码\nreg=/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8})|(400|800)([0-9\\\\-]{7,10})|(([0-9]{4}|[0-9]{3})(-| )?)?([0-9]{7,8})((-| |转)*([0-9]{1,4}))?$/;\n//微信号\nreg=/^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/;\n//只能输入中文,字母,数字\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/\n//只能输入中文,字母\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]+$/\n//只能输入中文,字母并限制长度\n//{1,10}最短1位 最长10位\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]{1,10}$/\n```","slug":"正则Collect","published":1,"updated":"2018-08-31T05:11:10.596Z","_id":"cjlhemjae0022ponu9ve9rhml","comments":1,"layout":"post","photos":[],"link":"","content":"<p>记录一些常用的正则表达式<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg;</span><br><span class=\"line\"><span class=\"comment\">//数字最多两位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,2&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//数字最多一位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,1&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//qq号验证</span></span><br><span class=\"line\"><span class=\"comment\">//^表示不匹配。d表示任意数字，&#123;5,10&#125;表示长度为5到10。   </span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d&#123;5,10&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//e-mail</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码，支持17开头</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//固话号码，支持400 或 800开头</span></span><br><span class=\"line\">reg= <span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码、固话号码</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;)|(400|800)([0-9\\\\-]&#123;7,10&#125;)|(([0-9]&#123;4&#125;|[0-9]&#123;3&#125;)(-| )?)?([0-9]&#123;7,8&#125;)((-| |转)*([0-9]&#123;1,4&#125;))?$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//微信号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-zA-Z]&#123;1&#125;[-_a-zA-Z0-9]&#123;5,19&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母,数字</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母并限制长度</span></span><br><span class=\"line\"><span class=\"comment\">//&#123;1,10&#125;最短1位 最长10位</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]&#123;1,10&#125;$/</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>记录一些常用的正则表达式<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg;</span><br><span class=\"line\"><span class=\"comment\">//数字最多两位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,2&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//数字最多一位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,1&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//qq号验证</span></span><br><span class=\"line\"><span class=\"comment\">//^表示不匹配。d表示任意数字，&#123;5,10&#125;表示长度为5到10。   </span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d&#123;5,10&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//e-mail</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码，支持17开头</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//固话号码，支持400 或 800开头</span></span><br><span class=\"line\">reg= <span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码、固话号码</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;)|(400|800)([0-9\\\\-]&#123;7,10&#125;)|(([0-9]&#123;4&#125;|[0-9]&#123;3&#125;)(-| )?)?([0-9]&#123;7,8&#125;)((-| |转)*([0-9]&#123;1,4&#125;))?$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//微信号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-zA-Z]&#123;1&#125;[-_a-zA-Z0-9]&#123;5,19&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母,数字</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母并限制长度</span></span><br><span class=\"line\"><span class=\"comment\">//&#123;1,10&#125;最短1位 最长10位</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]&#123;1,10&#125;$/</span></span><br></pre></td></tr></table></figure></p>"},{"title":"自动部署远程服务器(Vue)","date":"2018-08-04T05:29:59.000Z","_content":"Travis自动部署vue打包后的文件到远程服务器\n<!-- more -->\n##### 生成密钥对\n`ssh-keygen`\n输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下`cd ~/.ssh`，里面有3个文件\n##### 新建config文件\n```javascript\nHost test\nHostName 182.61.20.24 \n#登陆的用户名\nUser root\nIdentitiesOnly yes\n#登陆使用的密钥\nIdentityFile ~/.ssh/id_rsa\n```\n设置.ssh目录为700:`chmod 700 ~/.ssh/`\n设置.ssh目录下的文件为600:`chmod 600 ~/.ssh/*`\n##### 将生成的公钥添加为受信列表（重点）\n```javascript\ncat id_rsa.pub >> authorized_keys\ncat authorized_keys --查看\n# authorized_keys文件内容类似这样\nssh-rsa  *************centos\n```\n##### 服务器安装Travis\n```javascript\n#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby\napt install ruby\n# 安装travis命令行工具，如无法使用gem指令须先安装ruby\ngem install travis\n# --auto自动登录github帐号\ntravis login --auto\n# 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行\ntravis encrypt-file ~/.ssh/id_rsa --add\n# 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去\n注意：\ngem install travis 报错can't find header files for ruby at /usr/lib/ruby/include/ruby.h\n解决办法：\n#更换gem的source\n$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\n\nhttps://ruby.taobao.org\n# 请确保只有 ruby.taobao.org\n#安装ruby-dev\napt-get install ruby-dev\n```\n#### 上面的并没有成功 具体Travis网页端并没有生成环境变量--有知道得小伙伴可以加群告诉我下：163958730\n##### 另一种方法--rsync\n启动方式：\n`rsync --daemon`\n创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：\n```javascript\n# /etc/rsyncd: configuration file for rsync daemon mode\n\n# See rsyncd.conf man page for more options.\n\n# configuration example:\nuid = root\ngid = root\nuse chroot = no\nmax connections =4\npid file = /var/run/rsyncd.pid\nlog file = /var/log/rsyncd.log\nlock file = /var/run/rsyncd.lock\n\n#设置模块\n[view] \npath = /srv/view\nread only = no\nauth users = root\nsecrets file = /etc/rsyncd.passwd\nlist = no\n```\n1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限\n \n2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件\n \n3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock\n \n4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径\n \n5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行\n \n7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式 \n`root:123456`\n此文件权限必须为600，否则会报错\n```javascript\n#执行命令：\necho \"root:123456\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用\n \n当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错\n\n##### Travis配置文件\n```javascript\n#指定node版本\nlanguage: node_js\nnode_js:\n- '8'   \n\n#指定只有检测到master分支有变动时才执行任务\nbranchs:\n  only:\n  - master  \n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\ninstall:\n- echo  $RSYNCPWD > rsyncd.passwd \n- chmod 600 rsyncd.passwd\n- npm install\nscript:\n- npm run build\n\nafter_success:\n- rsync --delete --password-file=./rsyncd.passwd -r ./dist ${SERVER_NAME}@${SERVER_IP}::view\n\n#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)\n#${SERVER_NAME} travisWeb端配置的环境变量(userName)\n#${SERVER_IP} 服务器IP\n#::view 设置的模块\n```\n","source":"_posts/自动部署远程服务器-Vue.md","raw":"---\ntitle: 自动部署远程服务器(Vue)\ndate: 2018-08-04 13:29:59\ncategories:\n- Vue\ntags:\n- Vue\n---\nTravis自动部署vue打包后的文件到远程服务器\n<!-- more -->\n##### 生成密钥对\n`ssh-keygen`\n输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下`cd ~/.ssh`，里面有3个文件\n##### 新建config文件\n```javascript\nHost test\nHostName 182.61.20.24 \n#登陆的用户名\nUser root\nIdentitiesOnly yes\n#登陆使用的密钥\nIdentityFile ~/.ssh/id_rsa\n```\n设置.ssh目录为700:`chmod 700 ~/.ssh/`\n设置.ssh目录下的文件为600:`chmod 600 ~/.ssh/*`\n##### 将生成的公钥添加为受信列表（重点）\n```javascript\ncat id_rsa.pub >> authorized_keys\ncat authorized_keys --查看\n# authorized_keys文件内容类似这样\nssh-rsa  *************centos\n```\n##### 服务器安装Travis\n```javascript\n#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby\napt install ruby\n# 安装travis命令行工具，如无法使用gem指令须先安装ruby\ngem install travis\n# --auto自动登录github帐号\ntravis login --auto\n# 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行\ntravis encrypt-file ~/.ssh/id_rsa --add\n# 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去\n注意：\ngem install travis 报错can't find header files for ruby at /usr/lib/ruby/include/ruby.h\n解决办法：\n#更换gem的source\n$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\n\nhttps://ruby.taobao.org\n# 请确保只有 ruby.taobao.org\n#安装ruby-dev\napt-get install ruby-dev\n```\n#### 上面的并没有成功 具体Travis网页端并没有生成环境变量--有知道得小伙伴可以加群告诉我下：163958730\n##### 另一种方法--rsync\n启动方式：\n`rsync --daemon`\n创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：\n```javascript\n# /etc/rsyncd: configuration file for rsync daemon mode\n\n# See rsyncd.conf man page for more options.\n\n# configuration example:\nuid = root\ngid = root\nuse chroot = no\nmax connections =4\npid file = /var/run/rsyncd.pid\nlog file = /var/log/rsyncd.log\nlock file = /var/run/rsyncd.lock\n\n#设置模块\n[view] \npath = /srv/view\nread only = no\nauth users = root\nsecrets file = /etc/rsyncd.passwd\nlist = no\n```\n1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限\n \n2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件\n \n3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock\n \n4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径\n \n5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行\n \n7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式 \n`root:123456`\n此文件权限必须为600，否则会报错\n```javascript\n#执行命令：\necho \"root:123456\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用\n \n当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错\n\n##### Travis配置文件\n```javascript\n#指定node版本\nlanguage: node_js\nnode_js:\n- '8'   \n\n#指定只有检测到master分支有变动时才执行任务\nbranchs:\n  only:\n  - master  \n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\ninstall:\n- echo  $RSYNCPWD > rsyncd.passwd \n- chmod 600 rsyncd.passwd\n- npm install\nscript:\n- npm run build\n\nafter_success:\n- rsync --delete --password-file=./rsyncd.passwd -r ./dist ${SERVER_NAME}@${SERVER_IP}::view\n\n#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)\n#${SERVER_NAME} travisWeb端配置的环境变量(userName)\n#${SERVER_IP} 服务器IP\n#::view 设置的模块\n```\n","slug":"自动部署远程服务器-Vue","published":1,"updated":"2018-08-31T03:13:01.225Z","_id":"cjlhemjah0025ponujcjzdpio","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Travis自动部署vue打包后的文件到远程服务器<br><a id=\"more\"></a></p>\n<h5 id=\"生成密钥对\"><a href=\"#生成密钥对\" class=\"headerlink\" title=\"生成密钥对\"></a>生成密钥对</h5><p><code>ssh-keygen</code><br>输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下<code>cd ~/.ssh</code>，里面有3个文件</p>\n<h5 id=\"新建config文件\"><a href=\"#新建config文件\" class=\"headerlink\" title=\"新建config文件\"></a>新建config文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host test</span><br><span class=\"line\">HostName <span class=\"number\">182.61</span><span class=\"number\">.20</span><span class=\"number\">.24</span> </span><br><span class=\"line\">#登陆的用户名</span><br><span class=\"line\">User root</span><br><span class=\"line\">IdentitiesOnly yes</span><br><span class=\"line\">#登陆使用的密钥</span><br><span class=\"line\">IdentityFile ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n<p>设置.ssh目录为700:<code>chmod 700 ~/.ssh/</code><br>设置.ssh目录下的文件为600:<code>chmod 600 ~/.ssh/*</code></p>\n<h5 id=\"将生成的公钥添加为受信列表（重点）\"><a href=\"#将生成的公钥添加为受信列表（重点）\" class=\"headerlink\" title=\"将生成的公钥添加为受信列表（重点）\"></a>将生成的公钥添加为受信列表（重点）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">cat authorized_keys --查看</span><br><span class=\"line\"># authorized_keys文件内容类似这样</span><br><span class=\"line\">ssh-rsa  *************centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"服务器安装Travis\"><a href=\"#服务器安装Travis\" class=\"headerlink\" title=\"服务器安装Travis\"></a>服务器安装Travis</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby</span><br><span class=\"line\">apt install ruby</span><br><span class=\"line\"># 安装travis命令行工具，如无法使用gem指令须先安装ruby</span><br><span class=\"line\">gem install travis</span><br><span class=\"line\"># --auto自动登录github帐号</span><br><span class=\"line\">travis login --auto</span><br><span class=\"line\"># 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行</span><br><span class=\"line\">travis encrypt-file ~<span class=\"regexp\">/.ssh/i</span>d_rsa --add</span><br><span class=\"line\"># 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去</span><br><span class=\"line\">注意：</span><br><span class=\"line\">gem install travis 报错can<span class=\"string\">'t find header files for ruby at /usr/lib/ruby/include/ruby.h</span></span><br><span class=\"line\"><span class=\"string\">解决办法：</span></span><br><span class=\"line\"><span class=\"string\">#更换gem的source</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources -l</span></span><br><span class=\"line\"><span class=\"string\">*** CURRENT SOURCES ***</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">https://ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\"># 请确保只有 ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\">#安装ruby-dev</span></span><br><span class=\"line\"><span class=\"string\">apt-get install ruby-dev</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"><a href=\"#上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\" class=\"headerlink\" title=\"上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"></a>上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730</h4><h5 id=\"另一种方法–rsync\"><a href=\"#另一种方法–rsync\" class=\"headerlink\" title=\"另一种方法–rsync\"></a>另一种方法–rsync</h5><p>启动方式：<br><code>rsync --daemon</code><br>创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/rsyncd: configuration file for rsync daemon mode</span><br><span class=\"line\"></span><br><span class=\"line\"># See rsyncd.conf man page for more options.</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration example:</span><br><span class=\"line\">uid = root</span><br><span class=\"line\">gid = root</span><br><span class=\"line\">use chroot = no</span><br><span class=\"line\">max connections =<span class=\"number\">4</span></span><br><span class=\"line\">pid file = <span class=\"regexp\">/var/</span>run/rsyncd.pid</span><br><span class=\"line\">log file = <span class=\"regexp\">/var/</span>log/rsyncd.log</span><br><span class=\"line\">lock file = <span class=\"regexp\">/var/</span>run/rsyncd.lock</span><br><span class=\"line\"></span><br><span class=\"line\">#设置模块</span><br><span class=\"line\">[view] </span><br><span class=\"line\">path = <span class=\"regexp\">/srv/</span>view</span><br><span class=\"line\">read only = no</span><br><span class=\"line\">auth users = root</span><br><span class=\"line\">secrets file = <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<p>1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限</p>\n<p>2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件</p>\n<p>3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock</p>\n<p>4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径</p>\n<p>5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行</p>\n<p>7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式<br><code>root:123456</code><br>此文件权限必须为600，否则会报错<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行命令：</span><br><span class=\"line\">echo <span class=\"string\">\"root:123456\"</span> &gt; <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">chmod <span class=\"number\">600</span> /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure></p>\n<p>8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用</p>\n<p>当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错</p>\n<h5 id=\"Travis配置文件\"><a href=\"#Travis配置文件\" class=\"headerlink\" title=\"Travis配置文件\"></a>Travis配置文件</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#指定node版本</span><br><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js:</span><br><span class=\"line\">- <span class=\"string\">'8'</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">#指定只有检测到master分支有变动时才执行任务</span><br><span class=\"line\">branchs:</span><br><span class=\"line\">  only:</span><br><span class=\"line\">  - master  </span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">install:</span><br><span class=\"line\">- echo  $RSYNCPWD &gt; rsyncd.passwd </span><br><span class=\"line\">- chmod <span class=\"number\">600</span> rsyncd.passwd</span><br><span class=\"line\">- npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- npm run build</span><br><span class=\"line\"></span><br><span class=\"line\">after_success:</span><br><span class=\"line\">- rsync --<span class=\"keyword\">delete</span> --password-file=./rsyncd.passwd -r ./dist $&#123;SERVER_NAME&#125;@$&#123;SERVER_IP&#125;::view</span><br><span class=\"line\"></span><br><span class=\"line\">#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)</span><br><span class=\"line\">#$&#123;SERVER_NAME&#125; travisWeb端配置的环境变量(userName)</span><br><span class=\"line\">#$&#123;SERVER_IP&#125; 服务器IP</span><br><span class=\"line\">#::view 设置的模块</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Travis自动部署vue打包后的文件到远程服务器<br>","more":"</p>\n<h5 id=\"生成密钥对\"><a href=\"#生成密钥对\" class=\"headerlink\" title=\"生成密钥对\"></a>生成密钥对</h5><p><code>ssh-keygen</code><br>输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下<code>cd ~/.ssh</code>，里面有3个文件</p>\n<h5 id=\"新建config文件\"><a href=\"#新建config文件\" class=\"headerlink\" title=\"新建config文件\"></a>新建config文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host test</span><br><span class=\"line\">HostName <span class=\"number\">182.61</span><span class=\"number\">.20</span><span class=\"number\">.24</span> </span><br><span class=\"line\">#登陆的用户名</span><br><span class=\"line\">User root</span><br><span class=\"line\">IdentitiesOnly yes</span><br><span class=\"line\">#登陆使用的密钥</span><br><span class=\"line\">IdentityFile ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n<p>设置.ssh目录为700:<code>chmod 700 ~/.ssh/</code><br>设置.ssh目录下的文件为600:<code>chmod 600 ~/.ssh/*</code></p>\n<h5 id=\"将生成的公钥添加为受信列表（重点）\"><a href=\"#将生成的公钥添加为受信列表（重点）\" class=\"headerlink\" title=\"将生成的公钥添加为受信列表（重点）\"></a>将生成的公钥添加为受信列表（重点）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">cat authorized_keys --查看</span><br><span class=\"line\"># authorized_keys文件内容类似这样</span><br><span class=\"line\">ssh-rsa  *************centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"服务器安装Travis\"><a href=\"#服务器安装Travis\" class=\"headerlink\" title=\"服务器安装Travis\"></a>服务器安装Travis</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby</span><br><span class=\"line\">apt install ruby</span><br><span class=\"line\"># 安装travis命令行工具，如无法使用gem指令须先安装ruby</span><br><span class=\"line\">gem install travis</span><br><span class=\"line\"># --auto自动登录github帐号</span><br><span class=\"line\">travis login --auto</span><br><span class=\"line\"># 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行</span><br><span class=\"line\">travis encrypt-file ~<span class=\"regexp\">/.ssh/i</span>d_rsa --add</span><br><span class=\"line\"># 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去</span><br><span class=\"line\">注意：</span><br><span class=\"line\">gem install travis 报错can<span class=\"string\">'t find header files for ruby at /usr/lib/ruby/include/ruby.h</span></span><br><span class=\"line\"><span class=\"string\">解决办法：</span></span><br><span class=\"line\"><span class=\"string\">#更换gem的source</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources -l</span></span><br><span class=\"line\"><span class=\"string\">*** CURRENT SOURCES ***</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">https://ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\"># 请确保只有 ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\">#安装ruby-dev</span></span><br><span class=\"line\"><span class=\"string\">apt-get install ruby-dev</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"><a href=\"#上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\" class=\"headerlink\" title=\"上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"></a>上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730</h4><h5 id=\"另一种方法–rsync\"><a href=\"#另一种方法–rsync\" class=\"headerlink\" title=\"另一种方法–rsync\"></a>另一种方法–rsync</h5><p>启动方式：<br><code>rsync --daemon</code><br>创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/rsyncd: configuration file for rsync daemon mode</span><br><span class=\"line\"></span><br><span class=\"line\"># See rsyncd.conf man page for more options.</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration example:</span><br><span class=\"line\">uid = root</span><br><span class=\"line\">gid = root</span><br><span class=\"line\">use chroot = no</span><br><span class=\"line\">max connections =<span class=\"number\">4</span></span><br><span class=\"line\">pid file = <span class=\"regexp\">/var/</span>run/rsyncd.pid</span><br><span class=\"line\">log file = <span class=\"regexp\">/var/</span>log/rsyncd.log</span><br><span class=\"line\">lock file = <span class=\"regexp\">/var/</span>run/rsyncd.lock</span><br><span class=\"line\"></span><br><span class=\"line\">#设置模块</span><br><span class=\"line\">[view] </span><br><span class=\"line\">path = <span class=\"regexp\">/srv/</span>view</span><br><span class=\"line\">read only = no</span><br><span class=\"line\">auth users = root</span><br><span class=\"line\">secrets file = <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<p>1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限</p>\n<p>2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件</p>\n<p>3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock</p>\n<p>4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径</p>\n<p>5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行</p>\n<p>7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式<br><code>root:123456</code><br>此文件权限必须为600，否则会报错<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行命令：</span><br><span class=\"line\">echo <span class=\"string\">\"root:123456\"</span> &gt; <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">chmod <span class=\"number\">600</span> /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure></p>\n<p>8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用</p>\n<p>当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错</p>\n<h5 id=\"Travis配置文件\"><a href=\"#Travis配置文件\" class=\"headerlink\" title=\"Travis配置文件\"></a>Travis配置文件</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#指定node版本</span><br><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js:</span><br><span class=\"line\">- <span class=\"string\">'8'</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">#指定只有检测到master分支有变动时才执行任务</span><br><span class=\"line\">branchs:</span><br><span class=\"line\">  only:</span><br><span class=\"line\">  - master  </span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">install:</span><br><span class=\"line\">- echo  $RSYNCPWD &gt; rsyncd.passwd </span><br><span class=\"line\">- chmod <span class=\"number\">600</span> rsyncd.passwd</span><br><span class=\"line\">- npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- npm run build</span><br><span class=\"line\"></span><br><span class=\"line\">after_success:</span><br><span class=\"line\">- rsync --<span class=\"keyword\">delete</span> --password-file=./rsyncd.passwd -r ./dist $&#123;SERVER_NAME&#125;@$&#123;SERVER_IP&#125;::view</span><br><span class=\"line\"></span><br><span class=\"line\">#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)</span><br><span class=\"line\">#$&#123;SERVER_NAME&#125; travisWeb端配置的环境变量(userName)</span><br><span class=\"line\">#$&#123;SERVER_IP&#125; 服务器IP</span><br><span class=\"line\">#::view 设置的模块</span><br></pre></td></tr></table></figure>"},{"title":"服务器部署vue+nginx配置","date":"2018-08-01T07:52:51.000Z","_content":"Linux || unbuntu 环境下部署vue+nginx配置\n<!-- more -->\n##### nginx 配置\n```JavaScript\n//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.\ninclude shadow/*.conf;\n```\n##### conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\n```JavaScript\nserver {\n  #端口\n  listen   80;\n  #设置文件存放路径\n  root /srv/view/dist/;\n  index index.html;\n\n  server_name www.shadow.com;\n  \n  #图片代理\n  location /images {\n    proxy_pass http://127.0.0.1:3000;\n  }\n\n  location / {\n    try_files $uri $uri/ /index.html;\n  }\n\n  #接口代理\n  location /api {\n    proxy_redirect off;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;\n    proxy_pass http://127.0.0.1:3000;\n  }\n}\n//其他路径配置：\n location /vue/ {\n    try_files $uri $uri/ @router;\n}\nlocation @router {\n   rewrite ^.*$ /vue/index.html last;\n }\n\n```","source":"_posts/服务器部署vue-nginx配置.md","raw":"---\ntitle: 服务器部署vue+nginx配置\ndate: 2018-08-01 15:52:51\ncategories:\n- Vue\ntags:\n- Vue\n---\nLinux || unbuntu 环境下部署vue+nginx配置\n<!-- more -->\n##### nginx 配置\n```JavaScript\n//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.\ninclude shadow/*.conf;\n```\n##### conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\n```JavaScript\nserver {\n  #端口\n  listen   80;\n  #设置文件存放路径\n  root /srv/view/dist/;\n  index index.html;\n\n  server_name www.shadow.com;\n  \n  #图片代理\n  location /images {\n    proxy_pass http://127.0.0.1:3000;\n  }\n\n  location / {\n    try_files $uri $uri/ /index.html;\n  }\n\n  #接口代理\n  location /api {\n    proxy_redirect off;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;\n    proxy_pass http://127.0.0.1:3000;\n  }\n}\n//其他路径配置：\n location /vue/ {\n    try_files $uri $uri/ @router;\n}\nlocation @router {\n   rewrite ^.*$ /vue/index.html last;\n }\n\n```","slug":"服务器部署vue-nginx配置","published":1,"updated":"2018-08-31T05:14:37.842Z","_id":"cjlhemjar002cponu5z9bk2dc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Linux || unbuntu 环境下部署vue+nginx配置<br><a id=\"more\"></a></p>\n<h5 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.</span></span><br><span class=\"line\">include shadow<span class=\"comment\">/*.conf;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\"><a href=\"#conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\" class=\"headerlink\" title=\"conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\"></a>conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  #端口</span><br><span class=\"line\">  listen   <span class=\"number\">80</span>;</span><br><span class=\"line\">  #设置文件存放路径</span><br><span class=\"line\">  root /srv/view/dist/;</span><br><span class=\"line\">  index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">  server_name www.shadow.com;</span><br><span class=\"line\">  </span><br><span class=\"line\">  #图片代理</span><br><span class=\"line\">  location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    try_files $uri $uri/ <span class=\"regexp\">/index.html;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  #接口代理</span></span><br><span class=\"line\"><span class=\"regexp\">  location /</span>api &#123;</span><br><span class=\"line\">    proxy_redirect off;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//其他路径配置：</span></span><br><span class=\"line\"> location /vue/ &#123;</span><br><span class=\"line\">    try_files $uri $uri/ @router;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location @router &#123;</span><br><span class=\"line\">   rewrite ^.*$ /vue/index.html last;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Linux || unbuntu 环境下部署vue+nginx配置<br>","more":"</p>\n<h5 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.</span></span><br><span class=\"line\">include shadow<span class=\"comment\">/*.conf;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\"><a href=\"#conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\" class=\"headerlink\" title=\"conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\"></a>conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  #端口</span><br><span class=\"line\">  listen   <span class=\"number\">80</span>;</span><br><span class=\"line\">  #设置文件存放路径</span><br><span class=\"line\">  root /srv/view/dist/;</span><br><span class=\"line\">  index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">  server_name www.shadow.com;</span><br><span class=\"line\">  </span><br><span class=\"line\">  #图片代理</span><br><span class=\"line\">  location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    try_files $uri $uri/ <span class=\"regexp\">/index.html;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  #接口代理</span></span><br><span class=\"line\"><span class=\"regexp\">  location /</span>api &#123;</span><br><span class=\"line\">    proxy_redirect off;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//其他路径配置：</span></span><br><span class=\"line\"> location /vue/ &#123;</span><br><span class=\"line\">    try_files $uri $uri/ @router;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location @router &#123;</span><br><span class=\"line\">   rewrite ^.*$ /vue/index.html last;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"记一些开发中遇到得问题...","date":"2018-06-15T07:36:11.000Z","_content":"平时开发中遇到的一些问题及解决方法\n<!-- more -->\n##### onclick事件传递对象参数\n```JavaScript\nonclick=\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\"\ndemo:\n<a class=\"fc-check\" onclick=\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"/g, '&quot;')+')\">查看</a>//传递单个参数 单引号拼接\n\"<td width=\\\"120\\\"><a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\\\">查看</a></td>\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义\n```\n##### ajax post方法参数问题\n```JavaScript\nlet obj={};\nobj.gameName='xxx';\nobj.gameId='xxx';\n$.ajax({\n            type: \"POST\",\n            url: url+ \"?t=\" + new Date().getTime(),\n            data: JSON.stringify(obj),\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (res) {\n               console.log(res)\n        });\n//使用contentType: “application/json”则data只能是json字符串\n```\n##### switch(data){}\n```JavaScript\nswitch(data){\n  case '1':\n      console.log(11);\n      break;\ncase 2:\n    console.log(22);\n    break;\n}\n//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);\n//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了\n```\n##### [WdatePicker.js](https://blog.csdn.net/nnn_net/article/details/50340929)使用\n```JavaScript\n//代码如下：\n<input id=\"startTime\" class=\"Wdate m-letf3\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'})\"/>\n<input id=\"endTime\" class=\"Wdate\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'})\"/>\n//显示年月日时分秒:onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss'})\"\n//结束时间为开始时间七天以内:startTime--maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'\n// endTime--minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'\n```\n##### 使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\n```JavaScript\ntypeof item.price//string\n//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用\nparseInt(item.price).toFixed(2)//item.price=34.000 -- 34.00\n```\n###### js获取当前时间的前一天/后一天\n```JavaScript\nvar now=new Date();\nvar preDate = new Date(now.getTime() - 24*60*60*1000); //前一天\nvar nextDate = new Date(now.getTime() + 24*60*60*1000); //后一天\n```\n##### try catch\n```JavaScript\n//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题\ntry {\n    tryCode - 尝试执行代码块\n}\ncatch(err) {\n    catchCode - 捕获错误的代码块\n} \nfinally {\n    finallyCode - 无论 try / catch 结果如何都会执行的代码块\n}\n//demo\n// 获取URL对应参数值\nfunction getUrlParam(name){\n    var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\"); //构造一个含有目标参数的正则表达式对象\n    var r = window.location.search.substr(1).match(reg);  //匹配目标参数\n    if (r!=null){\n        try {\n            return decodeURI(r[2]); //报错执行catch下得代码\n        }catch(e){\n            return unescape(r[2])\n        }\n    }else{\n        return null; //返回参数值\n    } \n}\n```\n##### 限制input输入数字且小数点后最多n位\n```JavaScript\nfunction num(value,length) {\n    //length代表可以输入得小数位数\n    value = value.replace(/[^\\d.]/g, \"\");  //清除“数字”和“.”以外的字符\n    value = value.replace(/\\.{2,}/g, \".\"); //只保留第一个. 清除多余的\n    value = value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    var str='^(\\\\-)*(\\\\d+)\\\\.([0-9]{1,'+length+'}).*$';//给正则表达式代入动态参数 ，注意--反斜杠需要转义\n    var reg=new RegExp(str);\n    value = value.replace(reg,'$1$2.$3');//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]{1,2}).*$/\n    if (value.indexOf(\".\") < 0 && value != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\n       value = parseFloat(value);\n    }\n    return value\n}\n//使用：如果小数后面五位则num(this.value,5)\n<input placeholder=\"\" onkeyup=\"this.value=num(this.value,2)\" />\n```\n##### 测试环境线上环境接口域名不同\n```JavaScript\n#获取协议 域名端口 拼接请求url\n`${location.protocol}//${location.host}`\n`${location.protocol}//${location.host}/api/getInfo`\n```","source":"_posts/记一些开发中遇到得问题.md","raw":"---\ntitle: 记一些开发中遇到得问题...\ndate: 2018-06-15 15:36:11\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n平时开发中遇到的一些问题及解决方法\n<!-- more -->\n##### onclick事件传递对象参数\n```JavaScript\nonclick=\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\"\ndemo:\n<a class=\"fc-check\" onclick=\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"/g, '&quot;')+')\">查看</a>//传递单个参数 单引号拼接\n\"<td width=\\\"120\\\"><a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\\\">查看</a></td>\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义\n```\n##### ajax post方法参数问题\n```JavaScript\nlet obj={};\nobj.gameName='xxx';\nobj.gameId='xxx';\n$.ajax({\n            type: \"POST\",\n            url: url+ \"?t=\" + new Date().getTime(),\n            data: JSON.stringify(obj),\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (res) {\n               console.log(res)\n        });\n//使用contentType: “application/json”则data只能是json字符串\n```\n##### switch(data){}\n```JavaScript\nswitch(data){\n  case '1':\n      console.log(11);\n      break;\ncase 2:\n    console.log(22);\n    break;\n}\n//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);\n//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了\n```\n##### [WdatePicker.js](https://blog.csdn.net/nnn_net/article/details/50340929)使用\n```JavaScript\n//代码如下：\n<input id=\"startTime\" class=\"Wdate m-letf3\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'})\"/>\n<input id=\"endTime\" class=\"Wdate\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'})\"/>\n//显示年月日时分秒:onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss'})\"\n//结束时间为开始时间七天以内:startTime--maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'\n// endTime--minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'\n```\n##### 使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\n```JavaScript\ntypeof item.price//string\n//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用\nparseInt(item.price).toFixed(2)//item.price=34.000 -- 34.00\n```\n###### js获取当前时间的前一天/后一天\n```JavaScript\nvar now=new Date();\nvar preDate = new Date(now.getTime() - 24*60*60*1000); //前一天\nvar nextDate = new Date(now.getTime() + 24*60*60*1000); //后一天\n```\n##### try catch\n```JavaScript\n//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题\ntry {\n    tryCode - 尝试执行代码块\n}\ncatch(err) {\n    catchCode - 捕获错误的代码块\n} \nfinally {\n    finallyCode - 无论 try / catch 结果如何都会执行的代码块\n}\n//demo\n// 获取URL对应参数值\nfunction getUrlParam(name){\n    var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\"); //构造一个含有目标参数的正则表达式对象\n    var r = window.location.search.substr(1).match(reg);  //匹配目标参数\n    if (r!=null){\n        try {\n            return decodeURI(r[2]); //报错执行catch下得代码\n        }catch(e){\n            return unescape(r[2])\n        }\n    }else{\n        return null; //返回参数值\n    } \n}\n```\n##### 限制input输入数字且小数点后最多n位\n```JavaScript\nfunction num(value,length) {\n    //length代表可以输入得小数位数\n    value = value.replace(/[^\\d.]/g, \"\");  //清除“数字”和“.”以外的字符\n    value = value.replace(/\\.{2,}/g, \".\"); //只保留第一个. 清除多余的\n    value = value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    var str='^(\\\\-)*(\\\\d+)\\\\.([0-9]{1,'+length+'}).*$';//给正则表达式代入动态参数 ，注意--反斜杠需要转义\n    var reg=new RegExp(str);\n    value = value.replace(reg,'$1$2.$3');//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]{1,2}).*$/\n    if (value.indexOf(\".\") < 0 && value != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\n       value = parseFloat(value);\n    }\n    return value\n}\n//使用：如果小数后面五位则num(this.value,5)\n<input placeholder=\"\" onkeyup=\"this.value=num(this.value,2)\" />\n```\n##### 测试环境线上环境接口域名不同\n```JavaScript\n#获取协议 域名端口 拼接请求url\n`${location.protocol}//${location.host}`\n`${location.protocol}//${location.host}/api/getInfo`\n```","slug":"记一些开发中遇到得问题","published":1,"updated":"2018-08-31T05:12:21.545Z","_id":"cjlhemjas002dponurjs6tpcb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>平时开发中遇到的一些问题及解决方法<br><a id=\"more\"></a></p>\n<h5 id=\"onclick事件传递对象参数\"><a href=\"#onclick事件传递对象参数\" class=\"headerlink\" title=\"onclick事件传递对象参数\"></a>onclick事件传递对象参数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onclick=<span class=\"string\">\"todo(\"</span>+<span class=\"built_in\">JSON</span>.stringify(data).replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">\")\"</span></span><br><span class=\"line\">demo:</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fc-check\"</span> onclick=<span class=\"string\">\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"</span>/g, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">')\"&gt;查看&lt;/a&gt;//传递单个参数 单引号拼接</span></span><br><span class=\"line\"><span class=\"string\">\"&lt;td width=\\\"120\\\"&gt;&lt;a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '</span>&amp;quot;<span class=\"string\">')+\")\\\"&gt;查看&lt;/a&gt;&lt;/td&gt;\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-post方法参数问题\"><a href=\"#ajax-post方法参数问题\" class=\"headerlink\" title=\"ajax post方法参数问题\"></a>ajax post方法参数问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj=&#123;&#125;;</span><br><span class=\"line\">obj.gameName=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">obj.gameId=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">            url: url+ <span class=\"string\">\"?t=\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</span><br><span class=\"line\">            data: <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">               <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"><span class=\"comment\">//使用contentType: “application/json”则data只能是json字符串</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"switch-data\"><a href=\"#switch-data\" class=\"headerlink\" title=\"switch(data){}\"></a>switch(data){}</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);</span></span><br><span class=\"line\"><span class=\"comment\">//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"WdatePicker-js使用\"><a href=\"#WdatePicker-js使用\" class=\"headerlink\" title=\"WdatePicker.js使用\"></a><a href=\"https://blog.csdn.net/nnn_net/article/details/50340929\" target=\"_blank\" rel=\"noopener\">WdatePicker.js</a>使用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//代码如下：</span></span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"startTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate m-letf3\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"endTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\"><span class=\"comment\">//显示年月日时分秒:onFocus=\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss'&#125;)\"</span></span><br><span class=\"line\"><span class=\"comment\">//结束时间为开始时间七天以内:startTime--maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'</span></span><br><span class=\"line\"><span class=\"comment\">// endTime--minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\"><a href=\"#使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\" class=\"headerlink\" title=\"使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\"></a>使用toFixed()函数时，出现“toFixed() is not a function”的解决办法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> item.price<span class=\"comment\">//string</span></span><br><span class=\"line\"><span class=\"comment\">//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(item.price).toFixed(<span class=\"number\">2</span>)<span class=\"comment\">//item.price=34.000 -- 34.00</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"js获取当前时间的前一天-后一天\"><a href=\"#js获取当前时间的前一天-后一天\" class=\"headerlink\" title=\"js获取当前时间的前一天/后一天\"></a>js获取当前时间的前一天/后一天</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> now=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> preDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() - <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//前一天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() + <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//后一天</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"try-catch\"><a href=\"#try-catch\" class=\"headerlink\" title=\"try catch\"></a>try catch</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    tryCode - 尝试执行代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    catchCode - 捕获错误的代码块</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    finallyCode - 无论 <span class=\"keyword\">try</span> / <span class=\"keyword\">catch</span> 结果如何都会执行的代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//demo</span></span><br><span class=\"line\"><span class=\"comment\">// 获取URL对应参数值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUrlParam</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span>+ name +<span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>); <span class=\"comment\">//构造一个含有目标参数的正则表达式对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);  <span class=\"comment\">//匹配目标参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">decodeURI</span>(r[<span class=\"number\">2</span>]); <span class=\"comment\">//报错执行catch下得代码</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(r[<span class=\"number\">2</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>; <span class=\"comment\">//返回参数值</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位\"><a href=\"#限制input输入数字且小数点后最多n位\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位\"></a>限制input输入数字且小数点后最多n位</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">value,length</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//length代表可以输入得小数位数</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>);  <span class=\"comment\">//清除“数字”和“.”以外的字符</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个. 清除多余的</span></span><br><span class=\"line\">    value = value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str=<span class=\"string\">'^(\\\\-)*(\\\\d+)\\\\.([0-9]&#123;1,'</span>+length+<span class=\"string\">'&#125;).*$'</span>;<span class=\"comment\">//给正则表达式代入动态参数 ，注意--反斜杠需要转义</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str);</span><br><span class=\"line\">    value = value.replace(reg,<span class=\"string\">'$1$2.$3'</span>);<span class=\"comment\">//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]&#123;1,2&#125;).*$/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.indexOf(<span class=\"string\">\".\"</span>) &lt; <span class=\"number\">0</span> &amp;&amp; value != <span class=\"string\">\"\"</span>) &#123;<span class=\"comment\">//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额</span></span><br><span class=\"line\">       value = <span class=\"built_in\">parseFloat</span>(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用：如果小数后面五位则num(this.value,5)</span></span><br><span class=\"line\">&lt;input placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"this.value=num(this.value,2)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"测试环境线上环境接口域名不同\"><a href=\"#测试环境线上环境接口域名不同\" class=\"headerlink\" title=\"测试环境线上环境接口域名不同\"></a>测试环境线上环境接口域名不同</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#获取协议 域名端口 拼接请求url</span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>`</span></span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>/api/getInfo`</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>平时开发中遇到的一些问题及解决方法<br>","more":"</p>\n<h5 id=\"onclick事件传递对象参数\"><a href=\"#onclick事件传递对象参数\" class=\"headerlink\" title=\"onclick事件传递对象参数\"></a>onclick事件传递对象参数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onclick=<span class=\"string\">\"todo(\"</span>+<span class=\"built_in\">JSON</span>.stringify(data).replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">\")\"</span></span><br><span class=\"line\">demo:</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fc-check\"</span> onclick=<span class=\"string\">\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"</span>/g, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">')\"&gt;查看&lt;/a&gt;//传递单个参数 单引号拼接</span></span><br><span class=\"line\"><span class=\"string\">\"&lt;td width=\\\"120\\\"&gt;&lt;a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '</span>&amp;quot;<span class=\"string\">')+\")\\\"&gt;查看&lt;/a&gt;&lt;/td&gt;\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-post方法参数问题\"><a href=\"#ajax-post方法参数问题\" class=\"headerlink\" title=\"ajax post方法参数问题\"></a>ajax post方法参数问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj=&#123;&#125;;</span><br><span class=\"line\">obj.gameName=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">obj.gameId=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">            url: url+ <span class=\"string\">\"?t=\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</span><br><span class=\"line\">            data: <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">               <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"><span class=\"comment\">//使用contentType: “application/json”则data只能是json字符串</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"switch-data\"><a href=\"#switch-data\" class=\"headerlink\" title=\"switch(data){}\"></a>switch(data){}</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);</span></span><br><span class=\"line\"><span class=\"comment\">//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"WdatePicker-js使用\"><a href=\"#WdatePicker-js使用\" class=\"headerlink\" title=\"WdatePicker.js使用\"></a><a href=\"https://blog.csdn.net/nnn_net/article/details/50340929\" target=\"_blank\" rel=\"noopener\">WdatePicker.js</a>使用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//代码如下：</span></span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"startTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate m-letf3\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"endTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\"><span class=\"comment\">//显示年月日时分秒:onFocus=\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss'&#125;)\"</span></span><br><span class=\"line\"><span class=\"comment\">//结束时间为开始时间七天以内:startTime--maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'</span></span><br><span class=\"line\"><span class=\"comment\">// endTime--minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\"><a href=\"#使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\" class=\"headerlink\" title=\"使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\"></a>使用toFixed()函数时，出现“toFixed() is not a function”的解决办法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> item.price<span class=\"comment\">//string</span></span><br><span class=\"line\"><span class=\"comment\">//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(item.price).toFixed(<span class=\"number\">2</span>)<span class=\"comment\">//item.price=34.000 -- 34.00</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"js获取当前时间的前一天-后一天\"><a href=\"#js获取当前时间的前一天-后一天\" class=\"headerlink\" title=\"js获取当前时间的前一天/后一天\"></a>js获取当前时间的前一天/后一天</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> now=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> preDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() - <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//前一天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() + <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//后一天</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"try-catch\"><a href=\"#try-catch\" class=\"headerlink\" title=\"try catch\"></a>try catch</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    tryCode - 尝试执行代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    catchCode - 捕获错误的代码块</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    finallyCode - 无论 <span class=\"keyword\">try</span> / <span class=\"keyword\">catch</span> 结果如何都会执行的代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//demo</span></span><br><span class=\"line\"><span class=\"comment\">// 获取URL对应参数值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUrlParam</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span>+ name +<span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>); <span class=\"comment\">//构造一个含有目标参数的正则表达式对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);  <span class=\"comment\">//匹配目标参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">decodeURI</span>(r[<span class=\"number\">2</span>]); <span class=\"comment\">//报错执行catch下得代码</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(r[<span class=\"number\">2</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>; <span class=\"comment\">//返回参数值</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位\"><a href=\"#限制input输入数字且小数点后最多n位\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位\"></a>限制input输入数字且小数点后最多n位</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">value,length</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//length代表可以输入得小数位数</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>);  <span class=\"comment\">//清除“数字”和“.”以外的字符</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个. 清除多余的</span></span><br><span class=\"line\">    value = value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str=<span class=\"string\">'^(\\\\-)*(\\\\d+)\\\\.([0-9]&#123;1,'</span>+length+<span class=\"string\">'&#125;).*$'</span>;<span class=\"comment\">//给正则表达式代入动态参数 ，注意--反斜杠需要转义</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str);</span><br><span class=\"line\">    value = value.replace(reg,<span class=\"string\">'$1$2.$3'</span>);<span class=\"comment\">//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]&#123;1,2&#125;).*$/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.indexOf(<span class=\"string\">\".\"</span>) &lt; <span class=\"number\">0</span> &amp;&amp; value != <span class=\"string\">\"\"</span>) &#123;<span class=\"comment\">//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额</span></span><br><span class=\"line\">       value = <span class=\"built_in\">parseFloat</span>(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用：如果小数后面五位则num(this.value,5)</span></span><br><span class=\"line\">&lt;input placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"this.value=num(this.value,2)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"测试环境线上环境接口域名不同\"><a href=\"#测试环境线上环境接口域名不同\" class=\"headerlink\" title=\"测试环境线上环境接口域名不同\"></a>测试环境线上环境接口域名不同</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#获取协议 域名端口 拼接请求url</span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>`</span></span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>/api/getInfo`</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlhemj430000ponu1rbha107","category_id":"cjlhemj4d0002ponuqasu119q","_id":"cjlhemj4s000cponu57234kda"},{"post_id":"cjlhemj4a0001ponugnpr2mew","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemj4v000hponudmay8tze"},{"post_id":"cjlhemj4f0004ponuod5kh64b","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemj54000pponu08b97xrx"},{"post_id":"cjlhemj4h0005ponui3dkckxj","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemj55000rponugviat0tb"},{"post_id":"cjlhemj4j0006ponueabgbvdk","category_id":"cjlhemj52000nponurdjgqane","_id":"cjlhemj58000vponuikodxwkl"},{"post_id":"cjlhemj4m000aponubv6tv30x","category_id":"cjlhemj56000sponutnxnveri","_id":"cjlhemj5a000xponub5hvxl6j"},{"post_id":"cjlhemj93000yponur6o583er","category_id":"cjlhemj56000sponutnxnveri","_id":"cjlhemj9g0016ponuvdwb2hnk"},{"post_id":"cjlhemj960010ponugrcexfki","category_id":"cjlhemj4d0002ponuqasu119q","_id":"cjlhemj9k0019ponu3zpsov7i"},{"post_id":"cjlhemj9a0013ponuiuekgtuo","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemj9m001cponuzkquz635"},{"post_id":"cjlhemj9e0015ponur6ih0pil","category_id":"cjlhemj4d0002ponuqasu119q","_id":"cjlhemj9p001fponu88tu66jb"},{"post_id":"cjlhemj9i0018ponu94ka0qrh","category_id":"cjlhemj4d0002ponuqasu119q","_id":"cjlhemj9s001iponuz36mp72k"},{"post_id":"cjlhemj9l001bponupdug0bdq","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemj9v001lponuplmepmom"},{"post_id":"cjlhemj9o001eponuxwyflzrx","category_id":"cjlhemj56000sponutnxnveri","_id":"cjlhemj9z001oponu33wpm6ke"},{"post_id":"cjlhemj9q001hponua9w40ds1","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemja2001rponu3n79t086"},{"post_id":"cjlhemj9u001kponu9jr4z63m","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemja4001uponuuidyikia"},{"post_id":"cjlhemj9x001nponu45mjpbob","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemja9001xponustn2s64a"},{"post_id":"cjlhemja1001qponuqxa29vmn","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemjac0020ponurd8tuy15"},{"post_id":"cjlhemja3001tponu2rzxkd7q","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemjaf0023ponufwgwxbb3"},{"post_id":"cjlhemja5001wponu2woon02n","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemjai0026ponuxe0zfgg8"},{"post_id":"cjlhemjaa001zponul8xdavlr","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemjaj0028ponurbgj38fj"},{"post_id":"cjlhemjae0022ponu9ve9rhml","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemjak002aponus8c1mxyd"},{"post_id":"cjlhemjar002cponu5z9bk2dc","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhemjaw002gponu375q7j0a"},{"post_id":"cjlhemjas002dponurjs6tpcb","category_id":"cjlhemj4k0007ponuxywvqxw2","_id":"cjlhemjaw002hponu5lxooft4"},{"post_id":"cjlhemj4t000fponuqd2nhlme","category_id":"cjlhemj4d0002ponuqasu119q","_id":"cjlhezk050001donuve4b0egn"},{"post_id":"cjlhemjah0025ponujcjzdpio","category_id":"cjlhemj4t000dponul8ongsto","_id":"cjlhfbxkt000118nuzmmaq1m1"}],"PostTag":[{"post_id":"cjlhemj430000ponu1rbha107","tag_id":"cjlhemj4f0003ponunagzp5fx","_id":"cjlhemj4m0009ponucp2y847u"},{"post_id":"cjlhemj4a0001ponugnpr2mew","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemj4v000gponut02atbhd"},{"post_id":"cjlhemj4f0004ponuod5kh64b","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemj51000lponu3j138aoj"},{"post_id":"cjlhemj4h0005ponui3dkckxj","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemj55000qponuzne2muql"},{"post_id":"cjlhemj4j0006ponueabgbvdk","tag_id":"cjlhemj52000oponu98pgbg6d","_id":"cjlhemj58000uponukmv9dvfh"},{"post_id":"cjlhemj4m000aponubv6tv30x","tag_id":"cjlhemj57000tponu9ezi25ie","_id":"cjlhemj59000wponuwpqq87f1"},{"post_id":"cjlhemj93000yponur6o583er","tag_id":"cjlhemj57000tponu9ezi25ie","_id":"cjlhemj990012ponuswz5kks0"},{"post_id":"cjlhemj960010ponugrcexfki","tag_id":"cjlhemj4f0003ponunagzp5fx","_id":"cjlhemj9e0014ponuclocgvqg"},{"post_id":"cjlhemj9a0013ponuiuekgtuo","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemj9h0017ponuyrspx1id"},{"post_id":"cjlhemj9e0015ponur6ih0pil","tag_id":"cjlhemj4f0003ponunagzp5fx","_id":"cjlhemj9l001aponupgueoagy"},{"post_id":"cjlhemj9i0018ponu94ka0qrh","tag_id":"cjlhemj4f0003ponunagzp5fx","_id":"cjlhemj9n001dponuoyt17th2"},{"post_id":"cjlhemj9l001bponupdug0bdq","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemj9q001gponuoh05xmpw"},{"post_id":"cjlhemj9o001eponuxwyflzrx","tag_id":"cjlhemj57000tponu9ezi25ie","_id":"cjlhemj9t001jponuk5us4i9d"},{"post_id":"cjlhemj9q001hponua9w40ds1","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemj9x001mponujea3gb8v"},{"post_id":"cjlhemj9u001kponu9jr4z63m","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemja0001pponu2alwnvs2"},{"post_id":"cjlhemj9x001nponu45mjpbob","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemja2001sponupeqlv8w1"},{"post_id":"cjlhemja1001qponuqxa29vmn","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemja4001vponui1uiv5pc"},{"post_id":"cjlhemja3001tponu2rzxkd7q","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemjaa001yponuxadjhb2g"},{"post_id":"cjlhemja5001wponu2woon02n","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemjae0021ponu6qdtgiou"},{"post_id":"cjlhemjaa001zponul8xdavlr","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemjag0024ponure9jlrc1"},{"post_id":"cjlhemjae0022ponu9ve9rhml","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemjaj0027ponulbbmc9zg"},{"post_id":"cjlhemjar002cponu5z9bk2dc","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhemjau002eponuo9xkogf5"},{"post_id":"cjlhemjas002dponurjs6tpcb","tag_id":"cjlhemj4l0008ponusti50xgj","_id":"cjlhemjav002fponudzxg2xl4"},{"post_id":"cjlhemj4t000fponuqd2nhlme","tag_id":"cjlhemj4f0003ponunagzp5fx","_id":"cjlhezk040000donuyhgye1lu"},{"post_id":"cjlhemjah0025ponujcjzdpio","tag_id":"cjlhemj4t000eponuv8khpq73","_id":"cjlhfbxkq000018nu4mazhlwk"}],"Tag":[{"name":"node","_id":"cjlhemj4f0003ponunagzp5fx"},{"name":"JavaScript","_id":"cjlhemj4l0008ponusti50xgj"},{"name":"Vue","_id":"cjlhemj4t000eponuv8khpq73"},{"name":"ES6","_id":"cjlhemj52000oponu98pgbg6d"},{"name":"git","_id":"cjlhemj57000tponu9ezi25ie"}]}}