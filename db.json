{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/can'tDel.png","path":"images/can'tDel.png","modified":0,"renderable":0},{"_id":"source/images/gulp-error.png","path":"images/gulp-error.png","modified":0,"renderable":0},{"_id":"source/images/cutArr.png","path":"images/cutArr.png","modified":0,"renderable":0},{"_id":"source/images/vueerror.jpg","path":"images/vueerror.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/shadow_qrcode.jpg","path":"assets/images/shadow_qrcode.jpg","modified":0,"renderable":0},{"_id":"source/assets/images/logo.jpg","path":"assets/images/logo.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/README.md","path":"live2d-widget/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/autoload.js","path":"live2d-widget/autoload.js","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/waifu-tips.js","path":"live2d-widget/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/waifu-tips.json","path":"live2d-widget/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/waifu.css","path":"live2d-widget/waifu.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/link.js","path":"js/src/link.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/demo/demo.html","path":"live2d-widget/demo/demo.html","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/live2d.min.js","path":"live2d-widget/live2d.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/demo/login.html","path":"live2d-widget/demo/login.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1546659515259},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1546659515259},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1546659515260},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1546659515262},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1546659515262},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1546659515263},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1546659515263},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1546659515263},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1546659515264},{"_id":"themes/next/README.md","hash":"927f82cfeb5969a89b815b5ec3a3f2881e3b1bb4","modified":1546659515265},{"_id":"themes/next/README.cn.md","hash":"87950c415dd162ff78e98b41f1148b85462103e2","modified":1546659515264},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1546659515264},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1546659515266},{"_id":"themes/next/_config.yml","hash":"e67ef8c7f364ebdf42aba1365167c8bf6f67c440","modified":1691224571655},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1546659515266},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1546659515306},{"_id":"source/_posts/Docker部署-DaoCloud.md","hash":"6eeacf56a5b8485680e039b470fd712e633d37b6","modified":1546659515199},{"_id":"source/_posts/Vue-router--beforeEach登录鉴权.md","hash":"4f5ca33f882d4ca3cb75d60c00728d63220ed41f","modified":1632832321522},{"_id":"source/_posts/HTTP错误状态码.md","hash":"46b907b84ebf8a907ec401f066307333d77cb729","modified":1546659515200},{"_id":"source/_posts/Vue中引入css使用-import无法识别-alias-别名-踩坑.md","hash":"0cd0d4562c3e93ff11dc19e8de635feac09a4cfa","modified":1580741115960},{"_id":"source/_posts/Vue循序渐进.md","hash":"e47bb4bc1f097a0539d56b78cd348a61f0eee390","modified":1546659515200},{"_id":"source/_posts/Vue疑难杂症.md","hash":"86c3f40c6a495310fb2fb3113e5ee2f3a3c69982","modified":1546659515200},{"_id":"source/_posts/export和exportDefault区别.md","hash":"e0d489b7ad66dc1a0c884a5125da99d8c463e4af","modified":1546659515201},{"_id":"source/_posts/express-mongodb写接口遇坑.md","hash":"c6c31a64834171f2886d957b7961c4cc0c1d9019","modified":1546659515201},{"_id":"source/_posts/el-upload二次封装.md","hash":"0a3dafb4357a3bb750cb3478feee9b0d8beafef1","modified":1632752015030},{"_id":"source/_posts/hello-world.md","hash":"c441bc9fe6ca781519aa799466508a84fc8abaf1","modified":1546659515202},{"_id":"source/_posts/js定时器执行一次和重复执行.md","hash":"a05fa7e23ccc8e9c66e42854a3d0f234fb09799b","modified":1591012959055},{"_id":"source/_posts/git操作遇到的问题.md","hash":"f11ef5d1d6ab7a23383dc1c2550ec45a4b8cdc1e","modified":1546659515202},{"_id":"source/_posts/git操作-github.md","hash":"69bf34f50ce04cfc89aa6c663a920cd79c32b638","modified":1603457255569},{"_id":"source/_posts/js数组相关.md","hash":"1cfbe8d5ddd24f7942ec3518799ccfa18ff3d345","modified":1625792329108},{"_id":"source/_posts/js踩坑IE8.md","hash":"b5f89a12425576b415ee166b6c6bd30865edb8f7","modified":1546659515203},{"_id":"source/_posts/linux服务器配置-node环境.md","hash":"8e36b99014dc84670456cef5a79550a0fd6909d8","modified":1546659515203},{"_id":"source/_posts/nodejs搭建简易脚手架遇到得坑.md","hash":"fd84b65b750aaa04c996cbebb6e9d0547e02d34e","modified":1546659893799},{"_id":"source/_posts/nodejs批量修改文件名.md","hash":"75f7e95e31e39a532d082b5c71ca77f16ee38cf4","modified":1546659515203},{"_id":"source/_posts/node升级10-x版本以后遇到的坑.md","hash":"3179ddf515f95e8e97ebe5f36d39bd63798132d7","modified":1546659515204},{"_id":"source/_posts/package.json and package-lock.json.md","hash":"207e2cf3706a173ed9c2b7b9361af3be999e8ea6","modified":1546659515205},{"_id":"source/_posts/nvm-nodejs版本管理工具-配置全局npm、cnpm.md","hash":"d4855a78aee1e572d26a7f3925c3a753ea1526d2","modified":1691155274888},{"_id":"source/_posts/travis-ci配置.md","hash":"4fdba16089a7db0812a6c046f32ba93ed9754238","modified":1546659515205},{"_id":"source/_posts/return和returnFalse的区别.md","hash":"b7692b79680963d941941c14df5d141d8e5b7f13","modified":1546659515205},{"_id":"source/_posts/vue-transition.md","hash":"4b51e87f2ede5190f3b782a1154184c32c13b9fe","modified":1546659515206},{"_id":"source/_posts/vue点击空白处隐藏.md","hash":"cd4d50e69e268c363e985dc86c4fa480c5c9b51c","modified":1546659515206},{"_id":"source/_posts/分秒倒计时.md","hash":"ec0617feedd729012d3d810d103daa2e4aef3170","modified":1594825594105},{"_id":"source/_posts/关于最新版vue-cli.md","hash":"5bbf59a796256a8254dd7349e98e007bcee7d4f9","modified":1546659515207},{"_id":"source/_posts/关于Vuex.md","hash":"830e4a327b25ccd21b2d03eea2769240a2639a27","modified":1546659515207},{"_id":"source/_posts/删除webpack打包导致无法删除的文件.md","hash":"29b6a7481dd64ed47436bcf447efa0e8f6b7d334","modified":1557412125603},{"_id":"source/_posts/判断是否滚动到底部.md","hash":"f3520faf050eebe0ee0c03746d3f7344726f36fd","modified":1546659515208},{"_id":"source/_posts/常用方法封装.md","hash":"1098be38250ac8f95792bf2da90f7c0c80daec76","modified":1604746388057},{"_id":"source/_posts/前端面试题.md","hash":"ec28ba361476938dad88d6cca98c303fea87daf7","modified":1587900003510},{"_id":"source/_posts/微信测试号接入微信sdk本地开发调试.md","hash":"94fe99670c392cdd9f0ca1574395b1462d7bd446","modified":1627480409189},{"_id":"source/_posts/服务器部署vue-nginx配置.md","hash":"48495e3a6a0c16885b5e251255926dd064840a5e","modified":1546659515208},{"_id":"source/_posts/自动部署远程服务器-Vue.md","hash":"839aedeef90bd9c7d3e2802bc3e2e29709537fee","modified":1546659515209},{"_id":"source/_posts/正则Collect.md","hash":"9f9ad6f74a1d91a2073cb07c6848f366da51bdd8","modified":1546659515209},{"_id":"source/categories/index.md","hash":"e88de07788348a4cc294cf047e98cb59fdb870d8","modified":1546659515211},{"_id":"source/_posts/记一些开发中遇到得问题.md","hash":"4b715a9a2191d66c2628a0874deac0ad108e4d86","modified":1603457285762},{"_id":"source/images/can'tDel.png","hash":"fc680632cd94b41b23a1da0545841f33040427ce","modified":1557412125604},{"_id":"source/images/gulp-error.png","hash":"a8de2b24ec5d4e40ae05b7e8edfca8985b4ad0c8","modified":1546659515212},{"_id":"source/images/cutArr.png","hash":"3608e82e57803cc58253cf671ffb43eac96e2447","modified":1580741115963},{"_id":"source/links/index.md","hash":"69f6b39f56936869617a38b737610c200416749c","modified":1691226957996},{"_id":"source/images/vueerror.jpg","hash":"2593855e9356416c40bd72c50d3d34d7fbe1f185","modified":1546659515213},{"_id":"source/links/linklist.json","hash":"207230debed06b2ad526a48e6e8d0b43522e2b93","modified":1691224638845},{"_id":"source/tags/index.md","hash":"a274c3ac9c8213bd73ad4adfbd42457b13f5cf67","modified":1546659515213},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1546659515260},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1546659515261},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1546659515261},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1546659515261},{"_id":"themes/next/layout/_layout.swig","hash":"4a8c17dc71fe19de947fb2c4fda03f97c64da05c","modified":1691225317497},{"_id":"themes/next/layout/archive.swig","hash":"e6d009d9a5e4bd0e7b92cab4c7656b1b4d0621d3","modified":1546659515304},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1546659515304},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1546659515305},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1546659515305},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1546659515305},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1546659515306},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1546659515267},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1546659515306},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1546659515268},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1546659515268},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1546659515268},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1546659515269},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1546659515269},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1546659515270},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1546659515270},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1546659515270},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1546659515271},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1546659515271},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1546659515272},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1546659515272},{"_id":"themes/next/languages/zh-Hans.yml","hash":"09a51ab48541c5bf4ffcbcb61fb42ff1affaf14e","modified":1691225745514},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1546659515273},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1546659515273},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1546659515442},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1546659515307},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1546659515308},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1546659515442},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1546659515442},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515362},{"_id":"source/assets/images/shadow_qrcode.jpg","hash":"57d853d9e178afb0078a3a15f5d64f250a597b5a","modified":1546659515211},{"_id":"source/assets/images/logo.jpg","hash":"6dc1c6efffe42356e7e19de3b7b32d4fb417d4dc","modified":1546659515210},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546659515274},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546659515274},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1546659515275},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1546659515275},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1546659515276},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1546659515285},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1546659515286},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1546659515276},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1546659515288},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1546659515277},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1546659515277},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1546659515298},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1546659515298},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1546659515299},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1546659515299},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1546659515300},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1546659515300},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1546659515300},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1546659515278},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1546659515278},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1546659515279},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1546659515280},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1546659515281},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1546659515281},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1546659515281},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1546659515308},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1546659515309},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1546659515309},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1546659515309},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1546659515310},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1546659515310},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1546659515311},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1546659515311},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1546659515312},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1546659515361},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1546659515362},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1546659515364},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546659515363},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1546659515364},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1546659515363},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1546659515365},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1546659515365},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1546659515366},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1546659515367},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1546659515366},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1546659515366},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1546659515367},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546659515368},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1546659515368},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546659515368},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1546659515369},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546659515369},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1546659515369},{"_id":"themes/next/source/live2d-widget/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":1632378601208},{"_id":"themes/next/source/live2d-widget/README.md","hash":"665054726a60b77a8f5e5b96527b8f1a4f166e30","modified":1632378601209},{"_id":"themes/next/source/live2d-widget/autoload.js","hash":"7cb95963351498023e9f57461e21a758dcfcf57a","modified":1669206538889},{"_id":"themes/next/source/live2d-widget/waifu-tips.js","hash":"52a13eea65985ce93fc1f48f3ed4a55b3488ded5","modified":1632384912378},{"_id":"themes/next/source/live2d-widget/waifu-tips.json","hash":"cc68124da17a8547f26ebca0c0596d20dea37238","modified":1632378601264},{"_id":"themes/next/source/live2d-widget/waifu.css","hash":"1b8e5244d414e1f63ca70bc537517475e89d208a","modified":1632384049802},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515287},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515287},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515345},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515346},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515347},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515360},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546659515361},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546659515287},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546659515288},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1546659515286},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1546659515289},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1546659515289},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1546659515290},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1546659515290},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1546659515291},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1546659515290},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1546659515291},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1546659515292},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1546659515292},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1546659515292},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1546659515293},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1546659515293},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1546659515293},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1546659515294},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1546659515295},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1546659515294},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1546659515296},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1546659515295},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1546659515296},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1546659515297},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1546659515297},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1546659515297},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1546659515303},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1546659515302},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1546659515302},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1546659515303},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1546659515279},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1546659515280},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1546659515282},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1546659515283},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1546659515282},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1546659515284},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1546659515283},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1546659515284},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1546659515284},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1546659515344},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1546659515345},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1546659515347},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1546659515346},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1546659515359},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1546659515359},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1546659515360},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1546659515361},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1546659515370},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1546659515371},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1546659515371},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1546659515372},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1546659515372},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1546659515372},{"_id":"themes/next/source/js/src/link.js","hash":"8283e36aeacb67cad84585fefed7c4dd6874a02a","modified":1691226300219},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1546659515373},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1546659515374},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1546659515375},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1546659515375},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1546659515376},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1546659515383},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1546659515387},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1546659515388},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1546659515398},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1546659515399},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1546659515398},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1546659515417},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1546659515399},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1546659515402},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1546659515402},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1546659515403},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1546659515402},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1546659515403},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1546659515419},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1546659515420},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1546659515420},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1546659515420},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1546659515422},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1546659515421},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1546659515423},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1546659515423},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1546659515423},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1546659515424},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1546659515424},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1546659515425},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1546659515425},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1546659515426},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1546659515427},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1546659515427},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1546659515428},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1546659515428},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1546659515429},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1546659515429},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1546659515430},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1546659515430},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1546659515432},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1546659515431},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1546659515432},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1546659515433},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1546659515438},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1546659515438},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1546659515440},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1546659515441},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1546659515441},{"_id":"themes/next/source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1632378601210},{"_id":"themes/next/source/live2d-widget/demo/demo.html","hash":"a26089ebcf2606b5b38e71a1e68d64f9344cac1a","modified":1632378601222},{"_id":"themes/next/source/live2d-widget/live2d.min.js","hash":"61a09b54a472b4d0541b7c50afb3dfdd172e062f","modified":1632378601261},{"_id":"themes/next/source/live2d-widget/demo/login.html","hash":"1fd46a102ccf4e89a483b85ef4bd79a563563836","modified":1632378601223},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1546659515418},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1546659515301},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1546659515302},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1546659515341},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1546659515314},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1546659515313},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1546659515314},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1546659515314},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1546659515315},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1546659515321},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1546659515332},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1546659515342},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1546659515342},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1546659515343},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1546659515344},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1546659515343},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1546659515344},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1546659515349},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1546659515349},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1546659515348},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1546659515349},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546659515351},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1546659515350},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1546659515352},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1546659515350},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1546659515353},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1546659515354},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1546659515354},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546659515354},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1546659515355},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1546659515356},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1546659515357},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1546659515357},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1546659515358},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1546659515358},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1546659515358},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1546659515374},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1546659515380},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1546659515382},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1546659515382},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1546659515389},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1546659515389},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1546659515390},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1546659515390},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1546659515391},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1546659515392},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1546659515395},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1546659515397},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1546659515397},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1546659515400},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1546659515401},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1546659515404},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1546659515405},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1546659515405},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1546659515437},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1546659515437},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1546659515381},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1546659515415},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1546659515416},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1546659515440},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1546659515315},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1546659515316},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1546659515317},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1546659515317},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1546659515316},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1546659515317},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1546659515319},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1546659515320},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1546659515318},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1546659515320},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1546659515318},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1546659515320},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1546659515321},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1546659515319},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1546659515322},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1546659515322},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1546659515322},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1546659515323},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1546659515323},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1546659515324},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1546659515324},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1546659515325},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1546659515325},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1546659515325},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1546659515326},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1546659515326},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1546659515326},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1546659515327},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1546659515327},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1546659515328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1546659515328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1546659515328},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1546659515329},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1546659515329},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1546659515331},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1546659515330},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1546659515331},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1546659515330},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1546659515331},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1546659515336},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1546659515336},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1546659515338},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1546659515339},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1546659515338},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1546659515339},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1546659515340},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1546659515340},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1546659515341},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1546659515340},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1546659515332},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1546659515333},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1546659515333},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1546659515334},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1546659515333},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1546659515334},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1546659515335},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1546659515335},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1546659515335},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1546659515352},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546659515353},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546659515356},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1546659515377},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1546659515377},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1546659515378},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1546659515378},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1546659515379},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1546659515392},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1546659515393},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1546659515393},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1546659515394},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1546659515394},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1546659515395},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1546659515407},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1546659515410},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1546659515414},{"_id":"themes/next/source/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1632378601220},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1546659515386},{"_id":"themes/next/source/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1632378601215},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1546659515436},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1546659515412}],"Category":[{"name":"node","_id":"clkxrz2s60004gw7gb8jx17vf"},{"name":"Vue","_id":"clkxrz2sg000bgw7gu0ufgf2s"},{"name":"JavaScript","_id":"clkxrz2sk000hgw7gz3gnpzoc"},{"name":"ES6","_id":"clkxrz2t00014gw7gkir4qbwh"},{"name":"git","_id":"clkxrz2t5001dgw7gzw88jpk6"}],"Data":[],"Page":[{"title":"categories","date":"2018-01-12T08:34:51.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-01-12 16:34:51\ntype: \"categories\"\n---\n","updated":"2019-01-05T03:38:35.211Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clkxrz2s10001gw7glqpecwj7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友情链接","date":"2023-08-05T08:32:54.000Z","type":"links","_content":"<style>\n    .links-content {\n        margin-top: 1rem;\n    }\n\n    .link-navigation::after {\n        content: \" \";\n        display: block;\n        clear: both;\n    }\n\n    .card {\n        width: 45%;\n        font-size: 1rem;\n        padding: 10px 20px;\n        border-radius: 4px;\n        transition-duration: 0.15s;\n        margin-bottom: 1rem;\n        display: flex;\n    }\n\n    .card:nth-child(odd) {\n        float: left;\n    }\n\n    .card:nth-child(even) {\n        float: right;\n    }\n\n    .card:hover {\n        transform: scale(1.1);\n        box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);\n    }\n\n    .card a {\n        border: none;\n    }\n\n    .card .ava {\n        width: 3rem !important;\n        height: 3rem !important;\n        margin: 0 !important;\n        margin-right: 1em !important;\n        border-radius: 4px;\n    }\n\n    .card .card-header {\n        font-style: italic;\n        overflow: hidden;\n        width: 100%;\n    }\n\n    .card .card-header a {\n        font-style: normal;\n        color: #000;\n        font-weight: bold;\n        text-decoration: none;\n    }\n\n    .card .card-header a:hover {\n        color: #d480aa;\n        text-decoration: none;\n    }\n\n    .card .card-header .info {\n        font-style: normal;\n        color: #a3a3a3;\n        font-size: 14px;\n        min-width: 0;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n</style>\n<div class=\"post-body\">\n    <div id=\"links\">\n        <div class=\"links-content\"><div class=\"link-navigation\"></div>\n        </div>\n    </div>\n</div>\n\n-----\n-----\n\n{% note success %}\n\n## 友链格式\n\n- 网站名称：IMyself\n- 网站地址：[https://shadownc.github.io/](https://shadownc.github.io/)\n- 网站描述：description\n- 网站 Logo/头像：[https://shadownc.github.io/assets/images/logo.jpg](https://shadownc.github.io/assets/images/logo.jpg)\n- 老站留言未开通,可去[新站](https://blog.lmyself.top/)留言新增友链\n{% endnote %}\n","source":"links/index.md","raw":"---\ntitle: 友情链接\ndate: 2023-08-05 16:32:54\ntype: links\n---\n<style>\n    .links-content {\n        margin-top: 1rem;\n    }\n\n    .link-navigation::after {\n        content: \" \";\n        display: block;\n        clear: both;\n    }\n\n    .card {\n        width: 45%;\n        font-size: 1rem;\n        padding: 10px 20px;\n        border-radius: 4px;\n        transition-duration: 0.15s;\n        margin-bottom: 1rem;\n        display: flex;\n    }\n\n    .card:nth-child(odd) {\n        float: left;\n    }\n\n    .card:nth-child(even) {\n        float: right;\n    }\n\n    .card:hover {\n        transform: scale(1.1);\n        box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);\n    }\n\n    .card a {\n        border: none;\n    }\n\n    .card .ava {\n        width: 3rem !important;\n        height: 3rem !important;\n        margin: 0 !important;\n        margin-right: 1em !important;\n        border-radius: 4px;\n    }\n\n    .card .card-header {\n        font-style: italic;\n        overflow: hidden;\n        width: 100%;\n    }\n\n    .card .card-header a {\n        font-style: normal;\n        color: #000;\n        font-weight: bold;\n        text-decoration: none;\n    }\n\n    .card .card-header a:hover {\n        color: #d480aa;\n        text-decoration: none;\n    }\n\n    .card .card-header .info {\n        font-style: normal;\n        color: #a3a3a3;\n        font-size: 14px;\n        min-width: 0;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n</style>\n<div class=\"post-body\">\n    <div id=\"links\">\n        <div class=\"links-content\"><div class=\"link-navigation\"></div>\n        </div>\n    </div>\n</div>\n\n-----\n-----\n\n{% note success %}\n\n## 友链格式\n\n- 网站名称：IMyself\n- 网站地址：[https://shadownc.github.io/](https://shadownc.github.io/)\n- 网站描述：description\n- 网站 Logo/头像：[https://shadownc.github.io/assets/images/logo.jpg](https://shadownc.github.io/assets/images/logo.jpg)\n- 老站留言未开通,可去[新站](https://blog.lmyself.top/)留言新增友链\n{% endnote %}\n","updated":"2023-08-05T09:20:07.091Z","path":"links/index.html","_id":"clkxrz2s40003gw7g4fq5qi1u","comments":1,"layout":"page","content":"<p><style><br>    .links-content {<br>        margin-top: 1rem;<br>    }</p>\n<pre><code>.link-navigation::after {\n    content: &quot; &quot;;\n    display: block;\n    clear: both;\n}\n\n.card {\n    width: 45%;\n    font-size: 1rem;\n    padding: 10px 20px;\n    border-radius: 4px;\n    transition-duration: 0.15s;\n    margin-bottom: 1rem;\n    display: flex;\n}\n\n.card:nth-child(odd) {\n    float: left;\n}\n\n.card:nth-child(even) {\n    float: right;\n}\n\n.card:hover {\n    transform: scale(1.1);\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);\n}\n\n.card a {\n    border: none;\n}\n\n.card .ava {\n    width: 3rem !important;\n    height: 3rem !important;\n    margin: 0 !important;\n    margin-right: 1em !important;\n    border-radius: 4px;\n}\n\n.card .card-header {\n    font-style: italic;\n    overflow: hidden;\n    width: 100%;\n}\n\n.card .card-header a {\n    font-style: normal;\n    color: #000;\n    font-weight: bold;\n    text-decoration: none;\n}\n\n.card .card-header a:hover {\n    color: #d480aa;\n    text-decoration: none;\n}\n\n.card .card-header .info {\n    font-style: normal;\n    color: #a3a3a3;\n    font-size: 14px;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n}\n</code></pre><p></style></p>\n<div class=\"post-body\"><br>    <div id=\"links\"><br>        <div class=\"links-content\"><div class=\"link-navigation\"></div><br>        </div><br>    </div><br></div>\n\n<hr>\n<hr>\n<div class=\"note success\"><h2 id=\"友链格式\"><a href=\"#友链格式\" class=\"headerlink\" title=\"友链格式\"></a>友链格式</h2><ul>\n<li>网站名称：IMyself</li>\n<li>网站地址：<a href=\"https://shadownc.github.io/\">https://shadownc.github.io/</a></li>\n<li>网站描述：description</li>\n<li>网站 Logo/头像：<a href=\"https://shadownc.github.io/assets/images/logo.jpg\">https://shadownc.github.io/assets/images/logo.jpg</a></li>\n<li>老站留言未开通,可去<a href=\"https://blog.lmyself.top/\" target=\"_blank\" rel=\"noopener\">新站</a>留言新增友链</li>\n</ul></div>\n","site":{"data":{}},"excerpt":"","more":"<p><style><br>    .links-content {<br>        margin-top: 1rem;<br>    }</p>\n<pre><code>.link-navigation::after {\n    content: &quot; &quot;;\n    display: block;\n    clear: both;\n}\n\n.card {\n    width: 45%;\n    font-size: 1rem;\n    padding: 10px 20px;\n    border-radius: 4px;\n    transition-duration: 0.15s;\n    margin-bottom: 1rem;\n    display: flex;\n}\n\n.card:nth-child(odd) {\n    float: left;\n}\n\n.card:nth-child(even) {\n    float: right;\n}\n\n.card:hover {\n    transform: scale(1.1);\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04);\n}\n\n.card a {\n    border: none;\n}\n\n.card .ava {\n    width: 3rem !important;\n    height: 3rem !important;\n    margin: 0 !important;\n    margin-right: 1em !important;\n    border-radius: 4px;\n}\n\n.card .card-header {\n    font-style: italic;\n    overflow: hidden;\n    width: 100%;\n}\n\n.card .card-header a {\n    font-style: normal;\n    color: #000;\n    font-weight: bold;\n    text-decoration: none;\n}\n\n.card .card-header a:hover {\n    color: #d480aa;\n    text-decoration: none;\n}\n\n.card .card-header .info {\n    font-style: normal;\n    color: #a3a3a3;\n    font-size: 14px;\n    min-width: 0;\n    overflow: hidden;\n    white-space: nowrap;\n}\n</code></pre><p></style></p>\n<div class=\"post-body\"><br>    <div id=\"links\"><br>        <div class=\"links-content\"><div class=\"link-navigation\"></div><br>        </div><br>    </div><br></div>\n\n<hr>\n<hr>\n<div class=\"note success\"><h2 id=\"友链格式\"><a href=\"#友链格式\" class=\"headerlink\" title=\"友链格式\"></a>友链格式</h2><ul>\n<li>网站名称：IMyself</li>\n<li>网站地址：<a href=\"https://shadownc.github.io/\">https://shadownc.github.io/</a></li>\n<li>网站描述：description</li>\n<li>网站 Logo/头像：<a href=\"https://shadownc.github.io/assets/images/logo.jpg\">https://shadownc.github.io/assets/images/logo.jpg</a></li>\n<li>老站留言未开通,可去<a href=\"https://blog.lmyself.top/\" target=\"_blank\" rel=\"noopener\">新站</a>留言新增友链</li>\n</ul></div>\n"},{"_content":"[\n    {\n        \"nickname\": \"IMyself\",\n        \"avatar\": \"https://shadownc.github.io/assets/images/logo.jpg\",\n        \"site\": \"https://blog.lmyself.top\"\n    }\n]","source":"links/linklist.json","raw":"[\n    {\n        \"nickname\": \"IMyself\",\n        \"avatar\": \"https://shadownc.github.io/assets/images/logo.jpg\",\n        \"site\": \"https://blog.lmyself.top\"\n    }\n]","date":"2023-08-05T08:37:18.845Z","updated":"2023-08-05T08:37:18.845Z","path":"links/linklist.json","layout":"false","title":"","comments":1,"_id":"clkxrz2sa0007gw7g96izcd8m","content":"[{\"nickname\":\"IMyself\",\"avatar\":\"https://shadownc.github.io/assets/images/logo.jpg\",\"site\":\"https://blog.lmyself.top\"}]","site":{"data":{}},"excerpt":"","more":"[{\"nickname\":\"IMyself\",\"avatar\":\"https://shadownc.github.io/assets/images/logo.jpg\",\"site\":\"https://blog.lmyself.top\"}]"},{"title":"tags","date":"2018-01-12T08:31:50.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-01-12 16:31:50\ntype: \"tags\"\n---\n","updated":"2019-01-05T03:38:35.213Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clkxrz2sc0009gw7gcr2b25td","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Docker部署--DaoCloud","date":"2018-08-03T04:34:32.000Z","_content":"Docker基于DaoCloud持续集成自动化部署nodejs后端api教程\n<!-- more -->\n##### linux安装docker\n`curl https://releases.rancher.com/install-docker/17.12.sh | sh`\n##### DockerFile\n```JavaScript\n# 基础镜像为node，版本为v8.9.3\nFROM node:8.9.3\n# 镜像作者，可以附加联系信息\nMAINTAINER shadow\n\n# 创建容器内的项目存放目录\nRUN mkdir -p /srv/api\n#切换工作目录\nWORKDIR /srv/api\n\n#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖\nCOPY package.json /srv/api\nRUN npm install\nCOPY . /srv/api\n\n# 容器对外暴露的端口号，要和node项目配置的端口号一致\nEXPOSE 3000\n\n# 容器启动时执行的命令\nENTRYPOINT [\"node\",\"index.js\"]\n```\n##### nodejs MongoDB连接问题\n```JavaScript\n//首选，从docker hub仓库拉取一个镜像\ndocker pull mongo\n//启动容器\ndocker run --name=mongoDev  -p 27017:27017 -v $PWD/usr/local/mongodb/data/db:/data/db -d 63c6b736e399\n--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:27017)\n#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399\n#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器\n 命令说明： \n-d后面的一串数字:docker images 查看Image ID\n–name：容器的名称 \n-p: 端口映射，将容器的端口，映射到主机上 \n-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录\n$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 \n-d：后台运行 \n其他命令： \n-e 设置环境变量，与在dockerfile env设置相同效果\n```\n##### docker命令\n```JavaScript\ndocker ps --查看新启动的容器是否正常启动。\ndocker ps -a --显示所有的容器，包括未运行的。\ndocker rm [NAMES] --删除容器。\ndocker start/restart [NAMES] --启动或重新启动已存在的容器。\n```\n","source":"_posts/Docker部署-DaoCloud.md","raw":"---\ntitle: Docker部署--DaoCloud\ndate: 2018-08-03 12:34:32\ncategories:\n- node\ntags:\n- node\n---\nDocker基于DaoCloud持续集成自动化部署nodejs后端api教程\n<!-- more -->\n##### linux安装docker\n`curl https://releases.rancher.com/install-docker/17.12.sh | sh`\n##### DockerFile\n```JavaScript\n# 基础镜像为node，版本为v8.9.3\nFROM node:8.9.3\n# 镜像作者，可以附加联系信息\nMAINTAINER shadow\n\n# 创建容器内的项目存放目录\nRUN mkdir -p /srv/api\n#切换工作目录\nWORKDIR /srv/api\n\n#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖\nCOPY package.json /srv/api\nRUN npm install\nCOPY . /srv/api\n\n# 容器对外暴露的端口号，要和node项目配置的端口号一致\nEXPOSE 3000\n\n# 容器启动时执行的命令\nENTRYPOINT [\"node\",\"index.js\"]\n```\n##### nodejs MongoDB连接问题\n```JavaScript\n//首选，从docker hub仓库拉取一个镜像\ndocker pull mongo\n//启动容器\ndocker run --name=mongoDev  -p 27017:27017 -v $PWD/usr/local/mongodb/data/db:/data/db -d 63c6b736e399\n--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:27017)\n#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399\n#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器\n 命令说明： \n-d后面的一串数字:docker images 查看Image ID\n–name：容器的名称 \n-p: 端口映射，将容器的端口，映射到主机上 \n-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录\n$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 \n-d：后台运行 \n其他命令： \n-e 设置环境变量，与在dockerfile env设置相同效果\n```\n##### docker命令\n```JavaScript\ndocker ps --查看新启动的容器是否正常启动。\ndocker ps -a --显示所有的容器，包括未运行的。\ndocker rm [NAMES] --删除容器。\ndocker start/restart [NAMES] --启动或重新启动已存在的容器。\n```\n","slug":"Docker部署-DaoCloud","published":1,"updated":"2019-01-05T03:38:35.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2rx0000gw7g1pccefjc","content":"<p>Docker基于DaoCloud持续集成自动化部署nodejs后端api教程<br><a id=\"more\"></a></p>\n<h5 id=\"linux安装docker\"><a href=\"#linux安装docker\" class=\"headerlink\" title=\"linux安装docker\"></a>linux安装docker</h5><p><code>curl https://releases.rancher.com/install-docker/17.12.sh | sh</code></p>\n<h5 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像为node，版本为v8.9.3</span><br><span class=\"line\">FROM node:<span class=\"number\">8.9</span><span class=\"number\">.3</span></span><br><span class=\"line\"># 镜像作者，可以附加联系信息</span><br><span class=\"line\">MAINTAINER shadow</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建容器内的项目存放目录</span><br><span class=\"line\">RUN mkdir -p /srv/api</span><br><span class=\"line\">#切换工作目录</span><br><span class=\"line\">WORKDIR /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\">#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖</span><br><span class=\"line\">COPY package.json /srv/api</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\">COPY . /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\"># 容器对外暴露的端口号，要和node项目配置的端口号一致</span><br><span class=\"line\">EXPOSE <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 容器启动时执行的命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"node\"</span>,<span class=\"string\">\"index.js\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"nodejs-MongoDB连接问题\"><a href=\"#nodejs-MongoDB连接问题\" class=\"headerlink\" title=\"nodejs MongoDB连接问题\"></a>nodejs MongoDB连接问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首选，从docker hub仓库拉取一个镜像</span></span><br><span class=\"line\">docker pull mongo</span><br><span class=\"line\"><span class=\"comment\">//启动容器</span></span><br><span class=\"line\">docker run --name=mongoDev  -p <span class=\"number\">27017</span>:<span class=\"number\">27017</span> -v $PWD/usr/local/mongodb/data/db:<span class=\"regexp\">/data/</span>db -d <span class=\"number\">63</span>c6b736e399</span><br><span class=\"line\">--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:<span class=\"number\">27017</span>)</span><br><span class=\"line\">#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399</span><br><span class=\"line\">#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器</span><br><span class=\"line\"> 命令说明： </span><br><span class=\"line\">-d后面的一串数字:docker images 查看Image ID</span><br><span class=\"line\">–name：容器的名称 </span><br><span class=\"line\">-p: 端口映射，将容器的端口，映射到主机上 </span><br><span class=\"line\">-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录</span><br><span class=\"line\">$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 </span><br><span class=\"line\">-d：后台运行 </span><br><span class=\"line\">其他命令： </span><br><span class=\"line\">-e 设置环境变量，与在dockerfile env设置相同效果</span><br></pre></td></tr></table></figure>\n<h5 id=\"docker命令\"><a href=\"#docker命令\" class=\"headerlink\" title=\"docker命令\"></a>docker命令</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --查看新启动的容器是否正常启动。</span><br><span class=\"line\">docker ps -a --显示所有的容器，包括未运行的。</span><br><span class=\"line\">docker rm [NAMES] --删除容器。</span><br><span class=\"line\">docker start/restart [NAMES] --启动或重新启动已存在的容器。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Docker基于DaoCloud持续集成自动化部署nodejs后端api教程<br>","more":"</p>\n<h5 id=\"linux安装docker\"><a href=\"#linux安装docker\" class=\"headerlink\" title=\"linux安装docker\"></a>linux安装docker</h5><p><code>curl https://releases.rancher.com/install-docker/17.12.sh | sh</code></p>\n<h5 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像为node，版本为v8.9.3</span><br><span class=\"line\">FROM node:<span class=\"number\">8.9</span><span class=\"number\">.3</span></span><br><span class=\"line\"># 镜像作者，可以附加联系信息</span><br><span class=\"line\">MAINTAINER shadow</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建容器内的项目存放目录</span><br><span class=\"line\">RUN mkdir -p /srv/api</span><br><span class=\"line\">#切换工作目录</span><br><span class=\"line\">WORKDIR /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\">#  将Dockerfile当前目录下所有文件拷贝至容器内项目目录并安装项目依赖</span><br><span class=\"line\">COPY package.json /srv/api</span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\">COPY . /srv/api</span><br><span class=\"line\"></span><br><span class=\"line\"># 容器对外暴露的端口号，要和node项目配置的端口号一致</span><br><span class=\"line\">EXPOSE <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 容器启动时执行的命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"node\"</span>,<span class=\"string\">\"index.js\"</span>]</span><br></pre></td></tr></table></figure>\n<h5 id=\"nodejs-MongoDB连接问题\"><a href=\"#nodejs-MongoDB连接问题\" class=\"headerlink\" title=\"nodejs MongoDB连接问题\"></a>nodejs MongoDB连接问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首选，从docker hub仓库拉取一个镜像</span></span><br><span class=\"line\">docker pull mongo</span><br><span class=\"line\"><span class=\"comment\">//启动容器</span></span><br><span class=\"line\">docker run --name=mongoDev  -p <span class=\"number\">27017</span>:<span class=\"number\">27017</span> -v $PWD/usr/local/mongodb/data/db:<span class=\"regexp\">/data/</span>db -d <span class=\"number\">63</span>c6b736e399</span><br><span class=\"line\">--最后需要修改nodejs项目中的连接MongoDB的链接(服务器ip:<span class=\"number\">27017</span>)</span><br><span class=\"line\">#docker run -d -p 27017:27017 --name mongoDev  --link dao_share-api_1:mongoDev 63c6b736e399</span><br><span class=\"line\">#--link后面的dao_share-api_1:mongoDev是指将dao_share-api_1容器连接到此容器</span><br><span class=\"line\"> 命令说明： </span><br><span class=\"line\">-d后面的一串数字:docker images 查看Image ID</span><br><span class=\"line\">–name：容器的名称 </span><br><span class=\"line\">-p: 端口映射，将容器的端口，映射到主机上 </span><br><span class=\"line\">-v：映射，挂载，将主机中目录下的/usr/local/mongodb/data/db挂载到容器的/data/db，作为mongo数据存储目录</span><br><span class=\"line\">$PWD：当前文件目录，例如我们以root进入，$PWD就表示root的目录。 </span><br><span class=\"line\">-d：后台运行 </span><br><span class=\"line\">其他命令： </span><br><span class=\"line\">-e 设置环境变量，与在dockerfile env设置相同效果</span><br></pre></td></tr></table></figure>\n<h5 id=\"docker命令\"><a href=\"#docker命令\" class=\"headerlink\" title=\"docker命令\"></a>docker命令</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --查看新启动的容器是否正常启动。</span><br><span class=\"line\">docker ps -a --显示所有的容器，包括未运行的。</span><br><span class=\"line\">docker rm [NAMES] --删除容器。</span><br><span class=\"line\">docker start/restart [NAMES] --启动或重新启动已存在的容器。</span><br></pre></td></tr></table></figure>"},{"title":"Vue-router beforeEach登录鉴权","date":"2021-09-28T12:28:24.000Z","_content":"Vue-router beforeEach登录鉴权\n<!-- more -->\n## 全局前置守卫\n``` js\nrouter.beforeEach((to, from, next) => {\n  // ...\n})\n```\n每个守卫方法接收三个参数：\n\n-   `to`: 即将要进入的目标路由对象\n\n-   `from`: 当前导航正要离开的路由\n\n-   `next`: 一定要调用该方法来 **resolve** 这个钩子。执行效果依赖 `next` 方法的调用参数。\n\n    -   `next()` : 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 `confirmed` (确认的)。\n    -   `next(false)` : 中断当前的导航。如果浏览器的 `URL` 改变了 (可能是用户手动或者浏览器后退按钮)，那么 `URL` 地址会重置到 `from` 路由对应的地址。\n    -   `next('/')` 或者 `next({ path: '/' })` : 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 `next` 传递任意位置对象，且允许设置诸如 `replace: true`、`name: 'home'` 之类的选项以及任何用在 [`router-link` 的 `to` prop](https://router.vuejs.org/zh/api/#to) 或 [`router.push`](https://router.vuejs.org/zh/api/#router-push) 中的选项。\n    -   **`next(error)`** : (2.4.0+) 如果传入 `next` 的参数是一个 `Error` 实例，则导航会被终止且该错误会被传递给 [`router.onError()`](https://router.vuejs.org/zh/api/#router-onerror) 注册过的回调。\n\t\n## 登录鉴权(需要在登录成功的时候修改跳转逻辑)\n```\nrouter.beforeEach((to, from, next) => {\n  document.title=to.meta.title //设置当前页的title\n  if (to.matched.some(record => record.meta.auth)) {\n    if (localStorage.getItem('access_token')) {\n        next()\n    } else {\n      if (to.name === 'Login') {//防止next无限循环的问题\n        next();\n        return\n      }\n      next({\n        path: '/Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    next()\n  }\n\n})\n```\n> 登录成功返回将要跳转的页面且返回上一页不是登录页\n\n``` js\napi.login().then((res) => {\n        if (res.success) {\n          localStorage.setItem(\"access_token\", res.token);\n          //有redirect登录成功返回将要跳转的页面且返回上一页不是登录页\n          let redirect=this.$route.query.redirect; \n          redirect ? this.$router.replace(redirect) : this.$router.push(\"/\");\n          //或者 登录页直接登录，登录成功返回将要跳转的页面且返回上一页不是登录页\n          let redirect=this.$route.query.redirect || '/';\n          this.$router.replace(redirect);\n        }\n      });\n```\n## 不需要在登录成功中处理跳转\n``` js\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title\n  if (to.matched.some(record => record.meta.auth)) {\n    if (localStorage.getItem('access_token')) {\n      if (Object.keys(from.query).length === 0) {//判断路由来源是否有query，处理不是目的跳转的情况\n        next()\n      } else {\n        let redirect = from.query.redirect//如果来源路由有query\n        if (to.fullPath === redirect) {//这行是解决next无限循环的问题\n          next()\n        } else {\n          next({ path: redirect, replace: true })//跳转到目的路由\n        }\n      }\n    } else {\n      if (to.name === 'Login') {\n        next();\n        return\n      }\n      next({\n        path: '/Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    next()\n  }\n\n})\n```\n> 直接登录页登录成功跳转到将要去的界面点击浏览器返回上一页不是登录页\n\n``` js\nthis.$router.replace('/')\n```","source":"_posts/Vue-router--beforeEach登录鉴权.md","raw":"---\ntitle: Vue-router beforeEach登录鉴权\ndate: 2021-09-28 20:28:24\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue-router beforeEach登录鉴权\n<!-- more -->\n## 全局前置守卫\n``` js\nrouter.beforeEach((to, from, next) => {\n  // ...\n})\n```\n每个守卫方法接收三个参数：\n\n-   `to`: 即将要进入的目标路由对象\n\n-   `from`: 当前导航正要离开的路由\n\n-   `next`: 一定要调用该方法来 **resolve** 这个钩子。执行效果依赖 `next` 方法的调用参数。\n\n    -   `next()` : 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 `confirmed` (确认的)。\n    -   `next(false)` : 中断当前的导航。如果浏览器的 `URL` 改变了 (可能是用户手动或者浏览器后退按钮)，那么 `URL` 地址会重置到 `from` 路由对应的地址。\n    -   `next('/')` 或者 `next({ path: '/' })` : 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 `next` 传递任意位置对象，且允许设置诸如 `replace: true`、`name: 'home'` 之类的选项以及任何用在 [`router-link` 的 `to` prop](https://router.vuejs.org/zh/api/#to) 或 [`router.push`](https://router.vuejs.org/zh/api/#router-push) 中的选项。\n    -   **`next(error)`** : (2.4.0+) 如果传入 `next` 的参数是一个 `Error` 实例，则导航会被终止且该错误会被传递给 [`router.onError()`](https://router.vuejs.org/zh/api/#router-onerror) 注册过的回调。\n\t\n## 登录鉴权(需要在登录成功的时候修改跳转逻辑)\n```\nrouter.beforeEach((to, from, next) => {\n  document.title=to.meta.title //设置当前页的title\n  if (to.matched.some(record => record.meta.auth)) {\n    if (localStorage.getItem('access_token')) {\n        next()\n    } else {\n      if (to.name === 'Login') {//防止next无限循环的问题\n        next();\n        return\n      }\n      next({\n        path: '/Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    next()\n  }\n\n})\n```\n> 登录成功返回将要跳转的页面且返回上一页不是登录页\n\n``` js\napi.login().then((res) => {\n        if (res.success) {\n          localStorage.setItem(\"access_token\", res.token);\n          //有redirect登录成功返回将要跳转的页面且返回上一页不是登录页\n          let redirect=this.$route.query.redirect; \n          redirect ? this.$router.replace(redirect) : this.$router.push(\"/\");\n          //或者 登录页直接登录，登录成功返回将要跳转的页面且返回上一页不是登录页\n          let redirect=this.$route.query.redirect || '/';\n          this.$router.replace(redirect);\n        }\n      });\n```\n## 不需要在登录成功中处理跳转\n``` js\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title\n  if (to.matched.some(record => record.meta.auth)) {\n    if (localStorage.getItem('access_token')) {\n      if (Object.keys(from.query).length === 0) {//判断路由来源是否有query，处理不是目的跳转的情况\n        next()\n      } else {\n        let redirect = from.query.redirect//如果来源路由有query\n        if (to.fullPath === redirect) {//这行是解决next无限循环的问题\n          next()\n        } else {\n          next({ path: redirect, replace: true })//跳转到目的路由\n        }\n      }\n    } else {\n      if (to.name === 'Login') {\n        next();\n        return\n      }\n      next({\n        path: '/Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    next()\n  }\n\n})\n```\n> 直接登录页登录成功跳转到将要去的界面点击浏览器返回上一页不是登录页\n\n``` js\nthis.$router.replace('/')\n```","slug":"Vue-router--beforeEach登录鉴权","published":1,"updated":"2021-09-28T12:32:01.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2s30002gw7ga7dmvrue","content":"<p>Vue-router beforeEach登录鉴权<br><a id=\"more\"></a></p>\n<h2 id=\"全局前置守卫\"><a href=\"#全局前置守卫\" class=\"headerlink\" title=\"全局前置守卫\"></a>全局前置守卫</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>每个守卫方法接收三个参数：</p>\n<ul>\n<li><p><code>to</code>: 即将要进入的目标路由对象</p>\n</li>\n<li><p><code>from</code>: 当前导航正要离开的路由</p>\n</li>\n<li><p><code>next</code>: 一定要调用该方法来 <strong>resolve</strong> 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。</p>\n<ul>\n<li><code>next()</code> : 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 <code>confirmed</code> (确认的)。</li>\n<li><code>next(false)</code> : 中断当前的导航。如果浏览器的 <code>URL</code> 改变了 (可能是用户手动或者浏览器后退按钮)，那么 <code>URL</code> 地址会重置到 <code>from</code> 路由对应的地址。</li>\n<li><code>next(&#39;/&#39;)</code> 或者 <code>next({ path: &#39;/&#39; })</code> : 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 <code>next</code> 传递任意位置对象，且允许设置诸如 <code>replace: true</code>、<code>name: &#39;home&#39;</code> 之类的选项以及任何用在 <a href=\"https://router.vuejs.org/zh/api/#to\" target=\"_blank\" rel=\"noopener\"><code>router-link</code> 的 <code>to</code> prop</a> 或 <a href=\"https://router.vuejs.org/zh/api/#router-push\" target=\"_blank\" rel=\"noopener\"><code>router.push</code></a> 中的选项。</li>\n<li><strong><code>next(error)</code></strong> : (2.4.0+) 如果传入 <code>next</code> 的参数是一个 <code>Error</code> 实例，则导航会被终止且该错误会被传递给 <a href=\"https://router.vuejs.org/zh/api/#router-onerror\" target=\"_blank\" rel=\"noopener\"><code>router.onError()</code></a> 注册过的回调。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"登录鉴权-需要在登录成功的时候修改跳转逻辑\"><a href=\"#登录鉴权-需要在登录成功的时候修改跳转逻辑\" class=\"headerlink\" title=\"登录鉴权(需要在登录成功的时候修改跳转逻辑)\"></a>登录鉴权(需要在登录成功的时候修改跳转逻辑)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class=\"line\">  document.title=to.meta.title //设置当前页的title</span><br><span class=\"line\">  if (to.matched.some(record =&gt; record.meta.auth)) &#123;</span><br><span class=\"line\">    if (localStorage.getItem(&apos;access_token&apos;)) &#123;</span><br><span class=\"line\">        next()</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      if (to.name === &apos;Login&apos;) &#123;//防止next无限循环的问题</span><br><span class=\"line\">        next();</span><br><span class=\"line\">        return</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: &apos;/Login&apos;,</span><br><span class=\"line\">        query: &#123;</span><br><span class=\"line\">          redirect: to.fullPath</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>登录成功返回将要跳转的页面且返回上一页不是登录页</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">api.login().then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.success) &#123;</span><br><span class=\"line\">          localStorage.setItem(<span class=\"string\">\"access_token\"</span>, res.token);</span><br><span class=\"line\">          <span class=\"comment\">//有redirect登录成功返回将要跳转的页面且返回上一页不是登录页</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> redirect=<span class=\"keyword\">this</span>.$route.query.redirect; </span><br><span class=\"line\">          redirect ? <span class=\"keyword\">this</span>.$router.replace(redirect) : <span class=\"keyword\">this</span>.$router.push(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">          <span class=\"comment\">//或者 登录页直接登录，登录成功返回将要跳转的页面且返回上一页不是登录页</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> redirect=<span class=\"keyword\">this</span>.$route.query.redirect || <span class=\"string\">'/'</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$router.replace(redirect);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"不需要在登录成功中处理跳转\"><a href=\"#不需要在登录成功中处理跳转\" class=\"headerlink\" title=\"不需要在登录成功中处理跳转\"></a>不需要在登录成功中处理跳转</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.title = to.meta.title</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.auth)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (localStorage.getItem(<span class=\"string\">'access_token'</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.keys(<span class=\"keyword\">from</span>.query).length === <span class=\"number\">0</span>) &#123;<span class=\"comment\">//判断路由来源是否有query，处理不是目的跳转的情况</span></span><br><span class=\"line\">        next()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> redirect = <span class=\"keyword\">from</span>.query.redirect<span class=\"comment\">//如果来源路由有query</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.fullPath === redirect) &#123;<span class=\"comment\">//这行是解决next无限循环的问题</span></span><br><span class=\"line\">          next()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          next(&#123; <span class=\"attr\">path</span>: redirect, <span class=\"attr\">replace</span>: <span class=\"literal\">true</span> &#125;)<span class=\"comment\">//跳转到目的路由</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (to.name === <span class=\"string\">'Login'</span>) &#123;</span><br><span class=\"line\">        next();</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/Login'</span>,</span><br><span class=\"line\">        query: &#123;</span><br><span class=\"line\">          redirect: to.fullPath</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>直接登录页登录成功跳转到将要去的界面点击浏览器返回上一页不是登录页</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$router.replace(<span class=\"string\">'/'</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Vue-router beforeEach登录鉴权<br>","more":"</p>\n<h2 id=\"全局前置守卫\"><a href=\"#全局前置守卫\" class=\"headerlink\" title=\"全局前置守卫\"></a>全局前置守卫</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>每个守卫方法接收三个参数：</p>\n<ul>\n<li><p><code>to</code>: 即将要进入的目标路由对象</p>\n</li>\n<li><p><code>from</code>: 当前导航正要离开的路由</p>\n</li>\n<li><p><code>next</code>: 一定要调用该方法来 <strong>resolve</strong> 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。</p>\n<ul>\n<li><code>next()</code> : 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 <code>confirmed</code> (确认的)。</li>\n<li><code>next(false)</code> : 中断当前的导航。如果浏览器的 <code>URL</code> 改变了 (可能是用户手动或者浏览器后退按钮)，那么 <code>URL</code> 地址会重置到 <code>from</code> 路由对应的地址。</li>\n<li><code>next(&#39;/&#39;)</code> 或者 <code>next({ path: &#39;/&#39; })</code> : 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 <code>next</code> 传递任意位置对象，且允许设置诸如 <code>replace: true</code>、<code>name: &#39;home&#39;</code> 之类的选项以及任何用在 <a href=\"https://router.vuejs.org/zh/api/#to\" target=\"_blank\" rel=\"noopener\"><code>router-link</code> 的 <code>to</code> prop</a> 或 <a href=\"https://router.vuejs.org/zh/api/#router-push\" target=\"_blank\" rel=\"noopener\"><code>router.push</code></a> 中的选项。</li>\n<li><strong><code>next(error)</code></strong> : (2.4.0+) 如果传入 <code>next</code> 的参数是一个 <code>Error</code> 实例，则导航会被终止且该错误会被传递给 <a href=\"https://router.vuejs.org/zh/api/#router-onerror\" target=\"_blank\" rel=\"noopener\"><code>router.onError()</code></a> 注册过的回调。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"登录鉴权-需要在登录成功的时候修改跳转逻辑\"><a href=\"#登录鉴权-需要在登录成功的时候修改跳转逻辑\" class=\"headerlink\" title=\"登录鉴权(需要在登录成功的时候修改跳转逻辑)\"></a>登录鉴权(需要在登录成功的时候修改跳转逻辑)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class=\"line\">  document.title=to.meta.title //设置当前页的title</span><br><span class=\"line\">  if (to.matched.some(record =&gt; record.meta.auth)) &#123;</span><br><span class=\"line\">    if (localStorage.getItem(&apos;access_token&apos;)) &#123;</span><br><span class=\"line\">        next()</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      if (to.name === &apos;Login&apos;) &#123;//防止next无限循环的问题</span><br><span class=\"line\">        next();</span><br><span class=\"line\">        return</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: &apos;/Login&apos;,</span><br><span class=\"line\">        query: &#123;</span><br><span class=\"line\">          redirect: to.fullPath</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>登录成功返回将要跳转的页面且返回上一页不是登录页</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">api.login().then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res.success) &#123;</span><br><span class=\"line\">          localStorage.setItem(<span class=\"string\">\"access_token\"</span>, res.token);</span><br><span class=\"line\">          <span class=\"comment\">//有redirect登录成功返回将要跳转的页面且返回上一页不是登录页</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> redirect=<span class=\"keyword\">this</span>.$route.query.redirect; </span><br><span class=\"line\">          redirect ? <span class=\"keyword\">this</span>.$router.replace(redirect) : <span class=\"keyword\">this</span>.$router.push(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">          <span class=\"comment\">//或者 登录页直接登录，登录成功返回将要跳转的页面且返回上一页不是登录页</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> redirect=<span class=\"keyword\">this</span>.$route.query.redirect || <span class=\"string\">'/'</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$router.replace(redirect);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"不需要在登录成功中处理跳转\"><a href=\"#不需要在登录成功中处理跳转\" class=\"headerlink\" title=\"不需要在登录成功中处理跳转\"></a>不需要在登录成功中处理跳转</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.title = to.meta.title</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.auth)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (localStorage.getItem(<span class=\"string\">'access_token'</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.keys(<span class=\"keyword\">from</span>.query).length === <span class=\"number\">0</span>) &#123;<span class=\"comment\">//判断路由来源是否有query，处理不是目的跳转的情况</span></span><br><span class=\"line\">        next()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> redirect = <span class=\"keyword\">from</span>.query.redirect<span class=\"comment\">//如果来源路由有query</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (to.fullPath === redirect) &#123;<span class=\"comment\">//这行是解决next无限循环的问题</span></span><br><span class=\"line\">          next()</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          next(&#123; <span class=\"attr\">path</span>: redirect, <span class=\"attr\">replace</span>: <span class=\"literal\">true</span> &#125;)<span class=\"comment\">//跳转到目的路由</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (to.name === <span class=\"string\">'Login'</span>) &#123;</span><br><span class=\"line\">        next();</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/Login'</span>,</span><br><span class=\"line\">        query: &#123;</span><br><span class=\"line\">          redirect: to.fullPath</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>直接登录页登录成功跳转到将要去的界面点击浏览器返回上一页不是登录页</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$router.replace(<span class=\"string\">'/'</span>)</span><br></pre></td></tr></table></figure>"},{"title":"HTTP错误状态码","date":"2018-03-12T05:11:28.000Z","_content":"HTTP错误状态码及含义\n<!-- more -->\n``` JavaScript\n1~5开头的HTTP状态码分别是什么含义：\n1XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/1.0 协议中并没有定义1XX状态码，除非在试验条件下，服务器是禁止向客户端发送1XX响应的。\n2XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受\n3XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。\n4XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**\n5XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。\n\n200 —  表示请求成功 一切正常\n301 Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL\n302 Found —  临时重定向，类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。\n304 Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。\n400 Bad Request —  请求出现语法错误。\n403 Forbidden —  资源不可用。\n404 Not Found —  无法找到指定位置的资源。\n405 Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。\n500 Internal Server Error — 服务器遇到了意料不到的情况，不能完成客户的请求。\n501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n504 Gateway Timeout — 网关超时。\n505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。```","source":"_posts/HTTP错误状态码.md","raw":"---\ntitle: HTTP错误状态码\ndate: 2018-03-12 13:11:28\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nHTTP错误状态码及含义\n<!-- more -->\n``` JavaScript\n1~5开头的HTTP状态码分别是什么含义：\n1XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/1.0 协议中并没有定义1XX状态码，除非在试验条件下，服务器是禁止向客户端发送1XX响应的。\n2XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受\n3XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/1.0 版规范的建议，浏览器不应自动访问超过5次的重定向。\n4XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**\n5XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。\n\n200 —  表示请求成功 一切正常\n301 Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL\n302 Found —  临时重定向，类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。\n304 Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。\n400 Bad Request —  请求出现语法错误。\n403 Forbidden —  资源不可用。\n404 Not Found —  无法找到指定位置的资源。\n405 Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。\n500 Internal Server Error — 服务器遇到了意料不到的情况，不能完成客户的请求。\n501 Not Implemented — 请求未完成。服务器不支持所请求的功能。\n502 Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。\n503 Service Unavailable — 请求未完成。服务器临时过载或当机。\n504 Gateway Timeout — 网关超时。\n505 HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。```","slug":"HTTP错误状态码","published":1,"updated":"2019-01-05T03:38:35.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2s90006gw7gtaj7j5nm","content":"<p>HTTP错误状态码及含义<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>~<span class=\"number\">5</span>开头的HTTP状态码分别是什么含义：</span><br><span class=\"line\"><span class=\"number\">1</span>XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/<span class=\"number\">1.0</span> 协议中并没有定义<span class=\"number\">1</span>XX状态码，除非在试验条件下，服务器是禁止向客户端发送<span class=\"number\">1</span>XX响应的。</span><br><span class=\"line\"><span class=\"number\">2</span>XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受</span><br><span class=\"line\"><span class=\"number\">3</span>XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/<span class=\"number\">1.0</span> 版规范的建议，浏览器不应自动访问超过<span class=\"number\">5</span>次的重定向。</span><br><span class=\"line\"><span class=\"number\">4</span>XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**</span><br><span class=\"line\"><span class=\"number\">5</span>XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">200</span> —  表示请求成功 一切正常</span><br><span class=\"line\"><span class=\"number\">301</span> Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL</span><br><span class=\"line\"><span class=\"number\">302</span> Found —  临时重定向，类似于<span class=\"number\">301</span>，但新的URL应该被视为临时性的替代，而不是永久性的。</span><br><span class=\"line\"><span class=\"number\">304</span> Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。</span><br><span class=\"line\"><span class=\"number\">400</span> Bad Request —  请求出现语法错误。</span><br><span class=\"line\"><span class=\"number\">403</span> Forbidden —  资源不可用。</span><br><span class=\"line\"><span class=\"number\">404</span> Not Found —  无法找到指定位置的资源。</span><br><span class=\"line\"><span class=\"number\">405</span> Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。</span><br><span class=\"line\"><span class=\"number\">500</span> Internal Server <span class=\"built_in\">Error</span> — 服务器遇到了意料不到的情况，不能完成客户的请求。</span><br><span class=\"line\"><span class=\"number\">501</span> Not Implemented — 请求未完成。服务器不支持所请求的功能。</span><br><span class=\"line\"><span class=\"number\">502</span> Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。</span><br><span class=\"line\"><span class=\"number\">503</span> Service Unavailable — 请求未完成。服务器临时过载或当机。</span><br><span class=\"line\"><span class=\"number\">504</span> Gateway Timeout — 网关超时。</span><br><span class=\"line\"><span class=\"number\">505</span> HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>HTTP错误状态码及含义<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>~<span class=\"number\">5</span>开头的HTTP状态码分别是什么含义：</span><br><span class=\"line\"><span class=\"number\">1</span>XX ：此类型的状态码是临时响应，代表着请求已经被接受，但需要继续处理，值得注意的是，由于HTTP/<span class=\"number\">1.0</span> 协议中并没有定义<span class=\"number\">1</span>XX状态码，除非在试验条件下，服务器是禁止向客户端发送<span class=\"number\">1</span>XX响应的。</span><br><span class=\"line\"><span class=\"number\">2</span>XX ：此类型的状态码代表着请求已经被服务器接收、理解、并接受</span><br><span class=\"line\"><span class=\"number\">3</span>XX ：此类状态码代表着客户端需要采取进一步的操作才能完成请求，通常，这些状态码是用来**重定向**的，按照 HTTP/<span class=\"number\">1.0</span> 版规范的建议，浏览器不应自动访问超过<span class=\"number\">5</span>次的重定向。</span><br><span class=\"line\"><span class=\"number\">4</span>XX ：此类型的状态码代表着**客户端可能发生了错误，阻碍了服务器的处理。**</span><br><span class=\"line\"><span class=\"number\">5</span>XX ：此类状态码代表了**服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理**。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">200</span> —  表示请求成功 一切正常</span><br><span class=\"line\"><span class=\"number\">301</span> Moved Permanently —  重定向，客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL</span><br><span class=\"line\"><span class=\"number\">302</span> Found —  临时重定向，类似于<span class=\"number\">301</span>，但新的URL应该被视为临时性的替代，而不是永久性的。</span><br><span class=\"line\"><span class=\"number\">304</span> Not Modified —  客户端有缓冲的文档并发出了一个条件性的请求。服务器告诉客户，原来缓冲的文档还可以继续使用。</span><br><span class=\"line\"><span class=\"number\">400</span> Bad Request —  请求出现语法错误。</span><br><span class=\"line\"><span class=\"number\">403</span> Forbidden —  资源不可用。</span><br><span class=\"line\"><span class=\"number\">404</span> Not Found —  无法找到指定位置的资源。</span><br><span class=\"line\"><span class=\"number\">405</span> Method Not Allowed —  请求方法（GET、POST、HEAD、Delete、PUT、TRACE等）对指定的资源不适用。</span><br><span class=\"line\"><span class=\"number\">500</span> Internal Server <span class=\"built_in\">Error</span> — 服务器遇到了意料不到的情况，不能完成客户的请求。</span><br><span class=\"line\"><span class=\"number\">501</span> Not Implemented — 请求未完成。服务器不支持所请求的功能。</span><br><span class=\"line\"><span class=\"number\">502</span> Bad Gateway — 请求未完成。服务器从上游服务器收到一个无效的响应。</span><br><span class=\"line\"><span class=\"number\">503</span> Service Unavailable — 请求未完成。服务器临时过载或当机。</span><br><span class=\"line\"><span class=\"number\">504</span> Gateway Timeout — 网关超时。</span><br><span class=\"line\"><span class=\"number\">505</span> HTTP Version Not Supported — 服务器不支持请求中指明的HTTP协议版本。</span><br></pre></td></tr></table></figure></p>"},{"title":"Vue中引入css使用@import无法识别~(alias--别名)踩坑","date":"2019-12-10T08:21:23.000Z","_content":"Vue中引入css使用@import无法识别~(alias--别名)踩坑\n<!-- more -->\n```JavaScript\n//引入css文件\n<style>\n  @import '~css/fost-base.css';\n</style>\n使用~引入的时候 发现无法通过编译\n原因是postcss-import官方文档中说明对模块的导入不需要加波浪号（~）\n解决方法：\n注释掉.postcssrc.js文件下的 \"postcss-import\": {}, \n```\n##### .postcssrc.js配置文件：\n```JavaScript\nmodule.exports = {\n  \"plugins\": {\n    \"postcss-import\": {},      //用于@import导入css文件\n    \"postcss-url\": {},           //路径引入css文件或node_modules文件\n    \"postcss-aspect-ratio-mini\": {},   //用来处理元素容器宽高比\n    \"postcss-write-svg\": { utf8: false },    //用来处理移动端1px的解决方案。该插件主要使用的是border-image和background来做1px的相关处理。\n    \"postcss-cssnext\": {},  //该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。\n    \"postcss-px-to-viewport\": {    //把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。\n    \tviewportWidth: 750,    //视窗的宽度\n    \tviewportHeight: 1334,   //视窗的高度\n    \tunitPrecision: 3,    //将px转化为视窗单位值的小数位数\n    \tviewportUnit: 'vw',    //指定要转换成的视窗单位值\n    \tselectorBlackList: ['.ignore', '.hairlines'],    //指定不转换视窗单位值得类，可以自定义，可以无限添加\n    \tminPixelValue: 1,    //小于等于1px不转换为视窗单位\n    \tmediaQuery: false   //允许在媒体查询中使用px\n    },\n    \"postcss-viewport-units\":{}, //给vw、vh、vmin和vmax做适配的操作,这是实现vw布局必不可少的一个插件\n    \"cssnano\": {    //主要用来压缩和清理CSS代码。在Webpack中，cssnano和css-loader捆绑在一起，所以不需要自己加载它。\n    \tpreset: \"advanced\",   //重复调用\n    \tautoprefixer: false,    //cssnext和cssnano都具有autoprefixer,事实上只需要一个，所以把默认的autoprefixer删除掉，然后把cssnano中的autoprefixer设置为false。\n    \t\"postcss-zindex\": false   //只要启用了这个插件，z-index的值就会重置为1\n \t}\n  }\n}\n```\n[参考链接](https://juejin.im/post/5bf5135251882516d725d1cc)\n\n##### 第二种解决方法：\n```JavaScript\nmodule.exports = {\n    \"plugins\": {\n        \"postcss-import\": {\n            resolve(id) {\n                if (id.charAt(0) == '~') {\n                    return id.substr(1)\n                } else {\n                    return id\n                }\n            }\n        },\n        \"postcss-url\": {},\n        \"autoprefixer\": {}\n    }\n}\n```","source":"_posts/Vue中引入css使用-import无法识别-alias-别名-踩坑.md","raw":"---\ntitle: Vue中引入css使用@import无法识别~(alias--别名)踩坑\ndate: 2019-12-10 16:21:23\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue中引入css使用@import无法识别~(alias--别名)踩坑\n<!-- more -->\n```JavaScript\n//引入css文件\n<style>\n  @import '~css/fost-base.css';\n</style>\n使用~引入的时候 发现无法通过编译\n原因是postcss-import官方文档中说明对模块的导入不需要加波浪号（~）\n解决方法：\n注释掉.postcssrc.js文件下的 \"postcss-import\": {}, \n```\n##### .postcssrc.js配置文件：\n```JavaScript\nmodule.exports = {\n  \"plugins\": {\n    \"postcss-import\": {},      //用于@import导入css文件\n    \"postcss-url\": {},           //路径引入css文件或node_modules文件\n    \"postcss-aspect-ratio-mini\": {},   //用来处理元素容器宽高比\n    \"postcss-write-svg\": { utf8: false },    //用来处理移动端1px的解决方案。该插件主要使用的是border-image和background来做1px的相关处理。\n    \"postcss-cssnext\": {},  //该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。\n    \"postcss-px-to-viewport\": {    //把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。\n    \tviewportWidth: 750,    //视窗的宽度\n    \tviewportHeight: 1334,   //视窗的高度\n    \tunitPrecision: 3,    //将px转化为视窗单位值的小数位数\n    \tviewportUnit: 'vw',    //指定要转换成的视窗单位值\n    \tselectorBlackList: ['.ignore', '.hairlines'],    //指定不转换视窗单位值得类，可以自定义，可以无限添加\n    \tminPixelValue: 1,    //小于等于1px不转换为视窗单位\n    \tmediaQuery: false   //允许在媒体查询中使用px\n    },\n    \"postcss-viewport-units\":{}, //给vw、vh、vmin和vmax做适配的操作,这是实现vw布局必不可少的一个插件\n    \"cssnano\": {    //主要用来压缩和清理CSS代码。在Webpack中，cssnano和css-loader捆绑在一起，所以不需要自己加载它。\n    \tpreset: \"advanced\",   //重复调用\n    \tautoprefixer: false,    //cssnext和cssnano都具有autoprefixer,事实上只需要一个，所以把默认的autoprefixer删除掉，然后把cssnano中的autoprefixer设置为false。\n    \t\"postcss-zindex\": false   //只要启用了这个插件，z-index的值就会重置为1\n \t}\n  }\n}\n```\n[参考链接](https://juejin.im/post/5bf5135251882516d725d1cc)\n\n##### 第二种解决方法：\n```JavaScript\nmodule.exports = {\n    \"plugins\": {\n        \"postcss-import\": {\n            resolve(id) {\n                if (id.charAt(0) == '~') {\n                    return id.substr(1)\n                } else {\n                    return id\n                }\n            }\n        },\n        \"postcss-url\": {},\n        \"autoprefixer\": {}\n    }\n}\n```","slug":"Vue中引入css使用-import无法识别-alias-别名-踩坑","published":1,"updated":"2020-02-03T14:45:15.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sb0008gw7gq91w77e4","content":"<p>Vue中引入css使用@import无法识别~(alias–别名)踩坑<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入css文件</span></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> <span class=\"string\">'~css/fost-base.css'</span>;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/style&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">使用~引入的时候 发现无法通过编译</span></span><br><span class=\"line\"><span class=\"regexp\">原因是postcss-import官方文档中说明对模块的导入不需要加波浪号（~）</span></span><br><span class=\"line\"><span class=\"regexp\">解决方法：</span></span><br><span class=\"line\"><span class=\"regexp\">注释掉.postcssrc.js文件下的 \"postcss-import\": &#123;&#125;,</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"postcssrc-js配置文件：\"><a href=\"#postcssrc-js配置文件：\" class=\"headerlink\" title=\".postcssrc.js配置文件：\"></a>.postcssrc.js配置文件：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"plugins\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"postcss-import\"</span>: &#123;&#125;,      <span class=\"comment\">//用于@import导入css文件</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-url\"</span>: &#123;&#125;,           <span class=\"comment\">//路径引入css文件或node_modules文件</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-aspect-ratio-mini\"</span>: &#123;&#125;,   <span class=\"comment\">//用来处理元素容器宽高比</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-write-svg\"</span>: &#123; <span class=\"attr\">utf8</span>: <span class=\"literal\">false</span> &#125;,    <span class=\"comment\">//用来处理移动端1px的解决方案。该插件主要使用的是border-image和background来做1px的相关处理。</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-cssnext\"</span>: &#123;&#125;,  <span class=\"comment\">//该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-px-to-viewport\"</span>: &#123;    <span class=\"comment\">//把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。</span></span><br><span class=\"line\">    \tviewportWidth: <span class=\"number\">750</span>,    <span class=\"comment\">//视窗的宽度</span></span><br><span class=\"line\">    \tviewportHeight: <span class=\"number\">1334</span>,   <span class=\"comment\">//视窗的高度</span></span><br><span class=\"line\">    \tunitPrecision: <span class=\"number\">3</span>,    <span class=\"comment\">//将px转化为视窗单位值的小数位数</span></span><br><span class=\"line\">    \tviewportUnit: <span class=\"string\">'vw'</span>,    <span class=\"comment\">//指定要转换成的视窗单位值</span></span><br><span class=\"line\">    \tselectorBlackList: [<span class=\"string\">'.ignore'</span>, <span class=\"string\">'.hairlines'</span>],    <span class=\"comment\">//指定不转换视窗单位值得类，可以自定义，可以无限添加</span></span><br><span class=\"line\">    \tminPixelValue: <span class=\"number\">1</span>,    <span class=\"comment\">//小于等于1px不转换为视窗单位</span></span><br><span class=\"line\">    \tmediaQuery: <span class=\"literal\">false</span>   <span class=\"comment\">//允许在媒体查询中使用px</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"postcss-viewport-units\"</span>:&#123;&#125;, <span class=\"comment\">//给vw、vh、vmin和vmax做适配的操作,这是实现vw布局必不可少的一个插件</span></span><br><span class=\"line\">    <span class=\"string\">\"cssnano\"</span>: &#123;    <span class=\"comment\">//主要用来压缩和清理CSS代码。在Webpack中，cssnano和css-loader捆绑在一起，所以不需要自己加载它。</span></span><br><span class=\"line\">    \tpreset: <span class=\"string\">\"advanced\"</span>,   <span class=\"comment\">//重复调用</span></span><br><span class=\"line\">    \tautoprefixer: <span class=\"literal\">false</span>,    <span class=\"comment\">//cssnext和cssnano都具有autoprefixer,事实上只需要一个，所以把默认的autoprefixer删除掉，然后把cssnano中的autoprefixer设置为false。</span></span><br><span class=\"line\">    \t<span class=\"string\">\"postcss-zindex\"</span>: <span class=\"literal\">false</span>   <span class=\"comment\">//只要启用了这个插件，z-index的值就会重置为1</span></span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://juejin.im/post/5bf5135251882516d725d1cc\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<h5 id=\"第二种解决方法：\"><a href=\"#第二种解决方法：\" class=\"headerlink\" title=\"第二种解决方法：\"></a>第二种解决方法：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"postcss-import\"</span>: &#123;</span><br><span class=\"line\">            resolve(id) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (id.charAt(<span class=\"number\">0</span>) == <span class=\"string\">'~'</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> id.substr(<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> id</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"postcss-url\"</span>: &#123;&#125;,</span><br><span class=\"line\">        <span class=\"string\">\"autoprefixer\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Vue中引入css使用@import无法识别~(alias–别名)踩坑<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入css文件</span></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  @<span class=\"keyword\">import</span> <span class=\"string\">'~css/fost-base.css'</span>;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/style&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">使用~引入的时候 发现无法通过编译</span></span><br><span class=\"line\"><span class=\"regexp\">原因是postcss-import官方文档中说明对模块的导入不需要加波浪号（~）</span></span><br><span class=\"line\"><span class=\"regexp\">解决方法：</span></span><br><span class=\"line\"><span class=\"regexp\">注释掉.postcssrc.js文件下的 \"postcss-import\": &#123;&#125;,</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"postcssrc-js配置文件：\"><a href=\"#postcssrc-js配置文件：\" class=\"headerlink\" title=\".postcssrc.js配置文件：\"></a>.postcssrc.js配置文件：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"string\">\"plugins\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"postcss-import\"</span>: &#123;&#125;,      <span class=\"comment\">//用于@import导入css文件</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-url\"</span>: &#123;&#125;,           <span class=\"comment\">//路径引入css文件或node_modules文件</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-aspect-ratio-mini\"</span>: &#123;&#125;,   <span class=\"comment\">//用来处理元素容器宽高比</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-write-svg\"</span>: &#123; <span class=\"attr\">utf8</span>: <span class=\"literal\">false</span> &#125;,    <span class=\"comment\">//用来处理移动端1px的解决方案。该插件主要使用的是border-image和background来做1px的相关处理。</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-cssnext\"</span>: &#123;&#125;,  <span class=\"comment\">//该插件可以让我们使用CSS未来的特性，其会对这些特性做相关的兼容性处理。</span></span><br><span class=\"line\">    <span class=\"string\">\"postcss-px-to-viewport\"</span>: &#123;    <span class=\"comment\">//把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。</span></span><br><span class=\"line\">    \tviewportWidth: <span class=\"number\">750</span>,    <span class=\"comment\">//视窗的宽度</span></span><br><span class=\"line\">    \tviewportHeight: <span class=\"number\">1334</span>,   <span class=\"comment\">//视窗的高度</span></span><br><span class=\"line\">    \tunitPrecision: <span class=\"number\">3</span>,    <span class=\"comment\">//将px转化为视窗单位值的小数位数</span></span><br><span class=\"line\">    \tviewportUnit: <span class=\"string\">'vw'</span>,    <span class=\"comment\">//指定要转换成的视窗单位值</span></span><br><span class=\"line\">    \tselectorBlackList: [<span class=\"string\">'.ignore'</span>, <span class=\"string\">'.hairlines'</span>],    <span class=\"comment\">//指定不转换视窗单位值得类，可以自定义，可以无限添加</span></span><br><span class=\"line\">    \tminPixelValue: <span class=\"number\">1</span>,    <span class=\"comment\">//小于等于1px不转换为视窗单位</span></span><br><span class=\"line\">    \tmediaQuery: <span class=\"literal\">false</span>   <span class=\"comment\">//允许在媒体查询中使用px</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"postcss-viewport-units\"</span>:&#123;&#125;, <span class=\"comment\">//给vw、vh、vmin和vmax做适配的操作,这是实现vw布局必不可少的一个插件</span></span><br><span class=\"line\">    <span class=\"string\">\"cssnano\"</span>: &#123;    <span class=\"comment\">//主要用来压缩和清理CSS代码。在Webpack中，cssnano和css-loader捆绑在一起，所以不需要自己加载它。</span></span><br><span class=\"line\">    \tpreset: <span class=\"string\">\"advanced\"</span>,   <span class=\"comment\">//重复调用</span></span><br><span class=\"line\">    \tautoprefixer: <span class=\"literal\">false</span>,    <span class=\"comment\">//cssnext和cssnano都具有autoprefixer,事实上只需要一个，所以把默认的autoprefixer删除掉，然后把cssnano中的autoprefixer设置为false。</span></span><br><span class=\"line\">    \t<span class=\"string\">\"postcss-zindex\"</span>: <span class=\"literal\">false</span>   <span class=\"comment\">//只要启用了这个插件，z-index的值就会重置为1</span></span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://juejin.im/post/5bf5135251882516d725d1cc\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<h5 id=\"第二种解决方法：\"><a href=\"#第二种解决方法：\" class=\"headerlink\" title=\"第二种解决方法：\"></a>第二种解决方法：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"postcss-import\"</span>: &#123;</span><br><span class=\"line\">            resolve(id) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (id.charAt(<span class=\"number\">0</span>) == <span class=\"string\">'~'</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> id.substr(<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> id</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">\"postcss-url\"</span>: &#123;&#125;,</span><br><span class=\"line\">        <span class=\"string\">\"autoprefixer\"</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Vue循序渐进","date":"2018-01-08T07:22:23.000Z","_content":"Vue-Router获取参数判断的问题\n<!-- more -->\n#### 先来一个项目中会遇到的问题吧\n`let url='http://www.xx.com?a=1&b=true'`\n##### 在vue-router中 获取路由中的query做判断你也许会这么写。。\n```\nmounted(){\n        if(this.$route.query.b){\n          ...\n        }\n      }\n```\n\n>这里的**`this.$route.query.b`**当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到`if`中去..\n##### 如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\n```\nmounted(){\n        if((typeof this.$route.query.b!='string' &&this.$route.query.b) || (this.$route.query.b &&this.$route.query.b=='true' )){\n          ...\n        }\n      }\n```\n\n##### 算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\n![image.jpeg](http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 之前有个笔误。。。\n`this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象`","source":"_posts/Vue循序渐进.md","raw":"---\ntitle: 'Vue循序渐进'\ndate: 2018-01-08 15:22:23\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue-Router获取参数判断的问题\n<!-- more -->\n#### 先来一个项目中会遇到的问题吧\n`let url='http://www.xx.com?a=1&b=true'`\n##### 在vue-router中 获取路由中的query做判断你也许会这么写。。\n```\nmounted(){\n        if(this.$route.query.b){\n          ...\n        }\n      }\n```\n\n>这里的**`this.$route.query.b`**当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到`if`中去..\n##### 如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\n```\nmounted(){\n        if((typeof this.$route.query.b!='string' &&this.$route.query.b) || (this.$route.query.b &&this.$route.query.b=='true' )){\n          ...\n        }\n      }\n```\n\n##### 算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\n![image.jpeg](http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 之前有个笔误。。。\n`this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象`","slug":"Vue循序渐进","published":1,"updated":"2019-01-05T03:38:35.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sf000agw7gn0ymokir","content":"<p>Vue-Router获取参数判断的问题<br><a id=\"more\"></a></p>\n<h4 id=\"先来一个项目中会遇到的问题吧\"><a href=\"#先来一个项目中会遇到的问题吧\" class=\"headerlink\" title=\"先来一个项目中会遇到的问题吧\"></a>先来一个项目中会遇到的问题吧</h4><p><code>let url=&#39;http://www.xx.com?a=1&amp;b=true&#39;</code></p>\n<h5 id=\"在vue-router中-获取路由中的query做判断你也许会这么写。。\"><a href=\"#在vue-router中-获取路由中的query做判断你也许会这么写。。\" class=\"headerlink\" title=\"在vue-router中 获取路由中的query做判断你也许会这么写。。\"></a>在vue-router中 获取路由中的query做判断你也许会这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if(this.$route.query.b)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里的<strong><code>this.$route.query.b</code></strong>当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到<code>if</code>中去..</p>\n</blockquote>\n<h5 id=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"><a href=\"#如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\" class=\"headerlink\" title=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"></a>如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if((typeof this.$route.query.b!=&apos;string&apos; &amp;&amp;this.$route.query.b) || (this.$route.query.b &amp;&amp;this.$route.query.b==&apos;true&apos; ))&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\"><a href=\"#算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\" class=\"headerlink\" title=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\"></a>算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730</h5><p><img src=\"http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.jpeg\"></p>\n<h3 id=\"之前有个笔误。。。\"><a href=\"#之前有个笔误。。。\" class=\"headerlink\" title=\"之前有个笔误。。。\"></a>之前有个笔误。。。</h3><p><code>this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象</code></p>\n","site":{"data":{}},"excerpt":"<p>Vue-Router获取参数判断的问题<br>","more":"</p>\n<h4 id=\"先来一个项目中会遇到的问题吧\"><a href=\"#先来一个项目中会遇到的问题吧\" class=\"headerlink\" title=\"先来一个项目中会遇到的问题吧\"></a>先来一个项目中会遇到的问题吧</h4><p><code>let url=&#39;http://www.xx.com?a=1&amp;b=true&#39;</code></p>\n<h5 id=\"在vue-router中-获取路由中的query做判断你也许会这么写。。\"><a href=\"#在vue-router中-获取路由中的query做判断你也许会这么写。。\" class=\"headerlink\" title=\"在vue-router中 获取路由中的query做判断你也许会这么写。。\"></a>在vue-router中 获取路由中的query做判断你也许会这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if(this.$route.query.b)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里的<strong><code>this.$route.query.b</code></strong>当然是Boolean值。。如果你这么以为。。那么恭喜你入坑了，但是当你刷新页面的时候 你会发现事实并非如此，代码并没与进入到<code>if</code>中去..</p>\n</blockquote>\n<h5 id=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"><a href=\"#如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\" class=\"headerlink\" title=\"如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。\"></a>如果你的操作是要在某个参数为true的情况下才继续往下执行。。那么你可以这么写。。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mounted()&#123;</span><br><span class=\"line\">        if((typeof this.$route.query.b!=&apos;string&apos; &amp;&amp;this.$route.query.b) || (this.$route.query.b &amp;&amp;this.$route.query.b==&apos;true&apos; ))&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\"><a href=\"#算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗-群号：163958730\" class=\"headerlink\" title=\"算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730\"></a>算是一个小坑吧。。暂时没有去找过其他的解决办法。。有其他解决办法的加群一起讨论呗~群号：163958730</h5><p><img src=\"http://upload-images.jianshu.io/upload_images/5597175-8a1fa71f2569312f.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.jpeg\"></p>\n<h3 id=\"之前有个笔误。。。\"><a href=\"#之前有个笔误。。。\" class=\"headerlink\" title=\"之前有个笔误。。。\"></a>之前有个笔误。。。</h3><p><code>this.$route.query是一个object 需要取到里面的属性判断。。必须是query.xx。如果没有传参，则query是个空对象</code></p>"},{"title":"Vue疑难杂症","date":"2018-04-26T06:01:27.000Z","_content":"使用Vue开发项目的过程中遇到的问题及解决方法\n<!-- more -->\n本文收集群友发得问题而写...持续更新。。。\n话不多说，直接上问题与解决方法：\n1.vue-resource 处理多个请求的问题 \n**不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了**\n解决方法：\n```JavaScript\n//其实github上有源码，我就直接复制粘贴了\n this.$http.get('/someUrl', {\n\n    // use before callback\n    before(request) {\n\n      // abort previous request, if exists\n      if (this.previousRequest) {\n        this.previousRequest.abort();//中断请求\n      }\n\n      // set previous request on Vue instance\n      this.previousRequest = request;\n    }\n\n  }).then(res=> {\n    // success callback\n  }, err=> {\n    // error callback\n  });\n```\n2.组件通信(包含非父子组件)\n**最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接**\n[组件传值-Prop](https://cn.vuejs.org/v2/guide/components.html#Prop)\n使用prop的注意点：\n```JavaScript\n<child1 ref=\"child1\" msg=\"{name:'bill'}\"></child1>\n<child1 ref=\"child1\" :msg=\"{name:'bill'}\"></child1>\n//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值\n```\n**子组件修改父组件的数据操作：**\n```JavaScript\n//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.\n子组件：\n<template>\n    <div @click=\"toChange\"></div>\n</template>\n\nmethods: {\n    toChange() {\n        this.$emit('getChange','shadow'); //主动触发getChange方法，'shadow'为向父组件传递的数据\n    }\n}\n\n父组件：\n<template>\n  <div>\n      <child @getChange=\"change\" :msg=\"msg\"></child> //监听子组件触发的getChange事件,然后调用change方法\n  </div>\n</template>\nmethods: {\n    change(msg) {\n        this.msg = msg;//父组件得msg值为shadow\n    }\n}\n```\n**下面说一下非父子组件的传值：**\nvue的官网其实已经写了 [bus](https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信)，但是好像并不详细 好多人不会用，下面讲解一下用法：\n```JavaScript\n//写法可以有两种(注意！！都是在main.js进行操作)：\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n   data: {\n  // 空的实例放到根组件下，所有的子组件都能调用\n    Bus: new Vue()\n  },\n  template: '<App/>'\n})\n//第一种写法的使用方法为(发送，接收)：\nthis.$root.Bus.$emit('事件名',payload);//payload为传送的值\nthis.$root.Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n\n//第二种写法类似插件，就是简化使用：\nVue.prototype.$Bus = new Vue();\n//使用方法就是写法上的改变：\nthis.$Bus.$emit('事件名',payload);//payload为传送的值\nthis.$Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n```\n**除了bus非父子组件通信就要用vuex了，之前有过[vuex](https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/)得文章，写得一般 有问题得可以加群讨论(163958730)**\n3.vue-router导航守卫\n*这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下*\n一些基础的参数说明我就不写了吧。。[官网链接](https://router.vuejs.org/zh-cn/advanced/navigation-guards.html)\n**router.beforeEach**\n```JavaScript\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireAuth)){  // 判断该路由是否需要登录权限\n    if (token) {  // 判断当前的token是否存在\n      next();//已登录直接进入下一个页面\n    }\n    else {\n      next({\n        path: '/login',\n        query: {redirect: to.fullPath}  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next();\n  }\n});\n//需要登录的组件相对应的路由加上配置\n{\n            path: \"result\",\n            component: result,\n            name: 'result',\n            meta: {requireAuth: false}\n},\n```\n**beforeRouteEnter(组件内的守护)**\n```JavaScript\n//一般用于进入组件之前需要操作\n//父子组件有时候好像有点坑。。使用的时候自己注意吧\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n4.vue-router懒加载组件引入方式写法：\n```JavaScript\nconst HelloWorld = r => require.ensure([], () => r(require('@/components/HelloWorld')), 'Home');\n```\n5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)\n```JavaScript\n@click=\"isTrue&&chooseCompany\"//这样写在click方法里打debugger并不会进去\n\n@click=\"isTrue&&chooseCompany()\"//所以这才是解锁得正确方式~~~\n```\n6.vue定义了别名(alias)，引用图片路径错误问题\n```JavaScript\nvue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a module path, prefix it with ~\n//就是要在别名前面加一个~\nalias: {\n  'src': path.resolve(__dirname, '../src'),\n  'assets': path.resolve(__dirname, '../src/assets'),\n  'components': path.resolve(__dirname, '../src/components')\n}\n\n<template>\n    <img src=\"~assets/images/logo.jpg\" />//引用\n</template>\n<script>\nimport 'assets/css/style.css'\n</script>\n<style>\n.logo {\n    background: url(~asset/images/bg.jpg)\n}\n</style>\n//意思就是: 告诉加载器它是一个模块，而不是相对路径\n//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.\n```","source":"_posts/Vue疑难杂症.md","raw":"---\ntitle: Vue疑难杂症\ndate: 2018-04-26 14:01:27\ncategories:\n- Vue\ntags:\n- Vue\n---\n使用Vue开发项目的过程中遇到的问题及解决方法\n<!-- more -->\n本文收集群友发得问题而写...持续更新。。。\n话不多说，直接上问题与解决方法：\n1.vue-resource 处理多个请求的问题 \n**不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了**\n解决方法：\n```JavaScript\n//其实github上有源码，我就直接复制粘贴了\n this.$http.get('/someUrl', {\n\n    // use before callback\n    before(request) {\n\n      // abort previous request, if exists\n      if (this.previousRequest) {\n        this.previousRequest.abort();//中断请求\n      }\n\n      // set previous request on Vue instance\n      this.previousRequest = request;\n    }\n\n  }).then(res=> {\n    // success callback\n  }, err=> {\n    // error callback\n  });\n```\n2.组件通信(包含非父子组件)\n**最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接**\n[组件传值-Prop](https://cn.vuejs.org/v2/guide/components.html#Prop)\n使用prop的注意点：\n```JavaScript\n<child1 ref=\"child1\" msg=\"{name:'bill'}\"></child1>\n<child1 ref=\"child1\" :msg=\"{name:'bill'}\"></child1>\n//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值\n```\n**子组件修改父组件的数据操作：**\n```JavaScript\n//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.\n子组件：\n<template>\n    <div @click=\"toChange\"></div>\n</template>\n\nmethods: {\n    toChange() {\n        this.$emit('getChange','shadow'); //主动触发getChange方法，'shadow'为向父组件传递的数据\n    }\n}\n\n父组件：\n<template>\n  <div>\n      <child @getChange=\"change\" :msg=\"msg\"></child> //监听子组件触发的getChange事件,然后调用change方法\n  </div>\n</template>\nmethods: {\n    change(msg) {\n        this.msg = msg;//父组件得msg值为shadow\n    }\n}\n```\n**下面说一下非父子组件的传值：**\nvue的官网其实已经写了 [bus](https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信)，但是好像并不详细 好多人不会用，下面讲解一下用法：\n```JavaScript\n//写法可以有两种(注意！！都是在main.js进行操作)：\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n   data: {\n  // 空的实例放到根组件下，所有的子组件都能调用\n    Bus: new Vue()\n  },\n  template: '<App/>'\n})\n//第一种写法的使用方法为(发送，接收)：\nthis.$root.Bus.$emit('事件名',payload);//payload为传送的值\nthis.$root.Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n\n//第二种写法类似插件，就是简化使用：\nVue.prototype.$Bus = new Vue();\n//使用方法就是写法上的改变：\nthis.$Bus.$emit('事件名',payload);//payload为传送的值\nthis.$Bus.$on('事件名',shadow=>{consloe.log(shadow)//shadow为接收到得值})\n```\n**除了bus非父子组件通信就要用vuex了，之前有过[vuex](https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/)得文章，写得一般 有问题得可以加群讨论(163958730)**\n3.vue-router导航守卫\n*这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下*\n一些基础的参数说明我就不写了吧。。[官网链接](https://router.vuejs.org/zh-cn/advanced/navigation-guards.html)\n**router.beforeEach**\n```JavaScript\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireAuth)){  // 判断该路由是否需要登录权限\n    if (token) {  // 判断当前的token是否存在\n      next();//已登录直接进入下一个页面\n    }\n    else {\n      next({\n        path: '/login',\n        query: {redirect: to.fullPath}  // 将跳转的路由path作为参数，登录成功后跳转到该路由\n      })\n    }\n  }\n  else {\n    next();\n  }\n});\n//需要登录的组件相对应的路由加上配置\n{\n            path: \"result\",\n            component: result,\n            name: 'result',\n            meta: {requireAuth: false}\n},\n```\n**beforeRouteEnter(组件内的守护)**\n```JavaScript\n//一般用于进入组件之前需要操作\n//父子组件有时候好像有点坑。。使用的时候自己注意吧\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n4.vue-router懒加载组件引入方式写法：\n```JavaScript\nconst HelloWorld = r => require.ensure([], () => r(require('@/components/HelloWorld')), 'Home');\n```\n5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)\n```JavaScript\n@click=\"isTrue&&chooseCompany\"//这样写在click方法里打debugger并不会进去\n\n@click=\"isTrue&&chooseCompany()\"//所以这才是解锁得正确方式~~~\n```\n6.vue定义了别名(alias)，引用图片路径错误问题\n```JavaScript\nvue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a module path, prefix it with ~\n//就是要在别名前面加一个~\nalias: {\n  'src': path.resolve(__dirname, '../src'),\n  'assets': path.resolve(__dirname, '../src/assets'),\n  'components': path.resolve(__dirname, '../src/components')\n}\n\n<template>\n    <img src=\"~assets/images/logo.jpg\" />//引用\n</template>\n<script>\nimport 'assets/css/style.css'\n</script>\n<style>\n.logo {\n    background: url(~asset/images/bg.jpg)\n}\n</style>\n//意思就是: 告诉加载器它是一个模块，而不是相对路径\n//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.\n```","slug":"Vue疑难杂症","published":1,"updated":"2019-01-05T03:38:35.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sh000egw7gv1tsa7a3","content":"<p>使用Vue开发项目的过程中遇到的问题及解决方法<br><a id=\"more\"></a><br>本文收集群友发得问题而写…持续更新。。。<br>话不多说，直接上问题与解决方法：<br>1.vue-resource 处理多个请求的问题<br><strong>不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了</strong><br>解决方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其实github上有源码，我就直接复制粘贴了</span></span><br><span class=\"line\"> <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/someUrl'</span>, &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// use before callback</span></span><br><span class=\"line\">    before(request) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// abort previous request, if exists</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.previousRequest) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.previousRequest.abort();<span class=\"comment\">//中断请求</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// set previous request on Vue instance</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.previousRequest = request;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// success callback</span></span><br><span class=\"line\">  &#125;, err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// error callback</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>2.组件通信(包含非父子组件)<br><strong>最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接</strong><br><a href=\"https://cn.vuejs.org/v2/guide/components.html#Prop\" target=\"_blank\" rel=\"noopener\">组件传值-Prop</a><br>使用prop的注意点：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;<span class=\"regexp\">/child1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;child1 ref=\"child1\" :msg=\"&#123;name:'bill'&#125;\"&gt;&lt;/</span>child1&gt;</span><br><span class=\"line\"><span class=\"comment\">//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>子组件修改父组件的数据操作：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.</span></span><br><span class=\"line\">子组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div @click=<span class=\"string\">\"toChange\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    toChange() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'getChange'</span>,<span class=\"string\">'shadow'</span>); <span class=\"comment\">//主动触发getChange方法，'shadow'为向父组件传递的数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">父组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">      &lt;child @getChange=<span class=\"string\">\"change\"</span> :msg=<span class=\"string\">\"msg\"</span>&gt;&lt;<span class=\"regexp\">/child&gt; /</span><span class=\"regexp\">/监听子组件触发的getChange事件,然后调用change方法</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    change(msg) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        this.msg = msg;/</span><span class=\"regexp\">/父组件得msg值为shadow</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>下面说一下非父子组件的传值：</strong><br>vue的官网其实已经写了 <a href=\"https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信\" target=\"_blank\" rel=\"noopener\">bus</a>，但是好像并不详细 好多人不会用，下面讲解一下用法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写法可以有两种(注意！！都是在main.js进行操作)：</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">   data: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 空的实例放到根组件下，所有的子组件都能调用</span></span><br><span class=\"line\">    Bus: <span class=\"keyword\">new</span> Vue()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//第一种写法的使用方法为(发送，接收)：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种写法类似插件，就是简化使用：</span></span><br><span class=\"line\">Vue.prototype.$Bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"><span class=\"comment\">//使用方法就是写法上的改变：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>除了bus非父子组件通信就要用vuex了，之前有过<a href=\"https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/\">vuex</a>得文章，写得一般 有问题得可以加群讨论(163958730)</strong><br>3.vue-router导航守卫<br><em>这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下</em><br>一些基础的参数说明我就不写了吧。。<a href=\"https://router.vuejs.org/zh-cn/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">官网链接</a><br><strong>router.beforeEach</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.requireAuth))&#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;  <span class=\"comment\">// 判断当前的token是否存在</span></span><br><span class=\"line\">      next();<span class=\"comment\">//已登录直接进入下一个页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/login'</span>,</span><br><span class=\"line\">        query: &#123;<span class=\"attr\">redirect</span>: to.fullPath&#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//需要登录的组件相对应的路由加上配置</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"result\"</span>,</span><br><span class=\"line\">            component: result,</span><br><span class=\"line\">            name: <span class=\"string\">'result'</span>,</span><br><span class=\"line\">            meta: &#123;<span class=\"attr\">requireAuth</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p><strong>beforeRouteEnter(组件内的守护)</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一般用于进入组件之前需要操作</span></span><br><span class=\"line\"><span class=\"comment\">//父子组件有时候好像有点坑。。使用的时候自己注意吧</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.vue-router懒加载组件引入方式写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HelloWorld = <span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">require</span>.ensure([], () =&gt; r(<span class=\"built_in\">require</span>(<span class=\"string\">'@/components/HelloWorld'</span>)), <span class=\"string\">'Home'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany\"</span><span class=\"comment\">//这样写在click方法里打debugger并不会进去</span></span><br><span class=\"line\"></span><br><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany()\"</span><span class=\"comment\">//所以这才是解锁得正确方式~~~</span></span><br></pre></td></tr></table></figure></p>\n<p>6.vue定义了别名(alias)，引用图片路径错误问题<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a <span class=\"built_in\">module</span> path, prefix it <span class=\"keyword\">with</span> ~</span><br><span class=\"line\"><span class=\"comment\">//就是要在别名前面加一个~</span></span><br><span class=\"line\">alias: &#123;</span><br><span class=\"line\">  <span class=\"string\">'src'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>),</span><br><span class=\"line\">  <span class=\"string\">'assets'</span>: path.resolve(__dirname, <span class=\"string\">'../src/assets'</span>),</span><br><span class=\"line\">  <span class=\"string\">'components'</span>: path.resolve(__dirname, <span class=\"string\">'../src/components'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;img src=<span class=\"string\">\"~assets/images/logo.jpg\"</span> /&gt;<span class=\"comment\">//引用</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import 'assets/</span>css/style.css<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">.logo &#123;</span></span><br><span class=\"line\"><span class=\"string\">    background: url(~asset/images/bg.jpg)</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">//意思就是: 告诉加载器它是一个模块，而不是相对路径</span></span><br><span class=\"line\"><span class=\"string\">//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>使用Vue开发项目的过程中遇到的问题及解决方法<br>","more":"<br>本文收集群友发得问题而写…持续更新。。。<br>话不多说，直接上问题与解决方法：<br>1.vue-resource 处理多个请求的问题<br><strong>不知道这种情况算不算啊。。tab切换的时候 前一个请求未完成点击切换立马发了下一个请求，导致之前的请求结果也渲染了</strong><br>解决方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其实github上有源码，我就直接复制粘贴了</span></span><br><span class=\"line\"> <span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/someUrl'</span>, &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// use before callback</span></span><br><span class=\"line\">    before(request) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// abort previous request, if exists</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.previousRequest) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.previousRequest.abort();<span class=\"comment\">//中断请求</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// set previous request on Vue instance</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.previousRequest = request;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// success callback</span></span><br><span class=\"line\">  &#125;, err=&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// error callback</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>2.组件通信(包含非父子组件)<br><strong>最常见的父子组件通讯采用prop，这个应该不用多说吧 不知道的看下面的链接</strong><br><a href=\"https://cn.vuejs.org/v2/guide/components.html#Prop\" target=\"_blank\" rel=\"noopener\">组件传值-Prop</a><br>使用prop的注意点：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;child1 ref=<span class=\"string\">\"child1\"</span> msg=<span class=\"string\">\"&#123;name:'bill'&#125;\"</span>&gt;&lt;<span class=\"regexp\">/child1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;child1 ref=\"child1\" :msg=\"&#123;name:'bill'&#125;\"&gt;&lt;/</span>child1&gt;</span><br><span class=\"line\"><span class=\"comment\">//首先冒号是v-bind的缩写，不带冒号后面是字符串，带了冒号就是数据绑定，引号里面的内容是变量或者表达式, 组件内不能修改props的值</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>子组件修改父组件的数据操作：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这在vue中是不允许的，因为vue只允许单向数据传递，这时候我们可以通过触发事件来通知父组件改变数据，从而达到改变子组件数据的目的.</span></span><br><span class=\"line\">子组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div @click=<span class=\"string\">\"toChange\"</span>&gt;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    toChange() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'getChange'</span>,<span class=\"string\">'shadow'</span>); <span class=\"comment\">//主动触发getChange方法，'shadow'为向父组件传递的数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">父组件：</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">      &lt;child @getChange=<span class=\"string\">\"change\"</span> :msg=<span class=\"string\">\"msg\"</span>&gt;&lt;<span class=\"regexp\">/child&gt; /</span><span class=\"regexp\">/监听子组件触发的getChange事件,然后调用change方法</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    change(msg) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        this.msg = msg;/</span><span class=\"regexp\">/父组件得msg值为shadow</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>下面说一下非父子组件的传值：</strong><br>vue的官网其实已经写了 <a href=\"https://cn.vuejs.org/v2/guide/components.html#非父子组件的通信\" target=\"_blank\" rel=\"noopener\">bus</a>，但是好像并不详细 好多人不会用，下面讲解一下用法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//写法可以有两种(注意！！都是在main.js进行操作)：</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">   data: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 空的实例放到根组件下，所有的子组件都能调用</span></span><br><span class=\"line\">    Bus: <span class=\"keyword\">new</span> Vue()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//第一种写法的使用方法为(发送，接收)：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$root.Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第二种写法类似插件，就是简化使用：</span></span><br><span class=\"line\">Vue.prototype.$Bus = <span class=\"keyword\">new</span> Vue();</span><br><span class=\"line\"><span class=\"comment\">//使用方法就是写法上的改变：</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$emit(<span class=\"string\">'事件名'</span>,payload);<span class=\"comment\">//payload为传送的值</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.$Bus.$on(<span class=\"string\">'事件名'</span>,shadow=&gt;&#123;consloe.log(shadow)<span class=\"comment\">//shadow为接收到得值&#125;)</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>除了bus非父子组件通信就要用vuex了，之前有过<a href=\"https://shadownc.github.io/2018/01/17/%E5%85%B3%E4%BA%8EVuex/\">vuex</a>得文章，写得一般 有问题得可以加群讨论(163958730)</strong><br>3.vue-router导航守卫<br><em>这个其实项目前差不多都是配置好得。。我也不知道要说什么 挑几个常用的讲一下</em><br>一些基础的参数说明我就不写了吧。。<a href=\"https://router.vuejs.org/zh-cn/advanced/navigation-guards.html\" target=\"_blank\" rel=\"noopener\">官网链接</a><br><strong>router.beforeEach</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.matched.some(<span class=\"function\"><span class=\"params\">record</span> =&gt;</span> record.meta.requireAuth))&#123;  <span class=\"comment\">// 判断该路由是否需要登录权限</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token) &#123;  <span class=\"comment\">// 判断当前的token是否存在</span></span><br><span class=\"line\">      next();<span class=\"comment\">//已登录直接进入下一个页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      next(&#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/login'</span>,</span><br><span class=\"line\">        query: &#123;<span class=\"attr\">redirect</span>: to.fullPath&#125;  <span class=\"comment\">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//需要登录的组件相对应的路由加上配置</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"result\"</span>,</span><br><span class=\"line\">            component: result,</span><br><span class=\"line\">            name: <span class=\"string\">'result'</span>,</span><br><span class=\"line\">            meta: &#123;<span class=\"attr\">requireAuth</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p><strong>beforeRouteEnter(组件内的守护)</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一般用于进入组件之前需要操作</span></span><br><span class=\"line\"><span class=\"comment\">//父子组件有时候好像有点坑。。使用的时候自己注意吧</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.vue-router懒加载组件引入方式写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> HelloWorld = <span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">require</span>.ensure([], () =&gt; r(<span class=\"built_in\">require</span>(<span class=\"string\">'@/components/HelloWorld'</span>)), <span class=\"string\">'Home'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>5.判断条件满足以后才往下执行点击事件(略微有个小坑吧)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany\"</span><span class=\"comment\">//这样写在click方法里打debugger并不会进去</span></span><br><span class=\"line\"></span><br><span class=\"line\">@click=<span class=\"string\">\"isTrue&amp;&amp;chooseCompany()\"</span><span class=\"comment\">//所以这才是解锁得正确方式~~~</span></span><br></pre></td></tr></table></figure></p>\n<p>6.vue定义了别名(alias)，引用图片路径错误问题<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue-html-loader and css-loader translates non-root URLs to relative paths. In order to treat it like a <span class=\"built_in\">module</span> path, prefix it <span class=\"keyword\">with</span> ~</span><br><span class=\"line\"><span class=\"comment\">//就是要在别名前面加一个~</span></span><br><span class=\"line\">alias: &#123;</span><br><span class=\"line\">  <span class=\"string\">'src'</span>: path.resolve(__dirname, <span class=\"string\">'../src'</span>),</span><br><span class=\"line\">  <span class=\"string\">'assets'</span>: path.resolve(__dirname, <span class=\"string\">'../src/assets'</span>),</span><br><span class=\"line\">  <span class=\"string\">'components'</span>: path.resolve(__dirname, <span class=\"string\">'../src/components'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;img src=<span class=\"string\">\"~assets/images/logo.jpg\"</span> /&gt;<span class=\"comment\">//引用</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import 'assets/</span>css/style.css<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;style&gt;</span></span><br><span class=\"line\"><span class=\"string\">.logo &#123;</span></span><br><span class=\"line\"><span class=\"string\">    background: url(~asset/images/bg.jpg)</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">//意思就是: 告诉加载器它是一个模块，而不是相对路径</span></span><br><span class=\"line\"><span class=\"string\">//注意: 只有在template中的静态文件地址和style中的静态文件地址需要加~, 在script里的, 别名定义成什么就写什么.</span></span><br></pre></td></tr></table></figure></p>"},{"title":"export和export Default区别","date":"2018-06-28T02:09:45.000Z","_content":"ES6 export和export Default区别\n<!-- more -->\n>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。\n```JavaScript\n//export :基本用法是放置在一个\"声明\"之前，或一组由{}语法（注意，此处的{}语法与对象无关）\nvar a = 1, b = 2;\nfunction square(x) {\n    return x * x;\n}\nexport { a, b, square}\n//等同于\nexport var a = 1;\nexport var b = 2;\nexport function square(x) {\n    return x * x;\n}\n//假设文件名为test.js，你需要导入上面得变量或方法\nimport {a,b,square}//{}不能少~~\n//当两个js文件中有相同命名得方法时 引入会造成混乱\nimport {test} from './a.js'\nimport {test} from './b.js'\t\n//正确使用姿势\nimport {test as aTest} from './a.js'\nimport {test as bTest} from './b.js'\n//使用方法 aTest();bTest();\n//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间\nimport * as aFun from './a.js'//两个文件中可能还有其他同名function\nimport * as bFun from './b.js'\naFun.test() ;\nbFun.test();\n```\n```JavaScript\n//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，\n//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)\n//------ myFunc.js ------\nexport default function () { ... };\n\n//------ main1.js ------\nimport myFunc from 'myFunc';//import命令后面，不使用大括号。\nmyFunc();\n//export default输出多个方法\nexport default {\n  a() {\n    return 'a'\n  },\n  b() {\n    return 'b'\n  },\n  c() {\n    return 'c'\n  }\n}\n```\n>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign\n```JavaScript\nimport * as myFunc from './ambidextrous-cow.js' \n\nexport default Object.assign(speak, myFunc) //Object.assign只能用于function\n\nexport function speak () {\n  console.log('Hello World')\n}\n\n//对应得引入：\nimport defaultFunc from './ambidextrous-cow'\nimport * as otherFunc from './ambidextrous-cow'\n\ndefaultFunc () // Hello World\ndefaultFunc .speak() // Hello World\notherFunc.speak() // Hello World\n```","source":"_posts/export和exportDefault区别.md","raw":"---\ntitle: export和export Default区别\ndate: 2018-06-28 10:09:45\ncategories:\n- ES6\ntags:\n- ES6\n---\nES6 export和export Default区别\n<!-- more -->\n>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。\n```JavaScript\n//export :基本用法是放置在一个\"声明\"之前，或一组由{}语法（注意，此处的{}语法与对象无关）\nvar a = 1, b = 2;\nfunction square(x) {\n    return x * x;\n}\nexport { a, b, square}\n//等同于\nexport var a = 1;\nexport var b = 2;\nexport function square(x) {\n    return x * x;\n}\n//假设文件名为test.js，你需要导入上面得变量或方法\nimport {a,b,square}//{}不能少~~\n//当两个js文件中有相同命名得方法时 引入会造成混乱\nimport {test} from './a.js'\nimport {test} from './b.js'\t\n//正确使用姿势\nimport {test as aTest} from './a.js'\nimport {test as bTest} from './b.js'\n//使用方法 aTest();bTest();\n//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间\nimport * as aFun from './a.js'//两个文件中可能还有其他同名function\nimport * as bFun from './b.js'\naFun.test() ;\nbFun.test();\n```\n```JavaScript\n//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，\n//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)\n//------ myFunc.js ------\nexport default function () { ... };\n\n//------ main1.js ------\nimport myFunc from 'myFunc';//import命令后面，不使用大括号。\nmyFunc();\n//export default输出多个方法\nexport default {\n  a() {\n    return 'a'\n  },\n  b() {\n    return 'b'\n  },\n  c() {\n    return 'c'\n  }\n}\n```\n>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign\n```JavaScript\nimport * as myFunc from './ambidextrous-cow.js' \n\nexport default Object.assign(speak, myFunc) //Object.assign只能用于function\n\nexport function speak () {\n  console.log('Hello World')\n}\n\n//对应得引入：\nimport defaultFunc from './ambidextrous-cow'\nimport * as otherFunc from './ambidextrous-cow'\n\ndefaultFunc () // Hello World\ndefaultFunc .speak() // Hello World\notherFunc.speak() // Hello World\n```","slug":"export和exportDefault区别","published":1,"updated":"2019-01-05T03:38:35.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sj000fgw7gldg12y7v","content":"<p>ES6 export和export Default区别<br><a id=\"more\"></a></p>\n<blockquote>\n<p>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export :基本用法是放置在一个\"声明\"之前，或一组由&#123;&#125;语法（注意，此处的&#123;&#125;语法与对象无关）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; a, b, square&#125;</span><br><span class=\"line\"><span class=\"comment\">//等同于</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//假设文件名为test.js，你需要导入上面得变量或方法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;a,b,square&#125;<span class=\"comment\">//&#123;&#125;不能少~~</span></span><br><span class=\"line\"><span class=\"comment\">//当两个js文件中有相同命名得方法时 引入会造成混乱</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span>\t</span><br><span class=\"line\"><span class=\"comment\">//正确使用姿势</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> aTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> bTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\"><span class=\"comment\">//使用方法 aTest();bTest();</span></span><br><span class=\"line\"><span class=\"comment\">//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aFun <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span><span class=\"comment\">//两个文件中可能还有其他同名function</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bFun <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\">aFun.test() ;</span><br><span class=\"line\">bFun.test();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，</span></span><br><span class=\"line\"><span class=\"comment\">//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)</span></span><br><span class=\"line\"><span class=\"comment\">//------ myFunc.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; ... &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ main1.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'myFunc'</span>;<span class=\"comment\">//import命令后面，不使用大括号。</span></span><br><span class=\"line\">myFunc();</span><br><span class=\"line\"><span class=\"comment\">//export default输出多个方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'a'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'b'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  c() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'c'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow.js'</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"built_in\">Object</span>.assign(speak, myFunc) <span class=\"comment\">//Object.assign只能用于function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello World'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对应得引入：</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> defaultFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> otherFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"></span><br><span class=\"line\">defaultFunc () <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">defaultFunc .speak() <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">otherFunc.speak() <span class=\"comment\">// Hello World</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>ES6 export和export Default区别<br>","more":"</p>\n<blockquote>\n<p>export命令用于规定模块的对外接口，import命令用于输入其他模块提供的功能。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export :基本用法是放置在一个\"声明\"之前，或一组由&#123;&#125;语法（注意，此处的&#123;&#125;语法与对象无关）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; a, b, square&#125;</span><br><span class=\"line\"><span class=\"comment\">//等同于</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">square</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//假设文件名为test.js，你需要导入上面得变量或方法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;a,b,square&#125;<span class=\"comment\">//&#123;&#125;不能少~~</span></span><br><span class=\"line\"><span class=\"comment\">//当两个js文件中有相同命名得方法时 引入会造成混乱</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span>\t</span><br><span class=\"line\"><span class=\"comment\">//正确使用姿势</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> aTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;test <span class=\"keyword\">as</span> bTest&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\"><span class=\"comment\">//使用方法 aTest();bTest();</span></span><br><span class=\"line\"><span class=\"comment\">//当js文件里方法过多得时候，导出就会显得有点繁杂，解决方法 通过命名空间</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> aFun <span class=\"keyword\">from</span> <span class=\"string\">'./a.js'</span><span class=\"comment\">//两个文件中可能还有其他同名function</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> bFun <span class=\"keyword\">from</span> <span class=\"string\">'./b.js'</span></span><br><span class=\"line\">aFun.test() ;</span><br><span class=\"line\">bFun.test();</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//export default:每个模块定义只能有一个default，它是唯一的，每个被导出的模块只包含一个default元素，</span></span><br><span class=\"line\"><span class=\"comment\">//所以export default命令在模块内只被允许使用一次。(默认输出就不需要name了，但是一个js文件中只能有一个export default。)</span></span><br><span class=\"line\"><span class=\"comment\">//------ myFunc.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; ... &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ main1.js ------</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'myFunc'</span>;<span class=\"comment\">//import命令后面，不使用大括号。</span></span><br><span class=\"line\">myFunc();</span><br><span class=\"line\"><span class=\"comment\">//export default输出多个方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  a() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'a'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  b() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'b'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  c() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'c'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> myFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow.js'</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"built_in\">Object</span>.assign(speak, myFunc) <span class=\"comment\">//Object.assign只能用于function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello World'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对应得引入：</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> defaultFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> otherFunc <span class=\"keyword\">from</span> <span class=\"string\">'./ambidextrous-cow'</span></span><br><span class=\"line\"></span><br><span class=\"line\">defaultFunc () <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">defaultFunc .speak() <span class=\"comment\">// Hello World</span></span><br><span class=\"line\">otherFunc.speak() <span class=\"comment\">// Hello World</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>"},{"title":"express+mongodb写接口遇坑","date":"2018-08-01T07:53:49.000Z","_content":"express+mongodb写api接口遇到的一些问题及解决方法\n<!-- more -->\n##### node crypto密码加密\n```JavaScript\n#express加密密码时报错 Digest already called\n#报错写法：\nconst crypto = require('crypto');//密码加密\nconst md5 = crypto.createHash('md5');\n#正确写法：放到router.post(xx,(req,res)=>{})中去\nrequire('crypto').createHash('md5').update(req.body.password).digest('hex')\n```\n##### mongodb 查询\n```JavaScript\n//只输出id和title字段，第一个参数为查询条件，空代表查询所有\ndb.news.find( {}, { id: 1, title: 1 } )\n//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法\n//不输出内容字段，其它字段都输出\ndb.news.find( {查询条件}, {content: 0 } )\n```\n##### express-session 本地接口没问题，部署以后post请求会出现参数不匹配--502\n```JavaScript\n#查看nginx error.log报错信息:\nupstream prematurely closed connection while reading response header from upstream, client: xx.xxx.xxx.xx, server: shadow.com, request: \"POST /user/login HTTP/1.1\",\n#排查了很久发现是退出登录以后再次请求没有清除session\n#退出登录方法中调用:\nreq.session.destroy();\n```\n##### express process.env.NODE_ENV判断不起作用\n```JavaScript\n#在启动的时候设置NODE_ENV\nset NODE_ENV=development&& node index.js\n需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况\n```\n##### multer文件上传\n```JavaScript\npostman测试的时候key的值要跟upload.single('file') single中的一样\n//服务器访问图片404--添加图片代理:\nlocation /images {\n    proxy_pass http://localhost:3000;\n  }\n#注意：放在location / {} 前面 配置完重启nginx\n```","source":"_posts/express-mongodb写接口遇坑.md","raw":"---\ntitle: express+mongodb写接口遇坑\ndate: 2018-08-01 15:53:49\ncategories:\n- node\ntags:\n- node\n---\nexpress+mongodb写api接口遇到的一些问题及解决方法\n<!-- more -->\n##### node crypto密码加密\n```JavaScript\n#express加密密码时报错 Digest already called\n#报错写法：\nconst crypto = require('crypto');//密码加密\nconst md5 = crypto.createHash('md5');\n#正确写法：放到router.post(xx,(req,res)=>{})中去\nrequire('crypto').createHash('md5').update(req.body.password).digest('hex')\n```\n##### mongodb 查询\n```JavaScript\n//只输出id和title字段，第一个参数为查询条件，空代表查询所有\ndb.news.find( {}, { id: 1, title: 1 } )\n//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法\n//不输出内容字段，其它字段都输出\ndb.news.find( {查询条件}, {content: 0 } )\n```\n##### express-session 本地接口没问题，部署以后post请求会出现参数不匹配--502\n```JavaScript\n#查看nginx error.log报错信息:\nupstream prematurely closed connection while reading response header from upstream, client: xx.xxx.xxx.xx, server: shadow.com, request: \"POST /user/login HTTP/1.1\",\n#排查了很久发现是退出登录以后再次请求没有清除session\n#退出登录方法中调用:\nreq.session.destroy();\n```\n##### express process.env.NODE_ENV判断不起作用\n```JavaScript\n#在启动的时候设置NODE_ENV\nset NODE_ENV=development&& node index.js\n需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况\n```\n##### multer文件上传\n```JavaScript\npostman测试的时候key的值要跟upload.single('file') single中的一样\n//服务器访问图片404--添加图片代理:\nlocation /images {\n    proxy_pass http://localhost:3000;\n  }\n#注意：放在location / {} 前面 配置完重启nginx\n```","slug":"express-mongodb写接口遇坑","published":1,"updated":"2019-01-05T03:38:35.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sm000kgw7g48bf61k0","content":"<p>express+mongodb写api接口遇到的一些问题及解决方法<br><a id=\"more\"></a></p>\n<h5 id=\"node-crypto密码加密\"><a href=\"#node-crypto密码加密\" class=\"headerlink\" title=\"node crypto密码加密\"></a>node crypto密码加密</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#express加密密码时报错 Digest already called</span><br><span class=\"line\">#报错写法：</span><br><span class=\"line\"><span class=\"keyword\">const</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);<span class=\"comment\">//密码加密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = crypto.createHash(<span class=\"string\">'md5'</span>);</span><br><span class=\"line\">#正确写法：放到router.post(xx,(req,res)=&gt;&#123;&#125;)中去</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>).createHash(<span class=\"string\">'md5'</span>).update(req.body.password).digest(<span class=\"string\">'hex'</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mongodb-查询\"><a href=\"#mongodb-查询\" class=\"headerlink\" title=\"mongodb 查询\"></a>mongodb 查询</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只输出id和title字段，第一个参数为查询条件，空代表查询所有</span></span><br><span class=\"line\">db.news.find( &#123;&#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"number\">1</span> &#125; )</span><br><span class=\"line\"><span class=\"comment\">//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法</span></span><br><span class=\"line\"><span class=\"comment\">//不输出内容字段，其它字段都输出</span></span><br><span class=\"line\">db.news.find( &#123;查询条件&#125;, &#123;<span class=\"attr\">content</span>: <span class=\"number\">0</span> &#125; )</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\"><a href=\"#express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\" class=\"headerlink\" title=\"express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502\"></a>express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看nginx error.log报错信息:</span><br><span class=\"line\">upstream prematurely closed connection <span class=\"keyword\">while</span> reading response header <span class=\"keyword\">from</span> upstream, <span class=\"attr\">client</span>: xx.xxx.xxx.xx, <span class=\"attr\">server</span>: shadow.com, <span class=\"attr\">request</span>: <span class=\"string\">\"POST /user/login HTTP/1.1\"</span>,</span><br><span class=\"line\">#排查了很久发现是退出登录以后再次请求没有清除session</span><br><span class=\"line\">#退出登录方法中调用:</span><br><span class=\"line\">req.session.destroy();</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-process-env-NODE-ENV判断不起作用\"><a href=\"#express-process-env-NODE-ENV判断不起作用\" class=\"headerlink\" title=\"express process.env.NODE_ENV判断不起作用\"></a>express process.env.NODE_ENV判断不起作用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在启动的时候设置NODE_ENV</span><br><span class=\"line\"><span class=\"keyword\">set</span> NODE_ENV=development&amp;&amp; node index.js</span><br><span class=\"line\">需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况</span><br></pre></td></tr></table></figure>\n<h5 id=\"multer文件上传\"><a href=\"#multer文件上传\" class=\"headerlink\" title=\"multer文件上传\"></a>multer文件上传</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman测试的时候key的值要跟upload.single(<span class=\"string\">'file'</span>) single中的一样</span><br><span class=\"line\"><span class=\"comment\">//服务器访问图片404--添加图片代理:</span></span><br><span class=\"line\">location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">#注意：放在location / &#123;&#125; 前面 配置完重启nginx</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>express+mongodb写api接口遇到的一些问题及解决方法<br>","more":"</p>\n<h5 id=\"node-crypto密码加密\"><a href=\"#node-crypto密码加密\" class=\"headerlink\" title=\"node crypto密码加密\"></a>node crypto密码加密</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#express加密密码时报错 Digest already called</span><br><span class=\"line\">#报错写法：</span><br><span class=\"line\"><span class=\"keyword\">const</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);<span class=\"comment\">//密码加密</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = crypto.createHash(<span class=\"string\">'md5'</span>);</span><br><span class=\"line\">#正确写法：放到router.post(xx,(req,res)=&gt;&#123;&#125;)中去</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>).createHash(<span class=\"string\">'md5'</span>).update(req.body.password).digest(<span class=\"string\">'hex'</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mongodb-查询\"><a href=\"#mongodb-查询\" class=\"headerlink\" title=\"mongodb 查询\"></a>mongodb 查询</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只输出id和title字段，第一个参数为查询条件，空代表查询所有</span></span><br><span class=\"line\">db.news.find( &#123;&#125;, &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">title</span>: <span class=\"number\">1</span> &#125; )</span><br><span class=\"line\"><span class=\"comment\">//如果需要输出的字段比较多，不想要某个字段，可以用排除字段的方法</span></span><br><span class=\"line\"><span class=\"comment\">//不输出内容字段，其它字段都输出</span></span><br><span class=\"line\">db.news.find( &#123;查询条件&#125;, &#123;<span class=\"attr\">content</span>: <span class=\"number\">0</span> &#125; )</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\"><a href=\"#express-session-本地接口没问题，部署以后post请求会出现参数不匹配–502\" class=\"headerlink\" title=\"express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502\"></a>express-session 本地接口没问题，部署以后post请求会出现参数不匹配–502</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看nginx error.log报错信息:</span><br><span class=\"line\">upstream prematurely closed connection <span class=\"keyword\">while</span> reading response header <span class=\"keyword\">from</span> upstream, <span class=\"attr\">client</span>: xx.xxx.xxx.xx, <span class=\"attr\">server</span>: shadow.com, <span class=\"attr\">request</span>: <span class=\"string\">\"POST /user/login HTTP/1.1\"</span>,</span><br><span class=\"line\">#排查了很久发现是退出登录以后再次请求没有清除session</span><br><span class=\"line\">#退出登录方法中调用:</span><br><span class=\"line\">req.session.destroy();</span><br></pre></td></tr></table></figure>\n<h5 id=\"express-process-env-NODE-ENV判断不起作用\"><a href=\"#express-process-env-NODE-ENV判断不起作用\" class=\"headerlink\" title=\"express process.env.NODE_ENV判断不起作用\"></a>express process.env.NODE_ENV判断不起作用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在启动的时候设置NODE_ENV</span><br><span class=\"line\"><span class=\"keyword\">set</span> NODE_ENV=development&amp;&amp; node index.js</span><br><span class=\"line\">需要注意的是:development后面不能跟空格，否则你去判断的时候会出现不起作用的情况</span><br></pre></td></tr></table></figure>\n<h5 id=\"multer文件上传\"><a href=\"#multer文件上传\" class=\"headerlink\" title=\"multer文件上传\"></a>multer文件上传</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman测试的时候key的值要跟upload.single(<span class=\"string\">'file'</span>) single中的一样</span><br><span class=\"line\"><span class=\"comment\">//服务器访问图片404--添加图片代理:</span></span><br><span class=\"line\">location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//localhost:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">#注意：放在location / &#123;&#125; 前面 配置完重启nginx</span><br></pre></td></tr></table></figure>"},{"title":"el-upload二次封装","date":"2021-09-27T14:08:52.000Z","_content":"elementUI el-upload二次封装\n<!-- more -->\n## 简单使用\n``` js\n<upload-part\n      :action=\"action\"\n      :headers=\"headers\"\n      listType=\"picture-card\"\n      :data=\"formData\"\n      name=\"uploadify\"\n      :removeFile=\"removeFile\"\n      :limit=\"limit\"\n      :uploadChange=\"uploadChange\"\n      :hideUpload=\"hideUpload\"\n    ></upload-part>\n    <script>\nimport uploadPart from \"@/components/common/upload.vue\";\nexport default {\n  components: {\n    uploadPart,\n  },\n  data() {\n    return {\n      action: \"\",//上传接口\n      headers:{\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      formData: {\n        formId:'xx',\n        docId:new Date().getTime()\n      },//上传额外参数\n      limit: 1,//上传文件数量限制\n      hideUpload: false,//超过限制隐藏上传按钮\n    };\n  },\n  methods: {\n    uploadChange(file, fileList) {\n      if (fileList.length >= this.limit) {\n        this.hideUpload = true;\n      }\n    },\n    removeFile(file, fileList) {\n       if (fileList.length < this.limit) {\n        this.hideUpload = false;\n      }\n    }\n  },\n};\n</script>\n```\n## 自定义上传\n``` js\n<upload-part\n      :action=\"action\"\n      listType=\"picture-card\"\n      name=\"uploadify\"\n      :removeFile=\"removeFile\"\n      :limit=\"limit\"\n      :httpRequest=\"diyUpload\"\n      :fileList=\"fileList\"\n      :uploadChange=\"uploadChange\"\n      :hideUpload=\"hideUpload\"\n    ></upload-part>\n<script>\n  import uploadPart from \"@/components/common/upload.vue\";\n  import api from 'xx/api'\n  export default {\n      components: {\n        uploadPart,\n      },\n      data() {\n        return {\n          action: \"\",\n          fileList:[],\n          limit: 2,\n          hideUpload: false,\n        };\n      },\n      methods: {\n        diyUpload(file) {\n          const form = new FormData();\n          form.append(\"uploadify\", file.file);\n          form.append(\"formId\", \"xx\");\n          form.append(\"docId\", new Date().getTime());\n          api.upload(form).then((res) => {\n            if (res.success) {\n              res.data.url = res.data.fullPath;//没有url需要赋值\n              this.fileList.push(res.data)\n            }\n          });\n        },\n        uploadChange(file, fileList) {\n        //自定义上传也可以放在此方法中 就不需要httpRequest了\n          if (fileList.length >= this.limit) {\n            this.hideUpload = true;\n          }\n        },\n        removeFile(file, fileList) {\n          //调用接口删除文件的同时需要把fileList里的也删除\n          if (fileList.length < this.limit) {\n            this.hideUpload = false;\n          }\n        },\n      },\n};\n</script>\n```\n## 使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)\n``` css\n/* 推荐，实现简单 */ \n.el-upload-list__item.is-ready, \n.el-upload-list__item.is-uploading { display: none !important; }\n```\n## 完整代码\n``` js\n<template>\n  <div>\n    <el-upload\n      :action=\"action\"\n      :headers=\"headers\"\n      :multiple=\"multiple\"\n      :data=\"data\"\n      :name=\"name\"\n      :with-credentials=\"withCredentials\"\n      :show-file-list=\"showFileList\"\n      :drag=\"drag\"\n      :accept=\"accept\"\n      :on-preview=\"handlePictureCardPreview\"\n      :on-remove=\"removeFile\"\n      :on-success=\"uploadSuccess\"\n      :on-error=\"uploadError\"\n      :on-progress=\"uploadProgress\"\n      :on-change=\"uploadChange\"\n      :before-upload=\"beforeUpload\"\n      :before-remove=\"beforeRemove\"\n      :list-type=\"listType\"\n      :auto-upload=\"autoUpload\"\n      :file-list=\"fileList\"\n      :http-request=\"httpRequest\"\n      :disabled=\"disabled\"\n      :limit=\"limit\"\n      :on-exceed=\"onExceed\"\n      :fileSize=\"fileSize\"\n      :class=\"{ 'icon-hide': hideUpload }\"\n    >\n      <slot>\n        <i class=\"el-icon-plus\"></i>\n      </slot>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    action: null,\n    headers: {\n      type: Object,\n      default: () => {},\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    data: null,\n    name: {\n      type: String,\n      default: \"file\",\n    },\n    withCredentials: {\n      type: Boolean,\n      default: false,\n    },\n    showFileList: {\n      type: Boolean,\n      default: true,\n    },\n    drag: {\n      type: Boolean,\n      default: false,\n    },\n    accept: null,\n    listType: null,\n    autoUpload: {\n      type: Boolean,\n      default: true,\n    },\n    fileList: {\n      type: Array,\n      default: () => [],\n    },\n    httpRequest: {\n      type: Function,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    limit: null,\n    uploadChange: null,\n    beforeRemove: null,\n    removeFile: null,\n    uploadSuccess: null,\n    uploadError: null,\n    uploadProgress: null,\n    onExceed: null,\n    hideUpload: {\n      type: Boolean,\n      default: false,\n    },\n    fileSize: {\n      type: Number,\n      default: 10,\n    },\n    fileType: {\n      type: String,\n      default: \"png|jpg|jpeg|gif\",\n    },\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      dialogImageUrl: \"\",\n    };\n  },\n  methods: {\n    beforeUpload(file) {\n      const fileName = file.name;\n      const ext = fileName\n        .substring(fileName.lastIndexOf(\".\") + 1)\n        .toLowerCase();\n      if (this.fileType) {\n        // 限制文件格式\n        if (this.fileType.indexOf(ext) < 0) {\n          this.$message.error(\"文件类型不合法，请上传\" + this.fileType);\n          return false;\n        }\n      }\n      if (this.fileSize) {\n        // 限制文件大小，单位为M\n        const size = file.size / 1024 / 1024;\n        if (size > this.fileSize) {\n          this.$message.error(\"文件大小限制为\" + this.fileSize + \"M\");\n          return false;\n        }\n      }\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ .icon-hide .el-upload {\n  display: none;\n}\n</style>\n```\n","source":"_posts/el-upload二次封装.md","raw":"---\ntitle: el-upload二次封装\ndate: 2021-09-27 22:08:52\ncategories:\n- Vue\ntags:\n- Vue\n---\nelementUI el-upload二次封装\n<!-- more -->\n## 简单使用\n``` js\n<upload-part\n      :action=\"action\"\n      :headers=\"headers\"\n      listType=\"picture-card\"\n      :data=\"formData\"\n      name=\"uploadify\"\n      :removeFile=\"removeFile\"\n      :limit=\"limit\"\n      :uploadChange=\"uploadChange\"\n      :hideUpload=\"hideUpload\"\n    ></upload-part>\n    <script>\nimport uploadPart from \"@/components/common/upload.vue\";\nexport default {\n  components: {\n    uploadPart,\n  },\n  data() {\n    return {\n      action: \"\",//上传接口\n      headers:{\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      formData: {\n        formId:'xx',\n        docId:new Date().getTime()\n      },//上传额外参数\n      limit: 1,//上传文件数量限制\n      hideUpload: false,//超过限制隐藏上传按钮\n    };\n  },\n  methods: {\n    uploadChange(file, fileList) {\n      if (fileList.length >= this.limit) {\n        this.hideUpload = true;\n      }\n    },\n    removeFile(file, fileList) {\n       if (fileList.length < this.limit) {\n        this.hideUpload = false;\n      }\n    }\n  },\n};\n</script>\n```\n## 自定义上传\n``` js\n<upload-part\n      :action=\"action\"\n      listType=\"picture-card\"\n      name=\"uploadify\"\n      :removeFile=\"removeFile\"\n      :limit=\"limit\"\n      :httpRequest=\"diyUpload\"\n      :fileList=\"fileList\"\n      :uploadChange=\"uploadChange\"\n      :hideUpload=\"hideUpload\"\n    ></upload-part>\n<script>\n  import uploadPart from \"@/components/common/upload.vue\";\n  import api from 'xx/api'\n  export default {\n      components: {\n        uploadPart,\n      },\n      data() {\n        return {\n          action: \"\",\n          fileList:[],\n          limit: 2,\n          hideUpload: false,\n        };\n      },\n      methods: {\n        diyUpload(file) {\n          const form = new FormData();\n          form.append(\"uploadify\", file.file);\n          form.append(\"formId\", \"xx\");\n          form.append(\"docId\", new Date().getTime());\n          api.upload(form).then((res) => {\n            if (res.success) {\n              res.data.url = res.data.fullPath;//没有url需要赋值\n              this.fileList.push(res.data)\n            }\n          });\n        },\n        uploadChange(file, fileList) {\n        //自定义上传也可以放在此方法中 就不需要httpRequest了\n          if (fileList.length >= this.limit) {\n            this.hideUpload = true;\n          }\n        },\n        removeFile(file, fileList) {\n          //调用接口删除文件的同时需要把fileList里的也删除\n          if (fileList.length < this.limit) {\n            this.hideUpload = false;\n          }\n        },\n      },\n};\n</script>\n```\n## 使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)\n``` css\n/* 推荐，实现简单 */ \n.el-upload-list__item.is-ready, \n.el-upload-list__item.is-uploading { display: none !important; }\n```\n## 完整代码\n``` js\n<template>\n  <div>\n    <el-upload\n      :action=\"action\"\n      :headers=\"headers\"\n      :multiple=\"multiple\"\n      :data=\"data\"\n      :name=\"name\"\n      :with-credentials=\"withCredentials\"\n      :show-file-list=\"showFileList\"\n      :drag=\"drag\"\n      :accept=\"accept\"\n      :on-preview=\"handlePictureCardPreview\"\n      :on-remove=\"removeFile\"\n      :on-success=\"uploadSuccess\"\n      :on-error=\"uploadError\"\n      :on-progress=\"uploadProgress\"\n      :on-change=\"uploadChange\"\n      :before-upload=\"beforeUpload\"\n      :before-remove=\"beforeRemove\"\n      :list-type=\"listType\"\n      :auto-upload=\"autoUpload\"\n      :file-list=\"fileList\"\n      :http-request=\"httpRequest\"\n      :disabled=\"disabled\"\n      :limit=\"limit\"\n      :on-exceed=\"onExceed\"\n      :fileSize=\"fileSize\"\n      :class=\"{ 'icon-hide': hideUpload }\"\n    >\n      <slot>\n        <i class=\"el-icon-plus\"></i>\n      </slot>\n    </el-upload>\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    action: null,\n    headers: {\n      type: Object,\n      default: () => {},\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    data: null,\n    name: {\n      type: String,\n      default: \"file\",\n    },\n    withCredentials: {\n      type: Boolean,\n      default: false,\n    },\n    showFileList: {\n      type: Boolean,\n      default: true,\n    },\n    drag: {\n      type: Boolean,\n      default: false,\n    },\n    accept: null,\n    listType: null,\n    autoUpload: {\n      type: Boolean,\n      default: true,\n    },\n    fileList: {\n      type: Array,\n      default: () => [],\n    },\n    httpRequest: {\n      type: Function,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    limit: null,\n    uploadChange: null,\n    beforeRemove: null,\n    removeFile: null,\n    uploadSuccess: null,\n    uploadError: null,\n    uploadProgress: null,\n    onExceed: null,\n    hideUpload: {\n      type: Boolean,\n      default: false,\n    },\n    fileSize: {\n      type: Number,\n      default: 10,\n    },\n    fileType: {\n      type: String,\n      default: \"png|jpg|jpeg|gif\",\n    },\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      dialogImageUrl: \"\",\n    };\n  },\n  methods: {\n    beforeUpload(file) {\n      const fileName = file.name;\n      const ext = fileName\n        .substring(fileName.lastIndexOf(\".\") + 1)\n        .toLowerCase();\n      if (this.fileType) {\n        // 限制文件格式\n        if (this.fileType.indexOf(ext) < 0) {\n          this.$message.error(\"文件类型不合法，请上传\" + this.fileType);\n          return false;\n        }\n      }\n      if (this.fileSize) {\n        // 限制文件大小，单位为M\n        const size = file.size / 1024 / 1024;\n        if (size > this.fileSize) {\n          this.$message.error(\"文件大小限制为\" + this.fileSize + \"M\");\n          return false;\n        }\n      }\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ .icon-hide .el-upload {\n  display: none;\n}\n</style>\n```\n","slug":"el-upload二次封装","published":1,"updated":"2021-09-27T14:13:35.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sn000mgw7gayblbkyt","content":"<p>elementUI el-upload二次封装<br><a id=\"more\"></a></p>\n<h2 id=\"简单使用\"><a href=\"#简单使用\" class=\"headerlink\" title=\"简单使用\"></a>简单使用</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;upload-part</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      :headers=<span class=\"string\">\"headers\"</span></span><br><span class=\"line\">      listType=<span class=\"string\">\"picture-card\"</span></span><br><span class=\"line\">      :data=<span class=\"string\">\"formData\"</span></span><br><span class=\"line\">      name=<span class=\"string\">\"uploadify\"</span></span><br><span class=\"line\">      :removeFile=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :uploadChange=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :hideUpload=<span class=\"string\">\"hideUpload\"</span></span><br><span class=\"line\">    &gt;&lt;<span class=\"regexp\">/upload-part&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import uploadPart from \"@/</span>components/common/upload.vue<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    uploadPart,</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      action: \"</span><span class=\"string\">\",//上传接口</span></span><br><span class=\"line\"><span class=\"string\">      headers:&#123;</span></span><br><span class=\"line\"><span class=\"string\">        'Content-Type': 'application/x-www-form-urlencoded'</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      formData: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        formId:'xx',</span></span><br><span class=\"line\"><span class=\"string\">        docId:new Date().getTime()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,//上传额外参数</span></span><br><span class=\"line\"><span class=\"string\">      limit: 1,//上传文件数量限制</span></span><br><span class=\"line\"><span class=\"string\">      hideUpload: false,//超过限制隐藏上传按钮</span></span><br><span class=\"line\"><span class=\"string\">    &#125;;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    uploadChange(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      if (fileList.length &gt;= this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.hideUpload = true;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    removeFile(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">       if (fileList.length &lt; this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.hideUpload = false;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">&#125;;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义上传\"><a href=\"#自定义上传\" class=\"headerlink\" title=\"自定义上传\"></a>自定义上传</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;upload-part</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      listType=<span class=\"string\">\"picture-card\"</span></span><br><span class=\"line\">      name=<span class=\"string\">\"uploadify\"</span></span><br><span class=\"line\">      :removeFile=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :httpRequest=<span class=\"string\">\"diyUpload\"</span></span><br><span class=\"line\">      :fileList=<span class=\"string\">\"fileList\"</span></span><br><span class=\"line\">      :uploadChange=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :hideUpload=<span class=\"string\">\"hideUpload\"</span></span><br><span class=\"line\">    &gt;&lt;<span class=\"regexp\">/upload-part&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import uploadPart from \"@/</span>components/common/upload.vue<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">  import api from 'xx/api'</span></span><br><span class=\"line\"><span class=\"string\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">      components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        uploadPart,</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return &#123;</span></span><br><span class=\"line\"><span class=\"string\">          action: \"</span><span class=\"string\">\",</span></span><br><span class=\"line\"><span class=\"string\">          fileList:[],</span></span><br><span class=\"line\"><span class=\"string\">          limit: 2,</span></span><br><span class=\"line\"><span class=\"string\">          hideUpload: false,</span></span><br><span class=\"line\"><span class=\"string\">        &#125;;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        diyUpload(file) &#123;</span></span><br><span class=\"line\"><span class=\"string\">          const form = new FormData();</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>uploadify<span class=\"string\">\", file.file);</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>formId<span class=\"string\">\", \"</span>xx<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>docId<span class=\"string\">\", new Date().getTime());</span></span><br><span class=\"line\"><span class=\"string\">          api.upload(form).then((res) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">            if (res.success) &#123;</span></span><br><span class=\"line\"><span class=\"string\">              res.data.url = res.data.fullPath;//没有url需要赋值</span></span><br><span class=\"line\"><span class=\"string\">              this.fileList.push(res.data)</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;);</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        uploadChange(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //自定义上传也可以放在此方法中 就不需要httpRequest了</span></span><br><span class=\"line\"><span class=\"string\">          if (fileList.length &gt;= this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            this.hideUpload = true;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        removeFile(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">          //调用接口删除文件的同时需要把fileList里的也删除</span></span><br><span class=\"line\"><span class=\"string\">          if (fileList.length &lt; this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            this.hideUpload = false;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">&#125;;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用element-上传组件时界面抖动-百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理\"><a href=\"#使用element-上传组件时界面抖动-百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理\" class=\"headerlink\" title=\"使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)\"></a>使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 推荐，实现简单 */</span> </span><br><span class=\"line\"><span class=\"selector-class\">.el-upload-list__item</span><span class=\"selector-class\">.is-ready</span>, </span><br><span class=\"line\"><span class=\"selector-class\">.el-upload-list__item</span><span class=\"selector-class\">.is-uploading</span> &#123; <span class=\"attribute\">display</span>: none <span class=\"meta\">!important</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;el-upload</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      :headers=<span class=\"string\">\"headers\"</span></span><br><span class=\"line\">      :multiple=<span class=\"string\">\"multiple\"</span></span><br><span class=\"line\">      :data=<span class=\"string\">\"data\"</span></span><br><span class=\"line\">      :name=<span class=\"string\">\"name\"</span></span><br><span class=\"line\">      :<span class=\"keyword\">with</span>-credentials=<span class=\"string\">\"withCredentials\"</span></span><br><span class=\"line\">      :show-file-list=<span class=\"string\">\"showFileList\"</span></span><br><span class=\"line\">      :drag=<span class=\"string\">\"drag\"</span></span><br><span class=\"line\">      :accept=<span class=\"string\">\"accept\"</span></span><br><span class=\"line\">      :on-preview=<span class=\"string\">\"handlePictureCardPreview\"</span></span><br><span class=\"line\">      :on-remove=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :on-success=<span class=\"string\">\"uploadSuccess\"</span></span><br><span class=\"line\">      :on-error=<span class=\"string\">\"uploadError\"</span></span><br><span class=\"line\">      :on-progress=<span class=\"string\">\"uploadProgress\"</span></span><br><span class=\"line\">      :on-change=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :before-upload=<span class=\"string\">\"beforeUpload\"</span></span><br><span class=\"line\">      :before-remove=<span class=\"string\">\"beforeRemove\"</span></span><br><span class=\"line\">      :list-type=<span class=\"string\">\"listType\"</span></span><br><span class=\"line\">      :auto-upload=<span class=\"string\">\"autoUpload\"</span></span><br><span class=\"line\">      :file-list=<span class=\"string\">\"fileList\"</span></span><br><span class=\"line\">      :http-request=<span class=\"string\">\"httpRequest\"</span></span><br><span class=\"line\">      :disabled=<span class=\"string\">\"disabled\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :on-exceed=<span class=\"string\">\"onExceed\"</span></span><br><span class=\"line\">      :fileSize=<span class=\"string\">\"fileSize\"</span></span><br><span class=\"line\">      :<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"&#123; 'icon-hide': hideUpload &#125;\"</span></span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;slot&gt;</span><br><span class=\"line\">        &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"el-icon-plus\"</span>&gt;&lt;<span class=\"regexp\">/i&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>slot&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/el-upload&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;el-dialog :visible.sync=\"dialogVisible\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/el-dialog&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  props: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    action: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    headers: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Object,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: () =&gt; &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    multiple: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    data: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    name: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: \"file\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    withCredentials: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    showFileList: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: true,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    drag: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    accept: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    listType: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    autoUpload: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: true,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileList: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Array,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: () =&gt; [],</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    httpRequest: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Function,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    disabled: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    limit: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadChange: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    beforeRemove: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    removeFile: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadSuccess: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadError: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadProgress: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    onExceed: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    hideUpload: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileSize: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Number,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileType: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: \"png|jpg|jpeg|gif\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dialogVisible: false,</span></span><br><span class=\"line\"><span class=\"regexp\">      dialogImageUrl: \"\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    beforeUpload(file) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      const fileName = file.name;</span></span><br><span class=\"line\"><span class=\"regexp\">      const ext = fileName</span></span><br><span class=\"line\"><span class=\"regexp\">        .substring(fileName.lastIndexOf(\".\") + 1)</span></span><br><span class=\"line\"><span class=\"regexp\">        .toLowerCase();</span></span><br><span class=\"line\"><span class=\"regexp\">      if (this.fileType) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/ 限制文件格式</span></span><br><span class=\"line\"><span class=\"regexp\">        if (this.fileType.indexOf(ext) &lt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          this.$message.error(\"文件类型不合法，请上传\" + this.fileType);</span></span><br><span class=\"line\"><span class=\"regexp\">          return false;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      if (this.fileSize) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/ 限制文件大小，单位为M</span></span><br><span class=\"line\"><span class=\"regexp\">        const size = file.size /</span> <span class=\"number\">1024</span> / <span class=\"number\">1024</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (size &gt; <span class=\"keyword\">this</span>.fileSize) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$message.error(<span class=\"string\">\"文件大小限制为\"</span> + <span class=\"keyword\">this</span>.fileSize + <span class=\"string\">\"M\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handlePictureCardPreview(file) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dialogImageUrl = file.url;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dialogVisible = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style lang=\"less\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span>deep/ .icon-hide .el-upload &#123;</span><br><span class=\"line\">  display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/style&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>elementUI el-upload二次封装<br>","more":"</p>\n<h2 id=\"简单使用\"><a href=\"#简单使用\" class=\"headerlink\" title=\"简单使用\"></a>简单使用</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;upload-part</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      :headers=<span class=\"string\">\"headers\"</span></span><br><span class=\"line\">      listType=<span class=\"string\">\"picture-card\"</span></span><br><span class=\"line\">      :data=<span class=\"string\">\"formData\"</span></span><br><span class=\"line\">      name=<span class=\"string\">\"uploadify\"</span></span><br><span class=\"line\">      :removeFile=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :uploadChange=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :hideUpload=<span class=\"string\">\"hideUpload\"</span></span><br><span class=\"line\">    &gt;&lt;<span class=\"regexp\">/upload-part&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">import uploadPart from \"@/</span>components/common/upload.vue<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    uploadPart,</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      action: \"</span><span class=\"string\">\",//上传接口</span></span><br><span class=\"line\"><span class=\"string\">      headers:&#123;</span></span><br><span class=\"line\"><span class=\"string\">        'Content-Type': 'application/x-www-form-urlencoded'</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      formData: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        formId:'xx',</span></span><br><span class=\"line\"><span class=\"string\">        docId:new Date().getTime()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,//上传额外参数</span></span><br><span class=\"line\"><span class=\"string\">      limit: 1,//上传文件数量限制</span></span><br><span class=\"line\"><span class=\"string\">      hideUpload: false,//超过限制隐藏上传按钮</span></span><br><span class=\"line\"><span class=\"string\">    &#125;;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    uploadChange(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">      if (fileList.length &gt;= this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.hideUpload = true;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    removeFile(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">       if (fileList.length &lt; this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.hideUpload = false;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">&#125;;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义上传\"><a href=\"#自定义上传\" class=\"headerlink\" title=\"自定义上传\"></a>自定义上传</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;upload-part</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      listType=<span class=\"string\">\"picture-card\"</span></span><br><span class=\"line\">      name=<span class=\"string\">\"uploadify\"</span></span><br><span class=\"line\">      :removeFile=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :httpRequest=<span class=\"string\">\"diyUpload\"</span></span><br><span class=\"line\">      :fileList=<span class=\"string\">\"fileList\"</span></span><br><span class=\"line\">      :uploadChange=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :hideUpload=<span class=\"string\">\"hideUpload\"</span></span><br><span class=\"line\">    &gt;&lt;<span class=\"regexp\">/upload-part&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  import uploadPart from \"@/</span>components/common/upload.vue<span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">  import api from 'xx/api'</span></span><br><span class=\"line\"><span class=\"string\">  export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">      components: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        uploadPart,</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        return &#123;</span></span><br><span class=\"line\"><span class=\"string\">          action: \"</span><span class=\"string\">\",</span></span><br><span class=\"line\"><span class=\"string\">          fileList:[],</span></span><br><span class=\"line\"><span class=\"string\">          limit: 2,</span></span><br><span class=\"line\"><span class=\"string\">          hideUpload: false,</span></span><br><span class=\"line\"><span class=\"string\">        &#125;;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        diyUpload(file) &#123;</span></span><br><span class=\"line\"><span class=\"string\">          const form = new FormData();</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>uploadify<span class=\"string\">\", file.file);</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>formId<span class=\"string\">\", \"</span>xx<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">          form.append(\"</span>docId<span class=\"string\">\", new Date().getTime());</span></span><br><span class=\"line\"><span class=\"string\">          api.upload(form).then((res) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">            if (res.success) &#123;</span></span><br><span class=\"line\"><span class=\"string\">              res.data.url = res.data.fullPath;//没有url需要赋值</span></span><br><span class=\"line\"><span class=\"string\">              this.fileList.push(res.data)</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;);</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        uploadChange(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        //自定义上传也可以放在此方法中 就不需要httpRequest了</span></span><br><span class=\"line\"><span class=\"string\">          if (fileList.length &gt;= this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            this.hideUpload = true;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">        removeFile(file, fileList) &#123;</span></span><br><span class=\"line\"><span class=\"string\">          //调用接口删除文件的同时需要把fileList里的也删除</span></span><br><span class=\"line\"><span class=\"string\">          if (fileList.length &lt; this.limit) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            this.hideUpload = false;</span></span><br><span class=\"line\"><span class=\"string\">          &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">&#125;;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用element-上传组件时界面抖动-百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理\"><a href=\"#使用element-上传组件时界面抖动-百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理\" class=\"headerlink\" title=\"使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)\"></a>使用element 上传组件时界面抖动(百度查到是push导致的，但是我直接赋值好像并未解决，所以推荐css处理)</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 推荐，实现简单 */</span> </span><br><span class=\"line\"><span class=\"selector-class\">.el-upload-list__item</span><span class=\"selector-class\">.is-ready</span>, </span><br><span class=\"line\"><span class=\"selector-class\">.el-upload-list__item</span><span class=\"selector-class\">.is-uploading</span> &#123; <span class=\"attribute\">display</span>: none <span class=\"meta\">!important</span>; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;el-upload</span><br><span class=\"line\">      :action=<span class=\"string\">\"action\"</span></span><br><span class=\"line\">      :headers=<span class=\"string\">\"headers\"</span></span><br><span class=\"line\">      :multiple=<span class=\"string\">\"multiple\"</span></span><br><span class=\"line\">      :data=<span class=\"string\">\"data\"</span></span><br><span class=\"line\">      :name=<span class=\"string\">\"name\"</span></span><br><span class=\"line\">      :<span class=\"keyword\">with</span>-credentials=<span class=\"string\">\"withCredentials\"</span></span><br><span class=\"line\">      :show-file-list=<span class=\"string\">\"showFileList\"</span></span><br><span class=\"line\">      :drag=<span class=\"string\">\"drag\"</span></span><br><span class=\"line\">      :accept=<span class=\"string\">\"accept\"</span></span><br><span class=\"line\">      :on-preview=<span class=\"string\">\"handlePictureCardPreview\"</span></span><br><span class=\"line\">      :on-remove=<span class=\"string\">\"removeFile\"</span></span><br><span class=\"line\">      :on-success=<span class=\"string\">\"uploadSuccess\"</span></span><br><span class=\"line\">      :on-error=<span class=\"string\">\"uploadError\"</span></span><br><span class=\"line\">      :on-progress=<span class=\"string\">\"uploadProgress\"</span></span><br><span class=\"line\">      :on-change=<span class=\"string\">\"uploadChange\"</span></span><br><span class=\"line\">      :before-upload=<span class=\"string\">\"beforeUpload\"</span></span><br><span class=\"line\">      :before-remove=<span class=\"string\">\"beforeRemove\"</span></span><br><span class=\"line\">      :list-type=<span class=\"string\">\"listType\"</span></span><br><span class=\"line\">      :auto-upload=<span class=\"string\">\"autoUpload\"</span></span><br><span class=\"line\">      :file-list=<span class=\"string\">\"fileList\"</span></span><br><span class=\"line\">      :http-request=<span class=\"string\">\"httpRequest\"</span></span><br><span class=\"line\">      :disabled=<span class=\"string\">\"disabled\"</span></span><br><span class=\"line\">      :limit=<span class=\"string\">\"limit\"</span></span><br><span class=\"line\">      :on-exceed=<span class=\"string\">\"onExceed\"</span></span><br><span class=\"line\">      :fileSize=<span class=\"string\">\"fileSize\"</span></span><br><span class=\"line\">      :<span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"&#123; 'icon-hide': hideUpload &#125;\"</span></span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;slot&gt;</span><br><span class=\"line\">        &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"el-icon-plus\"</span>&gt;&lt;<span class=\"regexp\">/i&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>slot&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/el-upload&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;el-dialog :visible.sync=\"dialogVisible\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/el-dialog&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">export default &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  props: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    action: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    headers: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Object,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: () =&gt; &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    multiple: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    data: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    name: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: \"file\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    withCredentials: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    showFileList: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: true,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    drag: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    accept: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    listType: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    autoUpload: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: true,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileList: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Array,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: () =&gt; [],</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    httpRequest: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Function,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    disabled: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    limit: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadChange: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    beforeRemove: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    removeFile: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadSuccess: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadError: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    uploadProgress: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    onExceed: null,</span></span><br><span class=\"line\"><span class=\"regexp\">    hideUpload: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Boolean,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: false,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileSize: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: Number,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    fileType: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      type: String,</span></span><br><span class=\"line\"><span class=\"regexp\">      default: \"png|jpg|jpeg|gif\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dialogVisible: false,</span></span><br><span class=\"line\"><span class=\"regexp\">      dialogImageUrl: \"\",</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    beforeUpload(file) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      const fileName = file.name;</span></span><br><span class=\"line\"><span class=\"regexp\">      const ext = fileName</span></span><br><span class=\"line\"><span class=\"regexp\">        .substring(fileName.lastIndexOf(\".\") + 1)</span></span><br><span class=\"line\"><span class=\"regexp\">        .toLowerCase();</span></span><br><span class=\"line\"><span class=\"regexp\">      if (this.fileType) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/ 限制文件格式</span></span><br><span class=\"line\"><span class=\"regexp\">        if (this.fileType.indexOf(ext) &lt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          this.$message.error(\"文件类型不合法，请上传\" + this.fileType);</span></span><br><span class=\"line\"><span class=\"regexp\">          return false;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      if (this.fileSize) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span><span class=\"regexp\">/ 限制文件大小，单位为M</span></span><br><span class=\"line\"><span class=\"regexp\">        const size = file.size /</span> <span class=\"number\">1024</span> / <span class=\"number\">1024</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (size &gt; <span class=\"keyword\">this</span>.fileSize) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.$message.error(<span class=\"string\">\"文件大小限制为\"</span> + <span class=\"keyword\">this</span>.fileSize + <span class=\"string\">\"M\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handlePictureCardPreview(file) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dialogImageUrl = file.url;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dialogVisible = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style lang=\"less\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span>deep/ .icon-hide .el-upload &#123;</span><br><span class=\"line\">  display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/style&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2018-01-08T06:22:23.000Z","_content":"测试文章。。可以不看\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2018-01-08 14:22:23\n---\n测试文章。。可以不看\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2019-01-05T03:38:35.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sr000rgw7gwucn5e5r","content":"<p>测试文章。。可以不看<br><a id=\"more\"></a><br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>测试文章。。可以不看<br>","more":"<br>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"js定时器执行一次和重复执行","date":"2020-06-01T02:50:40.000Z","_content":"js定时器执行一次和重复执行\n<!-- more -->\n##### js 定时器 执行一次和重复执行\n1.执行一次(延时定时器)\n```JavaScript\nvar t1 = window.setTimeout(function() {\n\tconsole.log(‘1秒钟之后执行了’)\n\twindow.clearTimeout(t1) // 去除定时器\n},1000)\n```\n2.重复执行(间歇定时器)\n```JavaScript\nvar t2 = window.setInterval(function() {\n\tconsole.log(‘每隔1秒钟执行一次’)\n\twindow.clearInterval(t2) // 去除定时器\n},1000)\n```\n**注意：单纯的使用setInterval会导致页面卡死，其原因与JS引擎线程有关，用通俗话说就是setInterval不会清除定时器队列，每重复执行1次都会导致定时器叠加，最终卡死你的网页。但是setTimeout是自带清除定时器的**\n```JavaScript\nsetInterval(function() {\n\tsetTimeout(function() {\n\t\tconsole.log(‘1秒钟之后执行了’)\n\t},0)\n},1000)\n```\n**setInterval必须放在外层（在内层会导致页面卡顿直到崩溃），内层配合setTimeout，即可无限次调用**","source":"_posts/js定时器执行一次和重复执行.md","raw":"---\ntitle: js定时器执行一次和重复执行\ndate: 2020-06-01 10:50:40\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\njs定时器执行一次和重复执行\n<!-- more -->\n##### js 定时器 执行一次和重复执行\n1.执行一次(延时定时器)\n```JavaScript\nvar t1 = window.setTimeout(function() {\n\tconsole.log(‘1秒钟之后执行了’)\n\twindow.clearTimeout(t1) // 去除定时器\n},1000)\n```\n2.重复执行(间歇定时器)\n```JavaScript\nvar t2 = window.setInterval(function() {\n\tconsole.log(‘每隔1秒钟执行一次’)\n\twindow.clearInterval(t2) // 去除定时器\n},1000)\n```\n**注意：单纯的使用setInterval会导致页面卡死，其原因与JS引擎线程有关，用通俗话说就是setInterval不会清除定时器队列，每重复执行1次都会导致定时器叠加，最终卡死你的网页。但是setTimeout是自带清除定时器的**\n```JavaScript\nsetInterval(function() {\n\tsetTimeout(function() {\n\t\tconsole.log(‘1秒钟之后执行了’)\n\t},0)\n},1000)\n```\n**setInterval必须放在外层（在内层会导致页面卡顿直到崩溃），内层配合setTimeout，即可无限次调用**","slug":"js定时器执行一次和重复执行","published":1,"updated":"2020-06-01T12:02:39.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2st000ugw7gwixio91l","content":"<p>js定时器执行一次和重复执行<br><a id=\"more\"></a></p>\n<h5 id=\"js-定时器-执行一次和重复执行\"><a href=\"#js-定时器-执行一次和重复执行\" class=\"headerlink\" title=\"js 定时器 执行一次和重复执行\"></a>js 定时器 执行一次和重复执行</h5><p>1.执行一次(延时定时器)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t1 = <span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(‘<span class=\"number\">1</span>秒钟之后执行了’)</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.clearTimeout(t1) <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p>2.重复执行(间歇定时器)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t2 = <span class=\"built_in\">window</span>.setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(‘每隔<span class=\"number\">1</span>秒钟执行一次’)</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.clearInterval(t2) <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意：单纯的使用setInterval会导致页面卡死，其原因与JS引擎线程有关，用通俗话说就是setInterval不会清除定时器队列，每重复执行1次都会导致定时器叠加，最终卡死你的网页。但是setTimeout是自带清除定时器的</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(‘<span class=\"number\">1</span>秒钟之后执行了’)</span><br><span class=\"line\">\t&#125;,<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>setInterval必须放在外层（在内层会导致页面卡顿直到崩溃），内层配合setTimeout，即可无限次调用</strong></p>\n","site":{"data":{}},"excerpt":"<p>js定时器执行一次和重复执行<br>","more":"</p>\n<h5 id=\"js-定时器-执行一次和重复执行\"><a href=\"#js-定时器-执行一次和重复执行\" class=\"headerlink\" title=\"js 定时器 执行一次和重复执行\"></a>js 定时器 执行一次和重复执行</h5><p>1.执行一次(延时定时器)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t1 = <span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(‘<span class=\"number\">1</span>秒钟之后执行了’)</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.clearTimeout(t1) <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p>2.重复执行(间歇定时器)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t2 = <span class=\"built_in\">window</span>.setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(‘每隔<span class=\"number\">1</span>秒钟执行一次’)</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.clearInterval(t2) <span class=\"comment\">// 去除定时器</span></span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意：单纯的使用setInterval会导致页面卡死，其原因与JS引擎线程有关，用通俗话说就是setInterval不会清除定时器队列，每重复执行1次都会导致定时器叠加，最终卡死你的网页。但是setTimeout是自带清除定时器的</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(‘<span class=\"number\">1</span>秒钟之后执行了’)</span><br><span class=\"line\">\t&#125;,<span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;,<span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>setInterval必须放在外层（在内层会导致页面卡顿直到崩溃），内层配合setTimeout，即可无限次调用</strong></p>"},{"title":"git操作遇到的问题","date":"2018-05-08T10:46:34.000Z","_content":"##### 比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\n`解决办法：git config core.ignorecase false //设置大小写敏感`\n`恢复设置:git config core.ignorecase true`\n##### 创建.gitignore文件--git bash执行\n`touch .gitignore`\n##### git pull 报错--refusing to merge unrelated histories\n```\ngit pull --allow-unrelated-histories\n//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可\n```","source":"_posts/git操作遇到的问题.md","raw":"---\ntitle: git操作遇到的问题\ndate: 2018-05-08 18:46:34\ncategories:\n- git\ntags:\n- git\n---\n##### 比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\n`解决办法：git config core.ignorecase false //设置大小写敏感`\n`恢复设置:git config core.ignorecase true`\n##### 创建.gitignore文件--git bash执行\n`touch .gitignore`\n##### git pull 报错--refusing to merge unrelated histories\n```\ngit pull --allow-unrelated-histories\n//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可\n```","slug":"git操作遇到的问题","published":1,"updated":"2019-01-05T03:38:35.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sw000zgw7g1d95vkp9","content":"<h5 id=\"比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"><a href=\"#比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\" class=\"headerlink\" title=\"比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"></a>比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件</h5><p><code>解决办法：git config core.ignorecase false //设置大小写敏感</code><br><code>恢复设置:git config core.ignorecase true</code></p>\n<h5 id=\"创建-gitignore文件–git-bash执行\"><a href=\"#创建-gitignore文件–git-bash执行\" class=\"headerlink\" title=\"创建.gitignore文件–git bash执行\"></a>创建.gitignore文件–git bash执行</h5><p><code>touch .gitignore</code></p>\n<h5 id=\"git-pull-报错–refusing-to-merge-unrelated-histories\"><a href=\"#git-pull-报错–refusing-to-merge-unrelated-histories\" class=\"headerlink\" title=\"git pull 报错–refusing to merge unrelated histories\"></a>git pull 报错–refusing to merge unrelated histories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --allow-unrelated-histories</span><br><span class=\"line\">//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"><a href=\"#比如代码提交的时候-文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如-icon-改成-Icon）-你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\" class=\"headerlink\" title=\"比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件\"></a>比如代码提交的时候 文件内容什么的都没有发生改变，但是改变了其中一个文件夹的名字（只是大小写的变化，如 icon 改成 Icon） 你再去提交的时候会发现提示：在上次提交后没有添加或更改过文件</h5><p><code>解决办法：git config core.ignorecase false //设置大小写敏感</code><br><code>恢复设置:git config core.ignorecase true</code></p>\n<h5 id=\"创建-gitignore文件–git-bash执行\"><a href=\"#创建-gitignore文件–git-bash执行\" class=\"headerlink\" title=\"创建.gitignore文件–git bash执行\"></a>创建.gitignore文件–git bash执行</h5><p><code>touch .gitignore</code></p>\n<h5 id=\"git-pull-报错–refusing-to-merge-unrelated-histories\"><a href=\"#git-pull-报错–refusing-to-merge-unrelated-histories\" class=\"headerlink\" title=\"git pull 报错–refusing to merge unrelated histories\"></a>git pull 报错–refusing to merge unrelated histories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --allow-unrelated-histories</span><br><span class=\"line\">//输入完后，会进入vim，这时你就只需输入你这次commit的补充信息 然后esc退出输入或者:q退出即可</span><br></pre></td></tr></table></figure>"},{"title":"git操作--github","date":"2018-01-11T03:29:05.000Z","_content":"git添加ssh\n<!-- more -->\n##### github设置项目默认语言类型展示\n```javascript\n*.js linguist-language=JavaScript\n*.css linguist-language=JavaScript\n*.html linguist-language=JavaScript\n```\n*末尾的JavaScript可以更换你要展示得语言*  \n###### git添加ssh\n* 1.首先需要检查你电脑是否已经有 SSH key    \n运行 git Bash 客户端，输入如下代码：\n```\n$ cd ~/.ssh\n$ ls\n```\n这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。\n* 2.创建一个 SSH key \n```\n$ ssh-keygen -t rsa -C \"your_email@qq.com\"\n```\n代码参数含义：\n\n-t 指定密钥类型，默认是 rsa ，可以省略。\n-C 设置注释文字，比如邮箱。\n-f 指定密钥文件存储文件名。\n>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘>用户>自己的用户名>.ssh]目录下已经生成好了。\n\n<br/>\n* 3.添加你的 SSH key 到 github上面去\n首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制\n\n**前端小伙伴学习群：163958730**","source":"_posts/git操作-github.md","raw":"---\ntitle: git操作--github\ndate: 2018-01-11 11:29:05\ncategories:\n- git\ntags:\n- git\n---\ngit添加ssh\n<!-- more -->\n##### github设置项目默认语言类型展示\n```javascript\n*.js linguist-language=JavaScript\n*.css linguist-language=JavaScript\n*.html linguist-language=JavaScript\n```\n*末尾的JavaScript可以更换你要展示得语言*  \n###### git添加ssh\n* 1.首先需要检查你电脑是否已经有 SSH key    \n运行 git Bash 客户端，输入如下代码：\n```\n$ cd ~/.ssh\n$ ls\n```\n这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。\n* 2.创建一个 SSH key \n```\n$ ssh-keygen -t rsa -C \"your_email@qq.com\"\n```\n代码参数含义：\n\n-t 指定密钥类型，默认是 rsa ，可以省略。\n-C 设置注释文字，比如邮箱。\n-f 指定密钥文件存储文件名。\n>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘>用户>自己的用户名>.ssh]目录下已经生成好了。\n\n<br/>\n* 3.添加你的 SSH key 到 github上面去\n首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制\n\n**前端小伙伴学习群：163958730**","slug":"git操作-github","published":1,"updated":"2020-10-23T12:47:35.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2sy0012gw7gy82n8fy0","content":"<p>git添加ssh<br><a id=\"more\"></a></p>\n<h5 id=\"github设置项目默认语言类型展示\"><a href=\"#github设置项目默认语言类型展示\" class=\"headerlink\" title=\"github设置项目默认语言类型展示\"></a>github设置项目默认语言类型展示</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js linguist-language=JavaScript</span><br><span class=\"line\">*.css linguist-language=JavaScript</span><br><span class=\"line\">*.html linguist-language=JavaScript</span><br></pre></td></tr></table></figure>\n<p><em>末尾的JavaScript可以更换你要展示得语言</em>  </p>\n<h6 id=\"git添加ssh\"><a href=\"#git添加ssh\" class=\"headerlink\" title=\"git添加ssh\"></a>git添加ssh</h6><ul>\n<li>1.首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh</span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。</p>\n<ul>\n<li>2.创建一个 SSH key <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@qq.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>代码参数含义：</p>\n<p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p>\n<blockquote>\n<p>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘&gt;用户&gt;自己的用户名&gt;.ssh]目录下已经生成好了。</p>\n</blockquote>\n<p><br></p>\n<ul>\n<li>3.添加你的 SSH key 到 github上面去<br>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制</li>\n</ul>\n<p><strong>前端小伙伴学习群：163958730</strong></p>\n","site":{"data":{}},"excerpt":"<p>git添加ssh<br>","more":"</p>\n<h5 id=\"github设置项目默认语言类型展示\"><a href=\"#github设置项目默认语言类型展示\" class=\"headerlink\" title=\"github设置项目默认语言类型展示\"></a>github设置项目默认语言类型展示</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.js linguist-language=JavaScript</span><br><span class=\"line\">*.css linguist-language=JavaScript</span><br><span class=\"line\">*.html linguist-language=JavaScript</span><br></pre></td></tr></table></figure>\n<p><em>末尾的JavaScript可以更换你要展示得语言</em>  </p>\n<h6 id=\"git添加ssh\"><a href=\"#git添加ssh\" class=\"headerlink\" title=\"git添加ssh\"></a>git添加ssh</h6><ul>\n<li>1.首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh</span><br><span class=\"line\">$ ls</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。</p>\n<ul>\n<li>2.创建一个 SSH key <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@qq.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>代码参数含义：</p>\n<p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p>\n<blockquote>\n<p>输入完毕后程序同时要求输入一个密语字符串(passphrase)，空表示没有密语。接着会让输入2次口令(password)，空表示没有口令。3次回车即可完成当前步骤，此时[c盘&gt;用户&gt;自己的用户名&gt;.ssh]目录下已经生成好了。</p>\n</blockquote>\n<p><br></p>\n<ul>\n<li>3.添加你的 SSH key 到 github上面去<br>首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制</li>\n</ul>\n<p><strong>前端小伙伴学习群：163958730</strong></p>"},{"title":"js踩坑IE8","date":"2018-04-12T02:55:15.000Z","_content":"JavaScript在ie8的兼容处理(如forEach、indexOf..)\n<!-- more -->\n##### 记一次项目中遇到得坑吧。。\n1.IE8不兼容forEach--作为一个遍历神器 不能用怎么行  0.0\n```JavaScript\n//解决办法 在js文件中添加下面的代码：\nif ( !Array.prototype.forEach ) {  \n  Array.prototype.forEach = function forEach( callback, thisArg ) {  \n    var T, k;  \n    if ( this == null ) {  \n      throw new TypeError( \"this is null or not defined\" );  \n    }  \n    var O = Object(this);  \n    var len = O.length >>> 0;   \n    if ( typeof callback !== \"function\" ) {  \n      throw new TypeError( callback + \" is not a function\" );  \n    }  \n    if ( arguments.length > 1 ) {  \n      T = thisArg;  \n    }  \n    k = 0;  \n    while( k < len ) {  \n      var kValue;  \n      if ( k in O ) {  \n        kValue = O[ k ];  \n        callback.call( T, kValue, k, O );  \n      }  \n      k++;  \n    }  \n  };  \n}  \n//要加在调用forEach之前\n```\n2.IE8不兼容indexOf\n```JavaScript\nif (!Array.prototype.indexOf){  \n        Array.prototype.indexOf = function(elt /*, from*/){  \n        var len = this.length >>> 0;  \n        var from = Number(arguments[1]) || 0;  \n        from = (from < 0)  \n             ? Math.ceil(from)  \n             : Math.floor(from);  \n        if (from < 0)  \n          from += len;  \n        for (; from < len; from++)  \n        {  \n          if (from in this &&  \n              this[from] === elt)  \n            return from;  \n        }  \n        return -1;  \n      };  \n    }  \n//同样加在调用indexOf之前\n```","source":"_posts/js踩坑IE8.md","raw":"---\ntitle: js踩坑IE8\ndate: 2018-04-12 10:55:15\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript在ie8的兼容处理(如forEach、indexOf..)\n<!-- more -->\n##### 记一次项目中遇到得坑吧。。\n1.IE8不兼容forEach--作为一个遍历神器 不能用怎么行  0.0\n```JavaScript\n//解决办法 在js文件中添加下面的代码：\nif ( !Array.prototype.forEach ) {  \n  Array.prototype.forEach = function forEach( callback, thisArg ) {  \n    var T, k;  \n    if ( this == null ) {  \n      throw new TypeError( \"this is null or not defined\" );  \n    }  \n    var O = Object(this);  \n    var len = O.length >>> 0;   \n    if ( typeof callback !== \"function\" ) {  \n      throw new TypeError( callback + \" is not a function\" );  \n    }  \n    if ( arguments.length > 1 ) {  \n      T = thisArg;  \n    }  \n    k = 0;  \n    while( k < len ) {  \n      var kValue;  \n      if ( k in O ) {  \n        kValue = O[ k ];  \n        callback.call( T, kValue, k, O );  \n      }  \n      k++;  \n    }  \n  };  \n}  \n//要加在调用forEach之前\n```\n2.IE8不兼容indexOf\n```JavaScript\nif (!Array.prototype.indexOf){  \n        Array.prototype.indexOf = function(elt /*, from*/){  \n        var len = this.length >>> 0;  \n        var from = Number(arguments[1]) || 0;  \n        from = (from < 0)  \n             ? Math.ceil(from)  \n             : Math.floor(from);  \n        if (from < 0)  \n          from += len;  \n        for (; from < len; from++)  \n        {  \n          if (from in this &&  \n              this[from] === elt)  \n            return from;  \n        }  \n        return -1;  \n      };  \n    }  \n//同样加在调用indexOf之前\n```","slug":"js踩坑IE8","published":1,"updated":"2019-01-05T03:38:35.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2t10017gw7gykp54wz5","content":"<p>JavaScript在ie8的兼容处理(如forEach、indexOf..)<br><a id=\"more\"></a></p>\n<h5 id=\"记一次项目中遇到得坑吧。。\"><a href=\"#记一次项目中遇到得坑吧。。\" class=\"headerlink\" title=\"记一次项目中遇到得坑吧。。\"></a>记一次项目中遇到得坑吧。。</h5><p>1.IE8不兼容forEach–作为一个遍历神器 不能用怎么行  0.0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决办法 在js文件中添加下面的代码：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">Array</span>.prototype.forEach ) &#123;  </span><br><span class=\"line\">  <span class=\"built_in\">Array</span>.prototype.forEach = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">forEach</span>(<span class=\"params\"> callback, thisArg </span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> T, k;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">this</span> == <span class=\"literal\">null</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( <span class=\"string\">\"this is null or not defined\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> O = <span class=\"built_in\">Object</span>(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = O.length &gt;&gt;&gt; <span class=\"number\">0</span>;   </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">typeof</span> callback !== <span class=\"string\">\"function\"</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( callback + <span class=\"string\">\" is not a function\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"built_in\">arguments</span>.length &gt; <span class=\"number\">1</span> ) &#123;  </span><br><span class=\"line\">      T = thisArg;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    k = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">while</span>( k &lt; len ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">var</span> kValue;  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( k <span class=\"keyword\">in</span> O ) &#123;  </span><br><span class=\"line\">        kValue = O[ k ];  </span><br><span class=\"line\">        callback.call( T, kValue, k, O );  </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">      k++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  &#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">//要加在调用forEach之前</span></span><br></pre></td></tr></table></figure></p>\n<p>2.IE8不兼容indexOf<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.prototype.indexOf)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">Array</span>.prototype.indexOf = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elt <span class=\"regexp\">/*, from*/</span></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> len = <span class=\"keyword\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">from</span> = <span class=\"built_in\">Number</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]) || <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">from</span> = (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">             ? <span class=\"built_in\">Math</span>.ceil(<span class=\"keyword\">from</span>)  </span><br><span class=\"line\">             : <span class=\"built_in\">Math</span>.floor(<span class=\"keyword\">from</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">          <span class=\"keyword\">from</span> += len;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; <span class=\"keyword\">from</span> &lt; len; <span class=\"keyword\">from</span>++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> <span class=\"keyword\">in</span> <span class=\"keyword\">this</span> &amp;&amp;  </span><br><span class=\"line\">              <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>] === elt)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">from</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;  </span><br><span class=\"line\">      &#125;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"comment\">//同样加在调用indexOf之前</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>JavaScript在ie8的兼容处理(如forEach、indexOf..)<br>","more":"</p>\n<h5 id=\"记一次项目中遇到得坑吧。。\"><a href=\"#记一次项目中遇到得坑吧。。\" class=\"headerlink\" title=\"记一次项目中遇到得坑吧。。\"></a>记一次项目中遇到得坑吧。。</h5><p>1.IE8不兼容forEach–作为一个遍历神器 不能用怎么行  0.0<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决办法 在js文件中添加下面的代码：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">Array</span>.prototype.forEach ) &#123;  </span><br><span class=\"line\">  <span class=\"built_in\">Array</span>.prototype.forEach = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">forEach</span>(<span class=\"params\"> callback, thisArg </span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> T, k;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">this</span> == <span class=\"literal\">null</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( <span class=\"string\">\"this is null or not defined\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> O = <span class=\"built_in\">Object</span>(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = O.length &gt;&gt;&gt; <span class=\"number\">0</span>;   </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">typeof</span> callback !== <span class=\"string\">\"function\"</span> ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>( callback + <span class=\"string\">\" is not a function\"</span> );  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"built_in\">arguments</span>.length &gt; <span class=\"number\">1</span> ) &#123;  </span><br><span class=\"line\">      T = thisArg;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    k = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">while</span>( k &lt; len ) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">var</span> kValue;  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( k <span class=\"keyword\">in</span> O ) &#123;  </span><br><span class=\"line\">        kValue = O[ k ];  </span><br><span class=\"line\">        callback.call( T, kValue, k, O );  </span><br><span class=\"line\">      &#125;  </span><br><span class=\"line\">      k++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  &#125;;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">//要加在调用forEach之前</span></span><br></pre></td></tr></table></figure></p>\n<p>2.IE8不兼容indexOf<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.prototype.indexOf)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">Array</span>.prototype.indexOf = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elt <span class=\"regexp\">/*, from*/</span></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> len = <span class=\"keyword\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"keyword\">from</span> = <span class=\"built_in\">Number</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]) || <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">from</span> = (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">             ? <span class=\"built_in\">Math</span>.ceil(<span class=\"keyword\">from</span>)  </span><br><span class=\"line\">             : <span class=\"built_in\">Math</span>.floor(<span class=\"keyword\">from</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> &lt; <span class=\"number\">0</span>)  </span><br><span class=\"line\">          <span class=\"keyword\">from</span> += len;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; <span class=\"keyword\">from</span> &lt; len; <span class=\"keyword\">from</span>++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">from</span> <span class=\"keyword\">in</span> <span class=\"keyword\">this</span> &amp;&amp;  </span><br><span class=\"line\">              <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>] === elt)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">from</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;  </span><br><span class=\"line\">      &#125;;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"><span class=\"comment\">//同样加在调用indexOf之前</span></span><br></pre></td></tr></table></figure></p>"},{"title":"js数组相关","date":"2021-07-09T00:50:26.000Z","_content":"js数组相关\n<!-- more -->\n## 数组\n### push\n作用：向数组的末尾添加一个或更多元素  \n参数：(item1, item2, ...)  \n返回值: push完成后数组的新长度\n``` Javascript\nlet arr = []\narr.push(1)\narr.push(2,3,4)\nconsole.log(arr) // [1, 2, 3, 4]\n```\n### pop\n作用：删除数组的最后一个元素(**改变原数组**)  \n参数： 无  \n返回值: 被删除的元素\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.pop()\nconsole.log(res, arr) // 4  [1, 2, 3]\n```\n### shift\n作用：删除数组的第一个元素(**改变原数组**)   \n参数： 无  \n返回值: 被删除的元素\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.shift()\nconsole.log(res, arr) // 1 [2,3,4]\n```\n### unshift\n作用：从数组的头部添加元素(**改变原数组**)  \n参数： (item1, item2, ...)  \n返回值: 数组的长度\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.unshift(0)\nconsole.log(res, arr) // 5 [0,1,2,3,4]\n```\n### slice\n作用：截取新数组(**不改变原数组**)  \n参数：(start,end)  \n返回值: 截取部分的新数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.slice(1)\nconsole.log(res, arr) // [2, 3, 4] [1, 2, 3, 4]\n```\n### splice\n作用：截取新数组(**改变原数组**)  \n参数：(index,howmany,item)  \n- index:必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置\n- howmany:要删除的项目数量。如果设置为 0，则不会删除项目\n- 可选。向数组添加的新项目\n返回值: 截取部分的新数组\n``` js\nlet arr = [1,2,3,4]\narr.splice(2, 1, 'test')\nconsole.log(arr) //  [1, 2, \"test\", 4]\n```\n### reverse\n作用：颠倒数组中元素的顺序(**改变原数组**)  \n参数： 无  \n返回值: 颠倒顺序的数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.reverse()\nconsole.log(res, arr) // [4, 3, 2, 1]  [4, 3, 2, 1] \n```\n### join\n作用：按照指定的分隔符，将数组分割成字符串(**不改变原数组**)  \n参数： (separator)  \n返回值: 数组分割后的字符串\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.join('-')\nconsole.log(res, arr) // 1-2-3-4  [1, 2, 3, 4]\n```\n### concat\n作用：拼接两个或者多个数组(**不改变原数组**)  \n参数： (arr1, arr2, ...)  \n返回值: 返回拼接后的数组， 该方法不会影响原数组，而是返回新创建的数组\n``` js\nlet arr = [1,2,3,4]\nlet arr2 = [5,6,7]\nlet res = arr.concat(arr2)\nconsole.log(res, arr) // [1, 2, 3, 4, 5, 6, 7]  [1, 2, 3, 4]\n```\n### indexOf\n作用：用于查找数组中是否存在某个值  \n参数： (value) 查找的值  \n返回值: 如果存在查找的值，返回对应的下标，否则返回-1\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.indexOf(5)\nlet res2 = arr.indexOf(1)\nconsole.log(res1, res2) // -1 0\n// ===-1 不存在\n// ~判断存在 !~判断不存在 \nif (!~arr.indexOf(5)) {\n    console.log('不存在')\n}\n```\n### includes\n作用：用于查找数组中是否存在某个值  \n参数： (value) 查找的值  \n返回值: 如果存在查找的值，如果存在返回true否则返回false\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.includes(5)\nlet res2 = arr.includes(1)\nconsole.log(res1, res2) // false true\n```\n### find\n作用：用于查找数组中是否存在某个值  \n参数： (fn) 匹配函数  \n返回值: 如果存在查找的值，如果返回第一个符合条件的元素否则返回undefined\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.find(item => item > 1)\nlet res2 = arr.find(item => item > 100)\nconsole.log(res1, res2) // 2 undefined\n```\n### findIndex\n作用：用于查找数组中是否存在某个值  \n参数： (fn) 匹配函数  \n返回值: 如果存在查找的值，如果返回第一个符合条件的元素下标否则返回-1\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.findIndex(item => item === 2)\nlet res2 = arr.findIndex(item => item === 100)\nconsole.log(res1, res2) // 1 -1\n```\n### sort\n作用：数组排序(**改变原数组**)  \n参数： (fn) 排序函数  \n返回值:排序后的数组\n``` js\nlet arr = [1,2,3,4]\narr.sort((a,b) => {\n    return b - a\n})\nconsole.log(arr) // [4,3,2,1]\n```\n### fill\n作用：给数组填充输入的值(**改变原数组**)  \n参数：(value)  \n返回值: 填充后的数组，还是指向原数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.fill(5)\nconsole.log(arr) // [5,5,5,5]\nconsole.log(res) // [5,5,5,5]\n```\n### map\n作用：返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值(**不改变原数组**)  \n参数：(fn, index, self)  \n返回值: 计算后的新数组 不影响原来的数组**map() 不会对空数组进行检测**\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.map(item => {\n    return item *item\n})\nconsole.log(arr, res) // [1, 2, 3, 4]  [1, 4, 9, 16]\n// 创建多个模拟数据 不会对空数组进行检测 需要先fill在map\nlet mockArr = new Array(10).fill(0).map((item, index) => {\n    return `test-${index}`\n})\n```\n### filter\n作用：按条件过滤返回新数组(**不改变原数组**)  \n参数： (fn) 判断条件函数  \n返回值: 返回符合条件的新数组\n``` js\nlet arr = [1, 2, 3, 4];\nlet res = arr.filter(item => {return item > 2})\nconsole.log(arr, res) // [1, 2, 3, 4]  [3, 4]\n```\n### reduce\n作用：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。对空数组是不会执行回调函数的 \n参数： (fn, initialValue)\n- prev:初始值, 或者计算结束后的返回值\n- currentValue:当前元素\n- currentIndex:当前元素的索引\n- arr:当前元素所属的数组对象\n``` js\nlet arr = [1, 2, 3, 4]\nlet res = arr.reduce(function(prev, cur, index, arr) {\n    return prev + cur;\n})\nconsole.log(arr, res); // [1, 2, 3, 4] 10\n```\n### forEach\n作用：遍历数组  \n参数： (fn, index, self)  \n返回值: 返回undefined\n```\nlet arr = [1,2,3,4]\nlet res = arr.forEach((item, index, self) => {\n    console.log(item)\n})\nconsole.log(res) // undefined\n```\n### some\n作用：检测数组中是否有元素满足条件(**有一个满足条件就返回true**)  \n参数： (fn) 判断条件函数  \n返回值: Boolean 满足条件true否则false\n``` js\nlet arr = [1, 2, 3, 4];\nlet res = arr.some(item => item > 0)\nconsole.log(res) // true\n```\n### every\n作用：检测数组中是否全部元素满足条件(**全部元素满足条件就返回true**)  \n参数： (fn) 判断条件函数  \n返回值: Boolean 满足条件true否则false\n``` js\nlet arr = [1, 2, 3, 4];\nlet res1 = arr.every(item =>  item > 0)\nlet res2 = arr.every(item =>  item > 2)\nconsole.log(res1, res2) //true false\n```\n### Array.isArray\n作用：判断变量是否为数组  \n参数： 判断的变量  \n返回值: Boolean 满足条件true否则false\n``` js\nlet res1 = Array.isArray([])\nlet res2 =  Array.isArray({})\nconsole.log(res1, res2) // true false\n```\n## 数组去重\n### 去重\n- 利用数组的 indexOf 下标属性来查询\n``` js\nfunction unique(arr) {\n  var newArr = []\n  for (var i = 0; i < arr.length; i++) {\n    if (newArr.indexOf(arr[i]) === -1) {\n      newArr.push(arr[i])\n    }\n  }\n  return newArr\n}\nconsole.log(unique([1, 1, 2, 3, 5, 3, 1, 5, 6, 7, 4]))\n```\n- 利用 ES6 的 set 方法\n``` js\n[...new Set(arr)]\n```\n### 根据属性去重\n``` js\nconst unique = (arr) => {\n        const res = new Map();\n        return arr.filter(\n          (item) => !res.has(item.productName) && res.set(item.productName, 1)\n        );\n      };\n```\n- 方法2\n``` js\nfunction unique(arr) {\n  let result = []\n  let obj = {}\n  for (var i = 0; i < arr.length; i++) {\n    if (!obj[arr[i].key]) {\n      result.push(arr[i])\n      obj[arr[i].key] = true\n    }\n  }\n}\n```\n## 交集/并集/差集\n``` js\nlet a = [1, 2, 3]\nlet b = [2, 4, 5]\n\n// 并集\nlet union = a.concat(b.filter((v) => !a.includes(v)))\n// [1,2,3,4,5]\n\n// 交集\nlet intersection = a.filter((v) => b.includes(v))\n// [2]\n\n// 差集\nlet difference = a.concat(b).filter((v) => !a.includes(v) || !b.includes(v))\n// [1,3,4,5]\n```\n## 如何中断forEach\n其实forEach的设计，就是不可中断的，但是有面试官会问，常见的答案是以下2种。\n1. 捕获异常 try-catch\n2. 使用every代替\n两种方法都不好，try-catch写起来相对来说有破坏代码的感觉， 而使用every则违背了题目的意思，并没有从本质上解决forEach，只是换了方法。  \n**如果工作上有需要中断遍历的时候，还是尽量使用for循环，配合break**\n``` js\nlet arr = [1,2,3,4,5,6,7]\ntry{\n    arr.forEach(item => {\n        if(item ===2) {\n            trow new Error('中断')\n        }\n        console.log(item)\n    })\n}catch(e) {\n    console.log('捕获异常',e)\n}\n```\n## 数组降维度\n``` js\nlet arr = [ [1], [2], [3] ];\narr = Array.prototype.concat.apply([], arr);\nconsole.log(arr);// [1, 2, 3]\n\nlet array = [ [1], [2], [3] ];\narray = array.flat(2);\nconsole.log(array); // [1, 2, 3]\n\n//多维数组\nlet arrMore = [1, 2, [3], [[4]]];\narrMore = arrMore.flat(Infinity);\nconsole.log(arrMore); // [1,2,3,4]\n```\n## 将数组中指定的某个元素移到第一位\n``` js\nlet arr=[1,2,3,4]\nlet arr1=[{name:'大幂幂'},{name:'小哥哥'}]\n\nconst moveFirst=(v,arr)=>{\n     arr.unshift(...arr.splice(arr.findIndex(i=>{\n        if(Object.prototype.toString.call(i) === '[object Object]'){\n            return i.name==v\n        }else{\n            return i==v\n        }\n    }),1))\n    return arr\n}\n\nconsole.log(moveFirst('小哥哥',arr1)); //[ { name: '小哥哥' }, { name: '大幂幂' } ] \nconsole.log(moveFirst(2,arr)); //[ 2, 1, 3, 4 ]\n```\n","source":"_posts/js数组相关.md","raw":"---\ntitle: js数组相关\ndate: 2021-07-09 08:50:26\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\njs数组相关\n<!-- more -->\n## 数组\n### push\n作用：向数组的末尾添加一个或更多元素  \n参数：(item1, item2, ...)  \n返回值: push完成后数组的新长度\n``` Javascript\nlet arr = []\narr.push(1)\narr.push(2,3,4)\nconsole.log(arr) // [1, 2, 3, 4]\n```\n### pop\n作用：删除数组的最后一个元素(**改变原数组**)  \n参数： 无  \n返回值: 被删除的元素\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.pop()\nconsole.log(res, arr) // 4  [1, 2, 3]\n```\n### shift\n作用：删除数组的第一个元素(**改变原数组**)   \n参数： 无  \n返回值: 被删除的元素\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.shift()\nconsole.log(res, arr) // 1 [2,3,4]\n```\n### unshift\n作用：从数组的头部添加元素(**改变原数组**)  \n参数： (item1, item2, ...)  \n返回值: 数组的长度\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.unshift(0)\nconsole.log(res, arr) // 5 [0,1,2,3,4]\n```\n### slice\n作用：截取新数组(**不改变原数组**)  \n参数：(start,end)  \n返回值: 截取部分的新数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.slice(1)\nconsole.log(res, arr) // [2, 3, 4] [1, 2, 3, 4]\n```\n### splice\n作用：截取新数组(**改变原数组**)  \n参数：(index,howmany,item)  \n- index:必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置\n- howmany:要删除的项目数量。如果设置为 0，则不会删除项目\n- 可选。向数组添加的新项目\n返回值: 截取部分的新数组\n``` js\nlet arr = [1,2,3,4]\narr.splice(2, 1, 'test')\nconsole.log(arr) //  [1, 2, \"test\", 4]\n```\n### reverse\n作用：颠倒数组中元素的顺序(**改变原数组**)  \n参数： 无  \n返回值: 颠倒顺序的数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.reverse()\nconsole.log(res, arr) // [4, 3, 2, 1]  [4, 3, 2, 1] \n```\n### join\n作用：按照指定的分隔符，将数组分割成字符串(**不改变原数组**)  \n参数： (separator)  \n返回值: 数组分割后的字符串\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.join('-')\nconsole.log(res, arr) // 1-2-3-4  [1, 2, 3, 4]\n```\n### concat\n作用：拼接两个或者多个数组(**不改变原数组**)  \n参数： (arr1, arr2, ...)  \n返回值: 返回拼接后的数组， 该方法不会影响原数组，而是返回新创建的数组\n``` js\nlet arr = [1,2,3,4]\nlet arr2 = [5,6,7]\nlet res = arr.concat(arr2)\nconsole.log(res, arr) // [1, 2, 3, 4, 5, 6, 7]  [1, 2, 3, 4]\n```\n### indexOf\n作用：用于查找数组中是否存在某个值  \n参数： (value) 查找的值  \n返回值: 如果存在查找的值，返回对应的下标，否则返回-1\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.indexOf(5)\nlet res2 = arr.indexOf(1)\nconsole.log(res1, res2) // -1 0\n// ===-1 不存在\n// ~判断存在 !~判断不存在 \nif (!~arr.indexOf(5)) {\n    console.log('不存在')\n}\n```\n### includes\n作用：用于查找数组中是否存在某个值  \n参数： (value) 查找的值  \n返回值: 如果存在查找的值，如果存在返回true否则返回false\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.includes(5)\nlet res2 = arr.includes(1)\nconsole.log(res1, res2) // false true\n```\n### find\n作用：用于查找数组中是否存在某个值  \n参数： (fn) 匹配函数  \n返回值: 如果存在查找的值，如果返回第一个符合条件的元素否则返回undefined\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.find(item => item > 1)\nlet res2 = arr.find(item => item > 100)\nconsole.log(res1, res2) // 2 undefined\n```\n### findIndex\n作用：用于查找数组中是否存在某个值  \n参数： (fn) 匹配函数  \n返回值: 如果存在查找的值，如果返回第一个符合条件的元素下标否则返回-1\n``` js\nlet arr = [1,2,3,4]\nlet res1 = arr.findIndex(item => item === 2)\nlet res2 = arr.findIndex(item => item === 100)\nconsole.log(res1, res2) // 1 -1\n```\n### sort\n作用：数组排序(**改变原数组**)  \n参数： (fn) 排序函数  \n返回值:排序后的数组\n``` js\nlet arr = [1,2,3,4]\narr.sort((a,b) => {\n    return b - a\n})\nconsole.log(arr) // [4,3,2,1]\n```\n### fill\n作用：给数组填充输入的值(**改变原数组**)  \n参数：(value)  \n返回值: 填充后的数组，还是指向原数组\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.fill(5)\nconsole.log(arr) // [5,5,5,5]\nconsole.log(res) // [5,5,5,5]\n```\n### map\n作用：返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值(**不改变原数组**)  \n参数：(fn, index, self)  \n返回值: 计算后的新数组 不影响原来的数组**map() 不会对空数组进行检测**\n``` js\nlet arr = [1,2,3,4]\nlet res = arr.map(item => {\n    return item *item\n})\nconsole.log(arr, res) // [1, 2, 3, 4]  [1, 4, 9, 16]\n// 创建多个模拟数据 不会对空数组进行检测 需要先fill在map\nlet mockArr = new Array(10).fill(0).map((item, index) => {\n    return `test-${index}`\n})\n```\n### filter\n作用：按条件过滤返回新数组(**不改变原数组**)  \n参数： (fn) 判断条件函数  \n返回值: 返回符合条件的新数组\n``` js\nlet arr = [1, 2, 3, 4];\nlet res = arr.filter(item => {return item > 2})\nconsole.log(arr, res) // [1, 2, 3, 4]  [3, 4]\n```\n### reduce\n作用：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。对空数组是不会执行回调函数的 \n参数： (fn, initialValue)\n- prev:初始值, 或者计算结束后的返回值\n- currentValue:当前元素\n- currentIndex:当前元素的索引\n- arr:当前元素所属的数组对象\n``` js\nlet arr = [1, 2, 3, 4]\nlet res = arr.reduce(function(prev, cur, index, arr) {\n    return prev + cur;\n})\nconsole.log(arr, res); // [1, 2, 3, 4] 10\n```\n### forEach\n作用：遍历数组  \n参数： (fn, index, self)  \n返回值: 返回undefined\n```\nlet arr = [1,2,3,4]\nlet res = arr.forEach((item, index, self) => {\n    console.log(item)\n})\nconsole.log(res) // undefined\n```\n### some\n作用：检测数组中是否有元素满足条件(**有一个满足条件就返回true**)  \n参数： (fn) 判断条件函数  \n返回值: Boolean 满足条件true否则false\n``` js\nlet arr = [1, 2, 3, 4];\nlet res = arr.some(item => item > 0)\nconsole.log(res) // true\n```\n### every\n作用：检测数组中是否全部元素满足条件(**全部元素满足条件就返回true**)  \n参数： (fn) 判断条件函数  \n返回值: Boolean 满足条件true否则false\n``` js\nlet arr = [1, 2, 3, 4];\nlet res1 = arr.every(item =>  item > 0)\nlet res2 = arr.every(item =>  item > 2)\nconsole.log(res1, res2) //true false\n```\n### Array.isArray\n作用：判断变量是否为数组  \n参数： 判断的变量  \n返回值: Boolean 满足条件true否则false\n``` js\nlet res1 = Array.isArray([])\nlet res2 =  Array.isArray({})\nconsole.log(res1, res2) // true false\n```\n## 数组去重\n### 去重\n- 利用数组的 indexOf 下标属性来查询\n``` js\nfunction unique(arr) {\n  var newArr = []\n  for (var i = 0; i < arr.length; i++) {\n    if (newArr.indexOf(arr[i]) === -1) {\n      newArr.push(arr[i])\n    }\n  }\n  return newArr\n}\nconsole.log(unique([1, 1, 2, 3, 5, 3, 1, 5, 6, 7, 4]))\n```\n- 利用 ES6 的 set 方法\n``` js\n[...new Set(arr)]\n```\n### 根据属性去重\n``` js\nconst unique = (arr) => {\n        const res = new Map();\n        return arr.filter(\n          (item) => !res.has(item.productName) && res.set(item.productName, 1)\n        );\n      };\n```\n- 方法2\n``` js\nfunction unique(arr) {\n  let result = []\n  let obj = {}\n  for (var i = 0; i < arr.length; i++) {\n    if (!obj[arr[i].key]) {\n      result.push(arr[i])\n      obj[arr[i].key] = true\n    }\n  }\n}\n```\n## 交集/并集/差集\n``` js\nlet a = [1, 2, 3]\nlet b = [2, 4, 5]\n\n// 并集\nlet union = a.concat(b.filter((v) => !a.includes(v)))\n// [1,2,3,4,5]\n\n// 交集\nlet intersection = a.filter((v) => b.includes(v))\n// [2]\n\n// 差集\nlet difference = a.concat(b).filter((v) => !a.includes(v) || !b.includes(v))\n// [1,3,4,5]\n```\n## 如何中断forEach\n其实forEach的设计，就是不可中断的，但是有面试官会问，常见的答案是以下2种。\n1. 捕获异常 try-catch\n2. 使用every代替\n两种方法都不好，try-catch写起来相对来说有破坏代码的感觉， 而使用every则违背了题目的意思，并没有从本质上解决forEach，只是换了方法。  \n**如果工作上有需要中断遍历的时候，还是尽量使用for循环，配合break**\n``` js\nlet arr = [1,2,3,4,5,6,7]\ntry{\n    arr.forEach(item => {\n        if(item ===2) {\n            trow new Error('中断')\n        }\n        console.log(item)\n    })\n}catch(e) {\n    console.log('捕获异常',e)\n}\n```\n## 数组降维度\n``` js\nlet arr = [ [1], [2], [3] ];\narr = Array.prototype.concat.apply([], arr);\nconsole.log(arr);// [1, 2, 3]\n\nlet array = [ [1], [2], [3] ];\narray = array.flat(2);\nconsole.log(array); // [1, 2, 3]\n\n//多维数组\nlet arrMore = [1, 2, [3], [[4]]];\narrMore = arrMore.flat(Infinity);\nconsole.log(arrMore); // [1,2,3,4]\n```\n## 将数组中指定的某个元素移到第一位\n``` js\nlet arr=[1,2,3,4]\nlet arr1=[{name:'大幂幂'},{name:'小哥哥'}]\n\nconst moveFirst=(v,arr)=>{\n     arr.unshift(...arr.splice(arr.findIndex(i=>{\n        if(Object.prototype.toString.call(i) === '[object Object]'){\n            return i.name==v\n        }else{\n            return i==v\n        }\n    }),1))\n    return arr\n}\n\nconsole.log(moveFirst('小哥哥',arr1)); //[ { name: '小哥哥' }, { name: '大幂幂' } ] \nconsole.log(moveFirst(2,arr)); //[ 2, 1, 3, 4 ]\n```\n","slug":"js数组相关","published":1,"updated":"2021-07-09T00:58:49.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2t3001agw7ggok5kvei","content":"<p>js数组相关<br><a id=\"more\"></a></p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p>作用：向数组的末尾添加一个或更多元素<br>参数：(item1, item2, …)<br>返回值: push完成后数组的新长度<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\">arr.push(<span class=\"number\">1</span>)</span><br><span class=\"line\">arr.push(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop\"></a>pop</h3><p>作用：删除数组的最后一个元素(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 被删除的元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.pop()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 4  [1, 2, 3]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift\"></a>shift</h3><p>作用：删除数组的第一个元素(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 被删除的元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.shift()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 1 [2,3,4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift\"></a>unshift</h3><p>作用：从数组的头部添加元素(<strong>改变原数组</strong>)<br>参数： (item1, item2, …)<br>返回值: 数组的长度<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.unshift(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 5 [0,1,2,3,4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice\"></a>slice</h3><p>作用：截取新数组(<strong>不改变原数组</strong>)<br>参数：(start,end)<br>返回值: 截取部分的新数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [2, 3, 4] [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice\"></a>splice</h3><p>作用：截取新数组(<strong>改变原数组</strong>)<br>参数：(index,howmany,item)  </p>\n<ul>\n<li>index:必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置</li>\n<li>howmany:要删除的项目数量。如果设置为 0，则不会删除项目</li>\n<li>可选。向数组添加的新项目<br>返回值: 截取部分的新数组<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">'test'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//  [1, 2, \"test\", 4]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse\"></a>reverse</h3><p>作用：颠倒数组中元素的顺序(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 颠倒顺序的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.reverse()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [4, 3, 2, 1]  [4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h3><p>作用：按照指定的分隔符，将数组分割成字符串(<strong>不改变原数组</strong>)<br>参数： (separator)<br>返回值: 数组分割后的字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.join(<span class=\"string\">'-'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 1-2-3-4  [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat\"></a>concat</h3><p>作用：拼接两个或者多个数组(<strong>不改变原数组</strong>)<br>参数： (arr1, arr2, …)<br>返回值: 返回拼接后的数组， 该方法不会影响原数组，而是返回新创建的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.concat(arr2)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [1, 2, 3, 4, 5, 6, 7]  [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf\"></a>indexOf</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (value) 查找的值<br>返回值: 如果存在查找的值，返回对应的下标，否则返回-1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.indexOf(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.indexOf(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// -1 0</span></span><br><span class=\"line\"><span class=\"comment\">// ===-1 不存在</span></span><br><span class=\"line\"><span class=\"comment\">// ~判断存在 !~判断不存在 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!~arr.indexOf(<span class=\"number\">5</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'不存在'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"includes\"><a href=\"#includes\" class=\"headerlink\" title=\"includes\"></a>includes</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (value) 查找的值<br>返回值: 如果存在查找的值，如果存在返回true否则返回false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.includes(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.includes(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// false true</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (fn) 匹配函数<br>返回值: 如果存在查找的值，如果返回第一个符合条件的元素否则返回undefined<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// 2 undefined</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"findIndex\"><a href=\"#findIndex\" class=\"headerlink\" title=\"findIndex\"></a>findIndex</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (fn) 匹配函数<br>返回值: 如果存在查找的值，如果返回第一个符合条件的元素下标否则返回-1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// 1 -1</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort\"></a>sort</h3><p>作用：数组排序(<strong>改变原数组</strong>)<br>参数： (fn) 排序函数<br>返回值:排序后的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b - a</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [4,3,2,1]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fill\"><a href=\"#fill\" class=\"headerlink\" title=\"fill\"></a>fill</h3><p>作用：给数组填充输入的值(<strong>改变原数组</strong>)<br>参数：(value)<br>返回值: 填充后的数组，还是指向原数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.fill(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [5,5,5,5]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res) <span class=\"comment\">// [5,5,5,5]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><p>作用：返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值(<strong>不改变原数组</strong>)<br>参数：(fn, index, self)<br>返回值: 计算后的新数组 不影响原来的数组<strong>map() 不会对空数组进行检测</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item *item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res) <span class=\"comment\">// [1, 2, 3, 4]  [1, 4, 9, 16]</span></span><br><span class=\"line\"><span class=\"comment\">// 创建多个模拟数据 不会对空数组进行检测 需要先fill在map</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mockArr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">10</span>).fill(<span class=\"number\">0</span>).map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`test-<span class=\"subst\">$&#123;index&#125;</span>`</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h3><p>作用：按条件过滤返回新数组(<strong>不改变原数组</strong>)<br>参数： (fn) 判断条件函数<br>返回值: 返回符合条件的新数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;<span class=\"keyword\">return</span> item &gt; <span class=\"number\">2</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res) <span class=\"comment\">// [1, 2, 3, 4]  [3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h3><p>作用：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。对空数组是不会执行回调函数的<br>参数： (fn, initialValue)</p>\n<ul>\n<li>prev:初始值, 或者计算结束后的返回值</li>\n<li>currentValue:当前元素</li>\n<li>currentIndex:当前元素的索引</li>\n<li>arr:当前元素所属的数组对象<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res); <span class=\"comment\">// [1, 2, 3, 4] 10</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach\"></a>forEach</h3><p>作用：遍历数组<br>参数： (fn, index, self)<br>返回值: 返回undefined<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let arr = [1,2,3,4]</span><br><span class=\"line\">let res = arr.forEach((item, index, self) =&gt; &#123;</span><br><span class=\"line\">    console.log(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">console.log(res) // undefined</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h3><p>作用：检测数组中是否有元素满足条件(<strong>有一个满足条件就返回true</strong>)<br>参数： (fn) 判断条件函数<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.some(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every\"></a>every</h3><p>作用：检测数组中是否全部元素满足条件(<strong>全部元素满足条件就返回true</strong>)<br>参数： (fn) 判断条件函数<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span>  item &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span>  item &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">//true false</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Array-isArray\"><a href=\"#Array-isArray\" class=\"headerlink\" title=\"Array.isArray\"></a>Array.isArray</h3><p>作用：判断变量是否为数组<br>参数： 判断的变量<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> res1 = <span class=\"built_in\">Array</span>.isArray([])</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 =  <span class=\"built_in\">Array</span>.isArray(&#123;&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// true false</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"数组去重\"><a href=\"#数组去重\" class=\"headerlink\" title=\"数组去重\"></a>数组去重</h2><h3 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h3><ul>\n<li><p>利用数组的 indexOf 下标属性来查询</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = []</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newArr.indexOf(arr[i]) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      newArr.push(arr[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>]))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>利用 ES6 的 set 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...new <span class=\"built_in\">Set</span>(arr)]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"根据属性去重\"><a href=\"#根据属性去重\" class=\"headerlink\" title=\"根据属性去重\"></a>根据属性去重</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> unique = <span class=\"function\">(<span class=\"params\">arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> res = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.filter(</span><br><span class=\"line\">          (item) =&gt; !res.has(item.productName) &amp;&amp; res.set(item.productName, <span class=\"number\">1</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方法2<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">  <span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj[arr[i].key]) &#123;</span><br><span class=\"line\">      result.push(arr[i])</span><br><span class=\"line\">      obj[arr[i].key] = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"交集-并集-差集\"><a href=\"#交集-并集-差集\" class=\"headerlink\" title=\"交集/并集/差集\"></a>交集/并集/差集</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 并集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> union = a.concat(b.filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> !a.includes(v)))</span><br><span class=\"line\"><span class=\"comment\">// [1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> intersection = a.filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> b.includes(v))</span><br><span class=\"line\"><span class=\"comment\">// [2]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 差集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> difference = a.concat(b).filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> !a.includes(v) || !b.includes(v))</span><br><span class=\"line\"><span class=\"comment\">// [1,3,4,5]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"如何中断forEach\"><a href=\"#如何中断forEach\" class=\"headerlink\" title=\"如何中断forEach\"></a>如何中断forEach</h2><p>其实forEach的设计，就是不可中断的，但是有面试官会问，常见的答案是以下2种。</p>\n<ol>\n<li>捕获异常 try-catch</li>\n<li>使用every代替<br>两种方法都不好，try-catch写起来相对来说有破坏代码的感觉， 而使用every则违背了题目的意思，并没有从本质上解决forEach，只是换了方法。<br><strong>如果工作上有需要中断遍历的时候，还是尽量使用for循环，配合break</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    arr.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(item ===<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            trow <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'中断'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'捕获异常'</span>,e)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"数组降维度\"><a href=\"#数组降维度\" class=\"headerlink\" title=\"数组降维度\"></a>数组降维度</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [ [<span class=\"number\">1</span>], [<span class=\"number\">2</span>], [<span class=\"number\">3</span>] ];</span><br><span class=\"line\">arr = <span class=\"built_in\">Array</span>.prototype.concat.apply([], arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> array = [ [<span class=\"number\">1</span>], [<span class=\"number\">2</span>], [<span class=\"number\">3</span>] ];</span><br><span class=\"line\">array = array.flat(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array); <span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//多维数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrMore = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"number\">3</span>], [[<span class=\"number\">4</span>]]];</span><br><span class=\"line\">arrMore = arrMore.flat(<span class=\"literal\">Infinity</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arrMore); <span class=\"comment\">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将数组中指定的某个元素移到第一位\"><a href=\"#将数组中指定的某个元素移到第一位\" class=\"headerlink\" title=\"将数组中指定的某个元素移到第一位\"></a>将数组中指定的某个元素移到第一位</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1=[&#123;<span class=\"attr\">name</span>:<span class=\"string\">'大幂幂'</span>&#125;,&#123;<span class=\"attr\">name</span>:<span class=\"string\">'小哥哥'</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> moveFirst=<span class=\"function\">(<span class=\"params\">v,arr</span>)=&gt;</span>&#123;</span><br><span class=\"line\">     arr.unshift(...arr.splice(arr.findIndex(<span class=\"function\"><span class=\"params\">i</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(i) === <span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i.name==v</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i==v</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;),<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(moveFirst(<span class=\"string\">'小哥哥'</span>,arr1)); <span class=\"comment\">//[ &#123; name: '小哥哥' &#125;, &#123; name: '大幂幂' &#125; ] </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(moveFirst(<span class=\"number\">2</span>,arr)); <span class=\"comment\">//[ 2, 1, 3, 4 ]</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>js数组相关<br>","more":"</p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p>作用：向数组的末尾添加一个或更多元素<br>参数：(item1, item2, …)<br>返回值: push完成后数组的新长度<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = []</span><br><span class=\"line\">arr.push(<span class=\"number\">1</span>)</span><br><span class=\"line\">arr.push(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop\"></a>pop</h3><p>作用：删除数组的最后一个元素(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 被删除的元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.pop()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 4  [1, 2, 3]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift\"></a>shift</h3><p>作用：删除数组的第一个元素(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 被删除的元素<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.shift()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 1 [2,3,4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift\"></a>unshift</h3><p>作用：从数组的头部添加元素(<strong>改变原数组</strong>)<br>参数： (item1, item2, …)<br>返回值: 数组的长度<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.unshift(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 5 [0,1,2,3,4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice\"></a>slice</h3><p>作用：截取新数组(<strong>不改变原数组</strong>)<br>参数：(start,end)<br>返回值: 截取部分的新数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [2, 3, 4] [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice\"></a>splice</h3><p>作用：截取新数组(<strong>改变原数组</strong>)<br>参数：(index,howmany,item)  </p>\n<ul>\n<li>index:必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置</li>\n<li>howmany:要删除的项目数量。如果设置为 0，则不会删除项目</li>\n<li>可选。向数组添加的新项目<br>返回值: 截取部分的新数组<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">'test'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">//  [1, 2, \"test\", 4]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse\"></a>reverse</h3><p>作用：颠倒数组中元素的顺序(<strong>改变原数组</strong>)<br>参数： 无<br>返回值: 颠倒顺序的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.reverse()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [4, 3, 2, 1]  [4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h3><p>作用：按照指定的分隔符，将数组分割成字符串(<strong>不改变原数组</strong>)<br>参数： (separator)<br>返回值: 数组分割后的字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.join(<span class=\"string\">'-'</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// 1-2-3-4  [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat\"></a>concat</h3><p>作用：拼接两个或者多个数组(<strong>不改变原数组</strong>)<br>参数： (arr1, arr2, …)<br>返回值: 返回拼接后的数组， 该方法不会影响原数组，而是返回新创建的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.concat(arr2)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res, arr) <span class=\"comment\">// [1, 2, 3, 4, 5, 6, 7]  [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf\"></a>indexOf</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (value) 查找的值<br>返回值: 如果存在查找的值，返回对应的下标，否则返回-1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.indexOf(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.indexOf(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// -1 0</span></span><br><span class=\"line\"><span class=\"comment\">// ===-1 不存在</span></span><br><span class=\"line\"><span class=\"comment\">// ~判断存在 !~判断不存在 </span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!~arr.indexOf(<span class=\"number\">5</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'不存在'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"includes\"><a href=\"#includes\" class=\"headerlink\" title=\"includes\"></a>includes</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (value) 查找的值<br>返回值: 如果存在查找的值，如果存在返回true否则返回false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.includes(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.includes(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// false true</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (fn) 匹配函数<br>返回值: 如果存在查找的值，如果返回第一个符合条件的元素否则返回undefined<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.find(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// 2 undefined</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"findIndex\"><a href=\"#findIndex\" class=\"headerlink\" title=\"findIndex\"></a>findIndex</h3><p>作用：用于查找数组中是否存在某个值<br>参数： (fn) 匹配函数<br>返回值: 如果存在查找的值，如果返回第一个符合条件的元素下标否则返回-1<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.findIndex(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item === <span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// 1 -1</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort\"></a>sort</h3><p>作用：数组排序(<strong>改变原数组</strong>)<br>参数： (fn) 排序函数<br>返回值:排序后的数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b - a</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [4,3,2,1]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"fill\"><a href=\"#fill\" class=\"headerlink\" title=\"fill\"></a>fill</h3><p>作用：给数组填充输入的值(<strong>改变原数组</strong>)<br>参数：(value)<br>返回值: 填充后的数组，还是指向原数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.fill(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [5,5,5,5]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res) <span class=\"comment\">// [5,5,5,5]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><p>作用：返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值(<strong>不改变原数组</strong>)<br>参数：(fn, index, self)<br>返回值: 计算后的新数组 不影响原来的数组<strong>map() 不会对空数组进行检测</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item *item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res) <span class=\"comment\">// [1, 2, 3, 4]  [1, 4, 9, 16]</span></span><br><span class=\"line\"><span class=\"comment\">// 创建多个模拟数据 不会对空数组进行检测 需要先fill在map</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mockArr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"number\">10</span>).fill(<span class=\"number\">0</span>).map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`test-<span class=\"subst\">$&#123;index&#125;</span>`</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h3><p>作用：按条件过滤返回新数组(<strong>不改变原数组</strong>)<br>参数： (fn) 判断条件函数<br>返回值: 返回符合条件的新数组<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;<span class=\"keyword\">return</span> item &gt; <span class=\"number\">2</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res) <span class=\"comment\">// [1, 2, 3, 4]  [3, 4]</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h3><p>作用：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。对空数组是不会执行回调函数的<br>参数： (fn, initialValue)</p>\n<ul>\n<li>prev:初始值, 或者计算结束后的返回值</li>\n<li>currentValue:当前元素</li>\n<li>currentIndex:当前元素的索引</li>\n<li>arr:当前元素所属的数组对象<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, res); <span class=\"comment\">// [1, 2, 3, 4] 10</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach\"></a>forEach</h3><p>作用：遍历数组<br>参数： (fn, index, self)<br>返回值: 返回undefined<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let arr = [1,2,3,4]</span><br><span class=\"line\">let res = arr.forEach((item, index, self) =&gt; &#123;</span><br><span class=\"line\">    console.log(item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">console.log(res) // undefined</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h3><p>作用：检测数组中是否有元素满足条件(<strong>有一个满足条件就返回true</strong>)<br>参数： (fn) 判断条件函数<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res = arr.some(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every\"></a>every</h3><p>作用：检测数组中是否全部元素满足条件(<strong>全部元素满足条件就返回true</strong>)<br>参数： (fn) 判断条件函数<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> res1 = arr.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span>  item &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 = arr.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span>  item &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">//true false</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Array-isArray\"><a href=\"#Array-isArray\" class=\"headerlink\" title=\"Array.isArray\"></a>Array.isArray</h3><p>作用：判断变量是否为数组<br>参数： 判断的变量<br>返回值: Boolean 满足条件true否则false<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> res1 = <span class=\"built_in\">Array</span>.isArray([])</span><br><span class=\"line\"><span class=\"keyword\">let</span> res2 =  <span class=\"built_in\">Array</span>.isArray(&#123;&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res1, res2) <span class=\"comment\">// true false</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"数组去重\"><a href=\"#数组去重\" class=\"headerlink\" title=\"数组去重\"></a>数组去重</h2><h3 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h3><ul>\n<li><p>利用数组的 indexOf 下标属性来查询</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = []</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newArr.indexOf(arr[i]) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      newArr.push(arr[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>]))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>利用 ES6 的 set 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[...new <span class=\"built_in\">Set</span>(arr)]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"根据属性去重\"><a href=\"#根据属性去重\" class=\"headerlink\" title=\"根据属性去重\"></a>根据属性去重</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> unique = <span class=\"function\">(<span class=\"params\">arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> res = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.filter(</span><br><span class=\"line\">          (item) =&gt; !res.has(item.productName) &amp;&amp; res.set(item.productName, <span class=\"number\">1</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方法2<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">  <span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj[arr[i].key]) &#123;</span><br><span class=\"line\">      result.push(arr[i])</span><br><span class=\"line\">      obj[arr[i].key] = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"交集-并集-差集\"><a href=\"#交集-并集-差集\" class=\"headerlink\" title=\"交集/并集/差集\"></a>交集/并集/差集</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 并集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> union = a.concat(b.filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> !a.includes(v)))</span><br><span class=\"line\"><span class=\"comment\">// [1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> intersection = a.filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> b.includes(v))</span><br><span class=\"line\"><span class=\"comment\">// [2]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 差集</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> difference = a.concat(b).filter(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> !a.includes(v) || !b.includes(v))</span><br><span class=\"line\"><span class=\"comment\">// [1,3,4,5]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"如何中断forEach\"><a href=\"#如何中断forEach\" class=\"headerlink\" title=\"如何中断forEach\"></a>如何中断forEach</h2><p>其实forEach的设计，就是不可中断的，但是有面试官会问，常见的答案是以下2种。</p>\n<ol>\n<li>捕获异常 try-catch</li>\n<li>使用every代替<br>两种方法都不好，try-catch写起来相对来说有破坏代码的感觉， 而使用every则违背了题目的意思，并没有从本质上解决forEach，只是换了方法。<br><strong>如果工作上有需要中断遍历的时候，还是尽量使用for循环，配合break</strong><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>]</span><br><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    arr.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(item ===<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            trow <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'中断'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'捕获异常'</span>,e)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"数组降维度\"><a href=\"#数组降维度\" class=\"headerlink\" title=\"数组降维度\"></a>数组降维度</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [ [<span class=\"number\">1</span>], [<span class=\"number\">2</span>], [<span class=\"number\">3</span>] ];</span><br><span class=\"line\">arr = <span class=\"built_in\">Array</span>.prototype.concat.apply([], arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> array = [ [<span class=\"number\">1</span>], [<span class=\"number\">2</span>], [<span class=\"number\">3</span>] ];</span><br><span class=\"line\">array = array.flat(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array); <span class=\"comment\">// [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//多维数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrMore = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, [<span class=\"number\">3</span>], [[<span class=\"number\">4</span>]]];</span><br><span class=\"line\">arrMore = arrMore.flat(<span class=\"literal\">Infinity</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arrMore); <span class=\"comment\">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将数组中指定的某个元素移到第一位\"><a href=\"#将数组中指定的某个元素移到第一位\" class=\"headerlink\" title=\"将数组中指定的某个元素移到第一位\"></a>将数组中指定的某个元素移到第一位</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1=[&#123;<span class=\"attr\">name</span>:<span class=\"string\">'大幂幂'</span>&#125;,&#123;<span class=\"attr\">name</span>:<span class=\"string\">'小哥哥'</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> moveFirst=<span class=\"function\">(<span class=\"params\">v,arr</span>)=&gt;</span>&#123;</span><br><span class=\"line\">     arr.unshift(...arr.splice(arr.findIndex(<span class=\"function\"><span class=\"params\">i</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">Object</span>.prototype.toString.call(i) === <span class=\"string\">'[object Object]'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i.name==v</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i==v</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;),<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(moveFirst(<span class=\"string\">'小哥哥'</span>,arr1)); <span class=\"comment\">//[ &#123; name: '小哥哥' &#125;, &#123; name: '大幂幂' &#125; ] </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(moveFirst(<span class=\"number\">2</span>,arr)); <span class=\"comment\">//[ 2, 1, 3, 4 ]</span></span><br></pre></td></tr></table></figure>"},{"title":"linux服务器配置(node环境)","date":"2018-07-27T09:17:12.000Z","_content":"linux服务器配置(node环境)\n<!-- more -->\n##### 新建node安装目录，与node项目目录\n```JavaScript\nsudo mkdir -p /www/dev/node //目录位置可选\n下载node二进制文件包：\n sudo wget https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找\n解压包命令：\n sudo tar zxvf node-v8.11.3-linux-x64.tar.xz --这里有个坑 这个命令会报错\n正确解压命令：\n sudo tar xvf node-v8.11.3-linux-x64.tar.xz\n配置node环境变量：\n sudo vim /etc/profile\n //按i插入到最下面\nexport NODE_HOME=/www/dev/node/node-v8.11.3-linux-x64 //node安装目录\nexport PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符\n编辑完以后按'esc' 输入':wq' 回车保存退出\nsource /etc/profile --使文件生效\n```\n##### 安装npm\n```JavaScript\ncurl https://npmjs.org/install.sh | sh\n```\n##### 安装pm2\n```\nsudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm\n//执行完这两步才可以npm install\nsudo npm install pm2 -g\n同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2\n```\n###### 上传并启动项目(已上传忽略)\n```JavaScript\nsudo npm install //安装项目所需依赖\n启动项目: sudo pm2 start index.js// -- node index.js\n停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill\n```\n##### 安装配置Nginx\n```JavaScript\n//开始前，请确认gcc g++开发类库是否装好，默认已经安装。\n  whereis gcc\n//进入安装目录\n  cd /usr/local/src\n//安装PCRE库\n  wget http://zlib.net/zlib-1.2.11.tar.gz\n  tar zxvf zlib-1.2.11.tar.gz\n  cd zlib-1.2.11\n  ./configure\n  make\n  make install\n//安装openssl（某些vps默认没装ssl)\n  wget https://www.openssl.org/source/openssl-1.0.1t.tar.gz\n  tar -zxvf openssl-1.0.1t.tar.gz\n//安装nginx\n  wget http://nginx.org/download/nginx-1.1.10.tar.gz\n  tar -zxvf nginx-1.1.10.tar.gz\n  cd nginx-1.1.10\n  ./configure\n  make\n  make install\n--make install可能会报错：make: *** No rule to make target 'install'.  Stop.\n解决：\nubuntu下--\n  apt-get install openssl\n  apt-get install libssl-dev\ncentos下--\n  yum -y install openssl openssl-devel\n然后再从./configure开始执行\n```\n##### 启动nginx\n```JavaScript\n//查看nginx是否启动:\n启动：/usr/local/nginx/sbin/nginx\n停止：/usr/local/nginx/sbin/nginx -s stop\n ps aux|grep nginx\n//结果:\nroot     124023  0.0  0.0  28732   540 ?        Ss   16:59   0:00 nginx: master process /usr/local/nginx/sbin/nginx\nnobody   124024  0.0  0.2  29132  2536 ?        S    16:59   0:00 nginx: worker process\nroot     124048  0.0  0.1  14684  1036 pts/0    S+   17:04   0:00 grep --color=auto nginx\n//必须有前两个进程 否则启动失败\n\n//修改了配置文件以后重启nginx\n/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload\n//贴一小段配置代码：\nserver {\n        listen       8090;\n        server_name  www.shadow.com; #服务器域名\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n           # root   html;\n           # index  index.html index.htm;\n           proxy_pass http://127.0.0.1:3000;\n           proxy_redirect default;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n##### 安装MongoDB\n```JavaScript\n//切换到安装目录\n cd /usr/local/soft/  --没有就新建 mkdir soft\n//下载：\n curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n//解压：\n tar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n//移动到/usr/local/mongodb/目录：\n mv mongodb-linux-x86_64-3.6.4 /usr/local/mongodb\n//编辑环境变量：\n vim /etc/profile\nexport MONGODB_HOME=/usr/local/mongodb/\nexport PATH=$MONGODB_HOME/bin --添加到之前的node前\nsource /etc/profile --使之生效\n//切换到新目录的bin目录下：\n cd /usr/local/mongodb/bin\n//新建mongodb.conf文件：--touch mongodb.conf\n#端口号\nport=27017\n#数据目录--没有需要手动创建 mkdir\ndbpath=/usr/local/mongodb/data/db\n#日志目录--没有需要手动创建 mkdir touch\nlogpath=/usr/local/mongodb/log/out.log\n#设置后台运行\nfork=true\n#日志输出方式\nlogappend=true\n#开启认证\n#auth=true\n//启动mongodb:\n./mongod -f mongodb.conf\n或者：./mongod -config mongodb.conf\n```","source":"_posts/linux服务器配置-node环境.md","raw":"---\ntitle: linux服务器配置(node环境)\ndate: 2018-07-27 17:17:12\ncategories:\n- node\ntags:\n- node\n---\nlinux服务器配置(node环境)\n<!-- more -->\n##### 新建node安装目录，与node项目目录\n```JavaScript\nsudo mkdir -p /www/dev/node //目录位置可选\n下载node二进制文件包：\n sudo wget https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找\n解压包命令：\n sudo tar zxvf node-v8.11.3-linux-x64.tar.xz --这里有个坑 这个命令会报错\n正确解压命令：\n sudo tar xvf node-v8.11.3-linux-x64.tar.xz\n配置node环境变量：\n sudo vim /etc/profile\n //按i插入到最下面\nexport NODE_HOME=/www/dev/node/node-v8.11.3-linux-x64 //node安装目录\nexport PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符\n编辑完以后按'esc' 输入':wq' 回车保存退出\nsource /etc/profile --使文件生效\n```\n##### 安装npm\n```JavaScript\ncurl https://npmjs.org/install.sh | sh\n```\n##### 安装pm2\n```\nsudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node\n sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm\n//执行完这两步才可以npm install\nsudo npm install pm2 -g\n同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2\n```\n###### 上传并启动项目(已上传忽略)\n```JavaScript\nsudo npm install //安装项目所需依赖\n启动项目: sudo pm2 start index.js// -- node index.js\n停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill\n```\n##### 安装配置Nginx\n```JavaScript\n//开始前，请确认gcc g++开发类库是否装好，默认已经安装。\n  whereis gcc\n//进入安装目录\n  cd /usr/local/src\n//安装PCRE库\n  wget http://zlib.net/zlib-1.2.11.tar.gz\n  tar zxvf zlib-1.2.11.tar.gz\n  cd zlib-1.2.11\n  ./configure\n  make\n  make install\n//安装openssl（某些vps默认没装ssl)\n  wget https://www.openssl.org/source/openssl-1.0.1t.tar.gz\n  tar -zxvf openssl-1.0.1t.tar.gz\n//安装nginx\n  wget http://nginx.org/download/nginx-1.1.10.tar.gz\n  tar -zxvf nginx-1.1.10.tar.gz\n  cd nginx-1.1.10\n  ./configure\n  make\n  make install\n--make install可能会报错：make: *** No rule to make target 'install'.  Stop.\n解决：\nubuntu下--\n  apt-get install openssl\n  apt-get install libssl-dev\ncentos下--\n  yum -y install openssl openssl-devel\n然后再从./configure开始执行\n```\n##### 启动nginx\n```JavaScript\n//查看nginx是否启动:\n启动：/usr/local/nginx/sbin/nginx\n停止：/usr/local/nginx/sbin/nginx -s stop\n ps aux|grep nginx\n//结果:\nroot     124023  0.0  0.0  28732   540 ?        Ss   16:59   0:00 nginx: master process /usr/local/nginx/sbin/nginx\nnobody   124024  0.0  0.2  29132  2536 ?        S    16:59   0:00 nginx: worker process\nroot     124048  0.0  0.1  14684  1036 pts/0    S+   17:04   0:00 grep --color=auto nginx\n//必须有前两个进程 否则启动失败\n\n//修改了配置文件以后重启nginx\n/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload\n//贴一小段配置代码：\nserver {\n        listen       8090;\n        server_name  www.shadow.com; #服务器域名\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n           # root   html;\n           # index  index.html index.htm;\n           proxy_pass http://127.0.0.1:3000;\n           proxy_redirect default;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n}\n```\n##### 安装MongoDB\n```JavaScript\n//切换到安装目录\n cd /usr/local/soft/  --没有就新建 mkdir soft\n//下载：\n curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n//解压：\n tar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n//移动到/usr/local/mongodb/目录：\n mv mongodb-linux-x86_64-3.6.4 /usr/local/mongodb\n//编辑环境变量：\n vim /etc/profile\nexport MONGODB_HOME=/usr/local/mongodb/\nexport PATH=$MONGODB_HOME/bin --添加到之前的node前\nsource /etc/profile --使之生效\n//切换到新目录的bin目录下：\n cd /usr/local/mongodb/bin\n//新建mongodb.conf文件：--touch mongodb.conf\n#端口号\nport=27017\n#数据目录--没有需要手动创建 mkdir\ndbpath=/usr/local/mongodb/data/db\n#日志目录--没有需要手动创建 mkdir touch\nlogpath=/usr/local/mongodb/log/out.log\n#设置后台运行\nfork=true\n#日志输出方式\nlogappend=true\n#开启认证\n#auth=true\n//启动mongodb:\n./mongod -f mongodb.conf\n或者：./mongod -config mongodb.conf\n```","slug":"linux服务器配置-node环境","published":1,"updated":"2019-01-05T03:38:35.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2t6001fgw7g85ymjf9h","content":"<p>linux服务器配置(node环境)<br><a id=\"more\"></a></p>\n<h5 id=\"新建node安装目录，与node项目目录\"><a href=\"#新建node安装目录，与node项目目录\" class=\"headerlink\" title=\"新建node安装目录，与node项目目录\"></a>新建node安装目录，与node项目目录</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /www/dev/node <span class=\"comment\">//目录位置可选</span></span><br><span class=\"line\">下载node二进制文件包：</span><br><span class=\"line\"> sudo wget https:<span class=\"comment\">//nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找</span></span><br><span class=\"line\">解压包命令：</span><br><span class=\"line\"> sudo tar zxvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz --这里有个坑 这个命令会报错</span><br><span class=\"line\">正确解压命令：</span><br><span class=\"line\"> sudo tar xvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz</span><br><span class=\"line\">配置node环境变量：</span><br><span class=\"line\"> sudo vim /etc/profile</span><br><span class=\"line\"> <span class=\"comment\">//按i插入到最下面</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> NODE_HOME=<span class=\"regexp\">/www/</span>dev/node/node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64 <span class=\"comment\">//node安装目录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符</span><br><span class=\"line\">编辑完以后按<span class=\"string\">'esc'</span> 输入<span class=\"string\">':wq'</span> 回车保存退出</span><br><span class=\"line\">source /etc/profile --使文件生效</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:<span class=\"comment\">//npmjs.org/install.sh | sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装pm2\"><a href=\"#安装pm2\" class=\"headerlink\" title=\"安装pm2\"></a>安装pm2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm</span><br><span class=\"line\">//执行完这两步才可以npm install</span><br><span class=\"line\">sudo npm install pm2 -g</span><br><span class=\"line\">同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传并启动项目-已上传忽略\"><a href=\"#上传并启动项目-已上传忽略\" class=\"headerlink\" title=\"上传并启动项目(已上传忽略)\"></a>上传并启动项目(已上传忽略)</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install <span class=\"comment\">//安装项目所需依赖</span></span><br><span class=\"line\">启动项目: sudo pm2 start index.js<span class=\"comment\">// -- node index.js</span></span><br><span class=\"line\">停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装配置Nginx\"><a href=\"#安装配置Nginx\" class=\"headerlink\" title=\"安装配置Nginx\"></a>安装配置Nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开始前，请确认gcc g++开发类库是否装好，默认已经安装。</span></span><br><span class=\"line\">  whereis gcc</span><br><span class=\"line\"><span class=\"comment\">//进入安装目录</span></span><br><span class=\"line\">  cd /usr/local/src</span><br><span class=\"line\"><span class=\"comment\">//安装PCRE库</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//zlib.net/zlib-1.2.11.tar.gz</span></span><br><span class=\"line\">  tar zxvf zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span>.tar.gz</span><br><span class=\"line\">  cd zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\"><span class=\"comment\">//安装openssl（某些vps默认没装ssl)</span></span><br><span class=\"line\">  wget https:<span class=\"comment\">//www.openssl.org/source/openssl-1.0.1t.tar.gz</span></span><br><span class=\"line\">  tar -zxvf openssl<span class=\"number\">-1.0</span><span class=\"number\">.1</span>t.tar.gz</span><br><span class=\"line\"><span class=\"comment\">//安装nginx</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//nginx.org/download/nginx-1.1.10.tar.gz</span></span><br><span class=\"line\">  tar -zxvf nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span>.tar.gz</span><br><span class=\"line\">  cd nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\">--make install可能会报错：make: *** No rule to make target <span class=\"string\">'install'</span>.  Stop.</span><br><span class=\"line\">解决：</span><br><span class=\"line\">ubuntu下--</span><br><span class=\"line\">  apt-<span class=\"keyword\">get</span> install openssl</span><br><span class=\"line\">  apt-<span class=\"keyword\">get</span> install libssl-dev</span><br><span class=\"line\">centos下--</span><br><span class=\"line\">  yum -y install openssl openssl-devel</span><br><span class=\"line\">然后再从./configure开始执行</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查看nginx是否启动:</span></span><br><span class=\"line\">启动：/usr/local/nginx/sbin/nginx</span><br><span class=\"line\">停止：/usr/local/nginx/sbin/nginx -s stop</span><br><span class=\"line\"> ps aux|grep nginx</span><br><span class=\"line\"><span class=\"comment\">//结果:</span></span><br><span class=\"line\">root     <span class=\"number\">124023</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.0</span>  <span class=\"number\">28732</span>   <span class=\"number\">540</span> ?        Ss   <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">nobody   <span class=\"number\">124024</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.2</span>  <span class=\"number\">29132</span>  <span class=\"number\">2536</span> ?        S    <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: worker process</span><br><span class=\"line\">root     <span class=\"number\">124048</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.1</span>  <span class=\"number\">14684</span>  <span class=\"number\">1036</span> pts/<span class=\"number\">0</span>    S+   <span class=\"number\">17</span>:<span class=\"number\">04</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> grep --color=auto nginx</span><br><span class=\"line\"><span class=\"comment\">//必须有前两个进程 否则启动失败</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改了配置文件以后重启nginx</span></span><br><span class=\"line\">/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload</span><br><span class=\"line\"><span class=\"comment\">//贴一小段配置代码：</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">8090</span>;</span><br><span class=\"line\">        server_name  www.shadow.com; #服务器域名</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           # root   html;</span><br><span class=\"line\">           # index  index.html index.htm;</span><br><span class=\"line\">           proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">           proxy_redirect <span class=\"keyword\">default</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the static page /50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /<span class=\"number\">50</span>x.html;</span><br><span class=\"line\">        location = <span class=\"regexp\">/50x.html &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            root   html;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//切换到安装目录</span></span><br><span class=\"line\"> cd /usr/local/soft/  --没有就新建 mkdir soft</span><br><span class=\"line\"><span class=\"comment\">//下载：</span></span><br><span class=\"line\"> curl -O https:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span></span><br><span class=\"line\"><span class=\"comment\">//解压：</span></span><br><span class=\"line\"> tar -zxvf mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span>.tgz</span><br><span class=\"line\"><span class=\"comment\">//移动到/usr/local/mongodb/目录：</span></span><br><span class=\"line\"> mv mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span> /usr/local/mongodb</span><br><span class=\"line\"><span class=\"comment\">//编辑环境变量：</span></span><br><span class=\"line\"> vim /etc/profile</span><br><span class=\"line\"><span class=\"keyword\">export</span> MONGODB_HOME=<span class=\"regexp\">/usr/</span>local/mongodb/</span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$MONGODB_HOME/bin --添加到之前的node前</span><br><span class=\"line\">source /etc/profile --使之生效</span><br><span class=\"line\"><span class=\"comment\">//切换到新目录的bin目录下：</span></span><br><span class=\"line\"> cd /usr/local/mongodb/bin</span><br><span class=\"line\"><span class=\"comment\">//新建mongodb.conf文件：--touch mongodb.conf</span></span><br><span class=\"line\">#端口号</span><br><span class=\"line\">port=<span class=\"number\">27017</span></span><br><span class=\"line\">#数据目录--没有需要手动创建 mkdir</span><br><span class=\"line\">dbpath=<span class=\"regexp\">/usr/</span>local/mongodb/data/db</span><br><span class=\"line\">#日志目录--没有需要手动创建 mkdir touch</span><br><span class=\"line\">logpath=<span class=\"regexp\">/usr/</span>local/mongodb/log/out.log</span><br><span class=\"line\">#设置后台运行</span><br><span class=\"line\">fork=<span class=\"literal\">true</span></span><br><span class=\"line\">#日志输出方式</span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">#开启认证</span><br><span class=\"line\">#auth=true</span><br><span class=\"line\"><span class=\"comment\">//启动mongodb:</span></span><br><span class=\"line\">./mongod -f mongodb.conf</span><br><span class=\"line\">或者：./mongod -config mongodb.conf</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>linux服务器配置(node环境)<br>","more":"</p>\n<h5 id=\"新建node安装目录，与node项目目录\"><a href=\"#新建node安装目录，与node项目目录\" class=\"headerlink\" title=\"新建node安装目录，与node项目目录\"></a>新建node安装目录，与node项目目录</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /www/dev/node <span class=\"comment\">//目录位置可选</span></span><br><span class=\"line\">下载node二进制文件包：</span><br><span class=\"line\"> sudo wget https:<span class=\"comment\">//nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz //这是目前官网稳定版 后期可自己去官网找</span></span><br><span class=\"line\">解压包命令：</span><br><span class=\"line\"> sudo tar zxvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz --这里有个坑 这个命令会报错</span><br><span class=\"line\">正确解压命令：</span><br><span class=\"line\"> sudo tar xvf node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64.tar.xz</span><br><span class=\"line\">配置node环境变量：</span><br><span class=\"line\"> sudo vim /etc/profile</span><br><span class=\"line\"> <span class=\"comment\">//按i插入到最下面</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> NODE_HOME=<span class=\"regexp\">/www/</span>dev/node/node-v8<span class=\"number\">.11</span><span class=\"number\">.3</span>-linux-x64 <span class=\"comment\">//node安装目录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$PATH:$NODE_HOME/bin --:冒号是分隔符</span><br><span class=\"line\">编辑完以后按<span class=\"string\">'esc'</span> 输入<span class=\"string\">':wq'</span> 回车保存退出</span><br><span class=\"line\">source /etc/profile --使文件生效</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装npm\"><a href=\"#安装npm\" class=\"headerlink\" title=\"安装npm\"></a>安装npm</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:<span class=\"comment\">//npmjs.org/install.sh | sh</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装pm2\"><a href=\"#安装pm2\" class=\"headerlink\" title=\"安装pm2\"></a>安装pm2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install前置，需要在/usr/bin目录下 设置node 和npm 的软链,注意要写绝对路径:</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/node /usr/bin/node</span><br><span class=\"line\"> sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/npm /usr/bin/npm</span><br><span class=\"line\">//执行完这两步才可以npm install</span><br><span class=\"line\">sudo npm install pm2 -g</span><br><span class=\"line\">同时需要配置pm2的软链  ：sudo ln -s /www/dev/node/node-v8.11.3-linux-x64/bin/pm2 /usr/bin/pm2</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传并启动项目-已上传忽略\"><a href=\"#上传并启动项目-已上传忽略\" class=\"headerlink\" title=\"上传并启动项目(已上传忽略)\"></a>上传并启动项目(已上传忽略)</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install <span class=\"comment\">//安装项目所需依赖</span></span><br><span class=\"line\">启动项目: sudo pm2 start index.js<span class=\"comment\">// -- node index.js</span></span><br><span class=\"line\">停止项目: pm2 stop index.js   或全部杀掉 ：pm2 kill</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装配置Nginx\"><a href=\"#安装配置Nginx\" class=\"headerlink\" title=\"安装配置Nginx\"></a>安装配置Nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开始前，请确认gcc g++开发类库是否装好，默认已经安装。</span></span><br><span class=\"line\">  whereis gcc</span><br><span class=\"line\"><span class=\"comment\">//进入安装目录</span></span><br><span class=\"line\">  cd /usr/local/src</span><br><span class=\"line\"><span class=\"comment\">//安装PCRE库</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//zlib.net/zlib-1.2.11.tar.gz</span></span><br><span class=\"line\">  tar zxvf zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span>.tar.gz</span><br><span class=\"line\">  cd zlib<span class=\"number\">-1.2</span><span class=\"number\">.11</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\"><span class=\"comment\">//安装openssl（某些vps默认没装ssl)</span></span><br><span class=\"line\">  wget https:<span class=\"comment\">//www.openssl.org/source/openssl-1.0.1t.tar.gz</span></span><br><span class=\"line\">  tar -zxvf openssl<span class=\"number\">-1.0</span><span class=\"number\">.1</span>t.tar.gz</span><br><span class=\"line\"><span class=\"comment\">//安装nginx</span></span><br><span class=\"line\">  wget http:<span class=\"comment\">//nginx.org/download/nginx-1.1.10.tar.gz</span></span><br><span class=\"line\">  tar -zxvf nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span>.tar.gz</span><br><span class=\"line\">  cd nginx<span class=\"number\">-1.1</span><span class=\"number\">.10</span></span><br><span class=\"line\">  ./configure</span><br><span class=\"line\">  make</span><br><span class=\"line\">  make install</span><br><span class=\"line\">--make install可能会报错：make: *** No rule to make target <span class=\"string\">'install'</span>.  Stop.</span><br><span class=\"line\">解决：</span><br><span class=\"line\">ubuntu下--</span><br><span class=\"line\">  apt-<span class=\"keyword\">get</span> install openssl</span><br><span class=\"line\">  apt-<span class=\"keyword\">get</span> install libssl-dev</span><br><span class=\"line\">centos下--</span><br><span class=\"line\">  yum -y install openssl openssl-devel</span><br><span class=\"line\">然后再从./configure开始执行</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查看nginx是否启动:</span></span><br><span class=\"line\">启动：/usr/local/nginx/sbin/nginx</span><br><span class=\"line\">停止：/usr/local/nginx/sbin/nginx -s stop</span><br><span class=\"line\"> ps aux|grep nginx</span><br><span class=\"line\"><span class=\"comment\">//结果:</span></span><br><span class=\"line\">root     <span class=\"number\">124023</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.0</span>  <span class=\"number\">28732</span>   <span class=\"number\">540</span> ?        Ss   <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class=\"line\">nobody   <span class=\"number\">124024</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.2</span>  <span class=\"number\">29132</span>  <span class=\"number\">2536</span> ?        S    <span class=\"number\">16</span>:<span class=\"number\">59</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> nginx: worker process</span><br><span class=\"line\">root     <span class=\"number\">124048</span>  <span class=\"number\">0.0</span>  <span class=\"number\">0.1</span>  <span class=\"number\">14684</span>  <span class=\"number\">1036</span> pts/<span class=\"number\">0</span>    S+   <span class=\"number\">17</span>:<span class=\"number\">04</span>   <span class=\"number\">0</span>:<span class=\"number\">00</span> grep --color=auto nginx</span><br><span class=\"line\"><span class=\"comment\">//必须有前两个进程 否则启动失败</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改了配置文件以后重启nginx</span></span><br><span class=\"line\">/usr/local/nginx/sbin/nginx -s reload --或者进入到nginx安装目录sbin下执行 ./nginx -s reload</span><br><span class=\"line\"><span class=\"comment\">//贴一小段配置代码：</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">8090</span>;</span><br><span class=\"line\">        server_name  www.shadow.com; #服务器域名</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           # root   html;</span><br><span class=\"line\">           # index  index.html index.htm;</span><br><span class=\"line\">           proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">           proxy_redirect <span class=\"keyword\">default</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the static page /50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /<span class=\"number\">50</span>x.html;</span><br><span class=\"line\">        location = <span class=\"regexp\">/50x.html &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            root   html;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//切换到安装目录</span></span><br><span class=\"line\"> cd /usr/local/soft/  --没有就新建 mkdir soft</span><br><span class=\"line\"><span class=\"comment\">//下载：</span></span><br><span class=\"line\"> curl -O https:<span class=\"comment\">//fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span></span><br><span class=\"line\"><span class=\"comment\">//解压：</span></span><br><span class=\"line\"> tar -zxvf mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span>.tgz</span><br><span class=\"line\"><span class=\"comment\">//移动到/usr/local/mongodb/目录：</span></span><br><span class=\"line\"> mv mongodb-linux-x86_64<span class=\"number\">-3.6</span><span class=\"number\">.4</span> /usr/local/mongodb</span><br><span class=\"line\"><span class=\"comment\">//编辑环境变量：</span></span><br><span class=\"line\"> vim /etc/profile</span><br><span class=\"line\"><span class=\"keyword\">export</span> MONGODB_HOME=<span class=\"regexp\">/usr/</span>local/mongodb/</span><br><span class=\"line\"><span class=\"keyword\">export</span> PATH=$MONGODB_HOME/bin --添加到之前的node前</span><br><span class=\"line\">source /etc/profile --使之生效</span><br><span class=\"line\"><span class=\"comment\">//切换到新目录的bin目录下：</span></span><br><span class=\"line\"> cd /usr/local/mongodb/bin</span><br><span class=\"line\"><span class=\"comment\">//新建mongodb.conf文件：--touch mongodb.conf</span></span><br><span class=\"line\">#端口号</span><br><span class=\"line\">port=<span class=\"number\">27017</span></span><br><span class=\"line\">#数据目录--没有需要手动创建 mkdir</span><br><span class=\"line\">dbpath=<span class=\"regexp\">/usr/</span>local/mongodb/data/db</span><br><span class=\"line\">#日志目录--没有需要手动创建 mkdir touch</span><br><span class=\"line\">logpath=<span class=\"regexp\">/usr/</span>local/mongodb/log/out.log</span><br><span class=\"line\">#设置后台运行</span><br><span class=\"line\">fork=<span class=\"literal\">true</span></span><br><span class=\"line\">#日志输出方式</span><br><span class=\"line\">logappend=<span class=\"literal\">true</span></span><br><span class=\"line\">#开启认证</span><br><span class=\"line\">#auth=true</span><br><span class=\"line\"><span class=\"comment\">//启动mongodb:</span></span><br><span class=\"line\">./mongod -f mongodb.conf</span><br><span class=\"line\">或者：./mongod -config mongodb.conf</span><br></pre></td></tr></table></figure>"},{"title":"nodejs批量修改文件名","date":"2018-03-06T05:44:42.000Z","_content":"nodejs批量修改文件名源代码及使用方法\n<!-- more -->\n##### 先上代码：\n```JavaScript\nlet fs = require('fs'),\n    src = 'src',\n    dist = 'dist',\n    args = process.argv.slice(2),//从数组第二个开始返回\n    filename = 'image',\n    index = 0;\n\n//执行命令错误提示\nif (args.length === 0 || args[0].match('--help')) {\n    console.log('--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n');\n    return false;\n}\n\nargs.forEach((item, i) => {\n    if (item.match('-src')) {\n        src = args[i + 1];//获取源文件文件夹名称\n    } else if (item.match('-dist')) {\n        dist = args[i + 1];//获取目标文件文件夹名称\n    } else if (item.match('-n')) {\n        filename = args[i + 1];//文件名\n    } else if (item.match('-i')) {\n        index = args[i + 1];//文件索引 从x开始\n    }\n});\n\nfs.readdir(src, (err, files) => {//读取源文件目录\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(dist);\n        fs.access(dist, existing => {\n            if (existing) {//如果dist文件夹不存在则新建文件夹\n                fs.mkdir(dist, () => {\n                    copyFile(files, src, dist, filename, index);\n                })\n            } else {\n                copyFile(files, src, dist, filename, index);\n            }\n        });\n    }\n});\n\nfunction copyFile(files, src, dist, filename, index) {\n    files.forEach(n => {\n        let readFile,\n            writeFile,\n            arr = n.split('.'),\n            oldPath = src + '/' + n,//老路径\n            newPath = dist + '/' + filename + index + '.' + arr[arr.length - 1];//拼接文件后缀名 新路径\n        fs.stat(oldPath, (err, stats) => {\n            if (err) {\n                console.log(err);\n            } else if (stats.isFile()) {//判断是否是文件 执行复制移动操作\n                readFile = fs.createReadStream(oldPath);\n                writeFile = fs.createWriteStream(newPath);\n                readFile.pipe(writeFile);//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。\n            }\n        });\n        index++;\n    })\n}\n```\n**使用方法：**`node xx -src imgdir -dist newImgDir -n newName- -i 1`\n>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名\nnewName：新图片的前缀名；1：索引从1开始 可以自定义\n\n","source":"_posts/nodejs批量修改文件名.md","raw":"---\ntitle: nodejs批量修改文件名\ndate: 2018-03-06 13:44:42\ncategories:\n- node\ntags:\n- node\n---\nnodejs批量修改文件名源代码及使用方法\n<!-- more -->\n##### 先上代码：\n```JavaScript\nlet fs = require('fs'),\n    src = 'src',\n    dist = 'dist',\n    args = process.argv.slice(2),//从数组第二个开始返回\n    filename = 'image',\n    index = 0;\n\n//执行命令错误提示\nif (args.length === 0 || args[0].match('--help')) {\n    console.log('--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n');\n    return false;\n}\n\nargs.forEach((item, i) => {\n    if (item.match('-src')) {\n        src = args[i + 1];//获取源文件文件夹名称\n    } else if (item.match('-dist')) {\n        dist = args[i + 1];//获取目标文件文件夹名称\n    } else if (item.match('-n')) {\n        filename = args[i + 1];//文件名\n    } else if (item.match('-i')) {\n        index = args[i + 1];//文件索引 从x开始\n    }\n});\n\nfs.readdir(src, (err, files) => {//读取源文件目录\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(dist);\n        fs.access(dist, existing => {\n            if (existing) {//如果dist文件夹不存在则新建文件夹\n                fs.mkdir(dist, () => {\n                    copyFile(files, src, dist, filename, index);\n                })\n            } else {\n                copyFile(files, src, dist, filename, index);\n            }\n        });\n    }\n});\n\nfunction copyFile(files, src, dist, filename, index) {\n    files.forEach(n => {\n        let readFile,\n            writeFile,\n            arr = n.split('.'),\n            oldPath = src + '/' + n,//老路径\n            newPath = dist + '/' + filename + index + '.' + arr[arr.length - 1];//拼接文件后缀名 新路径\n        fs.stat(oldPath, (err, stats) => {\n            if (err) {\n                console.log(err);\n            } else if (stats.isFile()) {//判断是否是文件 执行复制移动操作\n                readFile = fs.createReadStream(oldPath);\n                writeFile = fs.createWriteStream(newPath);\n                readFile.pipe(writeFile);//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。\n            }\n        });\n        index++;\n    })\n}\n```\n**使用方法：**`node xx -src imgdir -dist newImgDir -n newName- -i 1`\n>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名\nnewName：新图片的前缀名；1：索引从1开始 可以自定义\n\n","slug":"nodejs批量修改文件名","published":1,"updated":"2019-01-05T03:38:35.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2t8001igw7gk6v1pzcs","content":"<p>nodejs批量修改文件名源代码及使用方法<br><a id=\"more\"></a></p>\n<h5 id=\"先上代码：\"><a href=\"#先上代码：\" class=\"headerlink\" title=\"先上代码：\"></a>先上代码：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>),</span><br><span class=\"line\">    src = <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    dist = <span class=\"string\">'dist'</span>,</span><br><span class=\"line\">    args = process.argv.slice(<span class=\"number\">2</span>),<span class=\"comment\">//从数组第二个开始返回</span></span><br><span class=\"line\">    filename = <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行命令错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (args.length === <span class=\"number\">0</span> || args[<span class=\"number\">0</span>].match(<span class=\"string\">'--help'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">args.forEach(<span class=\"function\">(<span class=\"params\">item, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-src'</span>)) &#123;</span><br><span class=\"line\">        src = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取源文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-dist'</span>)) &#123;</span><br><span class=\"line\">        dist = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取目标文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-n'</span>)) &#123;</span><br><span class=\"line\">        filename = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件名</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-i'</span>)) &#123;</span><br><span class=\"line\">        index = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件索引 从x开始</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdir(src, (err, files) =&gt; &#123;<span class=\"comment\">//读取源文件目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(dist);</span><br><span class=\"line\">        fs.access(dist, existing =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (existing) &#123;<span class=\"comment\">//如果dist文件夹不存在则新建文件夹</span></span><br><span class=\"line\">                fs.mkdir(dist, () =&gt; &#123;</span><br><span class=\"line\">                    copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyFile</span>(<span class=\"params\">files, src, dist, filename, index</span>) </span>&#123;</span><br><span class=\"line\">    files.forEach(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> readFile,</span><br><span class=\"line\">            writeFile,</span><br><span class=\"line\">            arr = n.split(<span class=\"string\">'.'</span>),</span><br><span class=\"line\">            oldPath = src + <span class=\"string\">'/'</span> + n,<span class=\"comment\">//老路径</span></span><br><span class=\"line\">            newPath = dist + <span class=\"string\">'/'</span> + filename + index + <span class=\"string\">'.'</span> + arr[arr.length - <span class=\"number\">1</span>];<span class=\"comment\">//拼接文件后缀名 新路径</span></span><br><span class=\"line\">        fs.stat(oldPath, (err, stats) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stats.isFile()) &#123;<span class=\"comment\">//判断是否是文件 执行复制移动操作</span></span><br><span class=\"line\">                readFile = fs.createReadStream(oldPath);</span><br><span class=\"line\">                writeFile = fs.createWriteStream(newPath);</span><br><span class=\"line\">                readFile.pipe(writeFile);<span class=\"comment\">//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>使用方法：</strong><code>node xx -src imgdir -dist newImgDir -n newName- -i 1</code></p>\n<blockquote>\n<p>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名<br>newName：新图片的前缀名；1：索引从1开始 可以自定义</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>nodejs批量修改文件名源代码及使用方法<br>","more":"</p>\n<h5 id=\"先上代码：\"><a href=\"#先上代码：\" class=\"headerlink\" title=\"先上代码：\"></a>先上代码：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>),</span><br><span class=\"line\">    src = <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    dist = <span class=\"string\">'dist'</span>,</span><br><span class=\"line\">    args = process.argv.slice(<span class=\"number\">2</span>),<span class=\"comment\">//从数组第二个开始返回</span></span><br><span class=\"line\">    filename = <span class=\"string\">'image'</span>,</span><br><span class=\"line\">    index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行命令错误提示</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (args.length === <span class=\"number\">0</span> || args[<span class=\"number\">0</span>].match(<span class=\"string\">'--help'</span>)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'--help\\n \\t-src 文件源\\n \\t-dist 文件目标\\n \\t-n 文件名\\n \\t-i 文件名索引\\n'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">args.forEach(<span class=\"function\">(<span class=\"params\">item, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-src'</span>)) &#123;</span><br><span class=\"line\">        src = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取源文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-dist'</span>)) &#123;</span><br><span class=\"line\">        dist = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//获取目标文件文件夹名称</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-n'</span>)) &#123;</span><br><span class=\"line\">        filename = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件名</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.match(<span class=\"string\">'-i'</span>)) &#123;</span><br><span class=\"line\">        index = args[i + <span class=\"number\">1</span>];<span class=\"comment\">//文件索引 从x开始</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdir(src, (err, files) =&gt; &#123;<span class=\"comment\">//读取源文件目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(dist);</span><br><span class=\"line\">        fs.access(dist, existing =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (existing) &#123;<span class=\"comment\">//如果dist文件夹不存在则新建文件夹</span></span><br><span class=\"line\">                fs.mkdir(dist, () =&gt; &#123;</span><br><span class=\"line\">                    copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                copyFile(files, src, dist, filename, index);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">copyFile</span>(<span class=\"params\">files, src, dist, filename, index</span>) </span>&#123;</span><br><span class=\"line\">    files.forEach(<span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> readFile,</span><br><span class=\"line\">            writeFile,</span><br><span class=\"line\">            arr = n.split(<span class=\"string\">'.'</span>),</span><br><span class=\"line\">            oldPath = src + <span class=\"string\">'/'</span> + n,<span class=\"comment\">//老路径</span></span><br><span class=\"line\">            newPath = dist + <span class=\"string\">'/'</span> + filename + index + <span class=\"string\">'.'</span> + arr[arr.length - <span class=\"number\">1</span>];<span class=\"comment\">//拼接文件后缀名 新路径</span></span><br><span class=\"line\">        fs.stat(oldPath, (err, stats) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (stats.isFile()) &#123;<span class=\"comment\">//判断是否是文件 执行复制移动操作</span></span><br><span class=\"line\">                readFile = fs.createReadStream(oldPath);</span><br><span class=\"line\">                writeFile = fs.createWriteStream(newPath);</span><br><span class=\"line\">                readFile.pipe(writeFile);<span class=\"comment\">//把当前的可读流和另外一个可写流连接起来。可读流中的数据会被自动写入到可写流中。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        index++;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>使用方法：</strong><code>node xx -src imgdir -dist newImgDir -n newName- -i 1</code></p>\n<blockquote>\n<p>xx：js文件；imgdir：需要重命名的图片的文件夹名；newImgDir：重命名以后存放图片的文件夹名<br>newName：新图片的前缀名；1：索引从1开始 可以自定义</p>\n</blockquote>"},{"title":"node升级10.x版本以后遇到的坑","date":"2019-01-03T07:40:18.000Z","_content":"node升级10.x版本以后遇到的坑\n<!-- more -->\n##### 报错信息\n![gulp-error.png](/images/gulp-error.png '错误截图')\n##### 解决方案\n```JavaScript\n#在项目根目录下执行\nnpm i natives\n\n#删除之前安装的旧版本\nnpm rm -g gulp(-g 删除全局)\n\n```\n","source":"_posts/node升级10-x版本以后遇到的坑.md","raw":"---\ntitle: node升级10.x版本以后遇到的坑\ndate: 2019-01-03 15:40:18\ncategories:\n- node\ntags:\n- node\n---\nnode升级10.x版本以后遇到的坑\n<!-- more -->\n##### 报错信息\n![gulp-error.png](/images/gulp-error.png '错误截图')\n##### 解决方案\n```JavaScript\n#在项目根目录下执行\nnpm i natives\n\n#删除之前安装的旧版本\nnpm rm -g gulp(-g 删除全局)\n\n```\n","slug":"node升级10-x版本以后遇到的坑","published":1,"updated":"2019-01-05T03:38:35.204Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tb001lgw7gacte2rs7","content":"<p>node升级10.x版本以后遇到的坑<br><a id=\"more\"></a></p>\n<h5 id=\"报错信息\"><a href=\"#报错信息\" class=\"headerlink\" title=\"报错信息\"></a>报错信息</h5><p><img src=\"/images/gulp-error.png\" alt=\"gulp-error.png\" title=\"错误截图\"></p>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在项目根目录下执行</span><br><span class=\"line\">npm i natives</span><br><span class=\"line\"></span><br><span class=\"line\">#删除之前安装的旧版本</span><br><span class=\"line\">npm rm -g gulp(-g 删除全局)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>node升级10.x版本以后遇到的坑<br>","more":"</p>\n<h5 id=\"报错信息\"><a href=\"#报错信息\" class=\"headerlink\" title=\"报错信息\"></a>报错信息</h5><p><img src=\"/images/gulp-error.png\" alt=\"gulp-error.png\" title=\"错误截图\"></p>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#在项目根目录下执行</span><br><span class=\"line\">npm i natives</span><br><span class=\"line\"></span><br><span class=\"line\">#删除之前安装的旧版本</span><br><span class=\"line\">npm rm -g gulp(-g 删除全局)</span><br></pre></td></tr></table></figure>"},{"title":"nodejs搭建简易脚手架遇到得坑","date":"2018-06-14T05:37:32.000Z","_content":"nodejs搭建自己的cli--目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决\n<!-- more -->\n##### 第三方库\n*   [commander.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js)，可以自动的解析命令和参数，用于处理用户输入的命令。\n*   [download-git-repo](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo)，下载并提取 git 仓库，用于下载项目模板。\n*   [Inquirer.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js)，通用的命令行用户界面集合，用于和用户进行交互。\n*   [handlebars.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js)，模板引擎，将用户提交的信息动态填充到文件中。\n*   [ora](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora)，下载过程久的话，可以用于显示下载中的动画效果。\n*   [chalk](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk)，可以给终端的字体加上颜色。\n*   [log-symbols](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols)，可以在终端上显示出 √ 或 × 等的图标。\n\n##### 首先自己搭好一个demo传到github(或者gitLab都可以)\n修改demo得package.json(handlebars语法):\n```JavaScript\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{description}}\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"{{author}}\",\n  \"license\": \"ISC\"\n}\n```\n##### 再建一个新的空项目：\n`npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S`\n在package.json加入字段：\n```JavaScript\n\"bin\": {\n    \"shadownc\": \"./index.js\"//执行文件路径\n  },\n```\n##### index.js:\n```JavaScript\n//在顶部添加这句:\n#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，\n首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。\n//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)\n//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git\n//正确写法：\ndownload('github:Shadownc/express-tpl#master', name, {clone: true}, (err) => {\n    console.log(err ? 'Fail' : 'Success')\n})\n//还有一种简写：\nShadownc/express-tpl#master\n//#master为模板所在的分支\n```\n欢迎加群讨论：163958730 --脚手架暂时不能用啦0.0 等待更新。","source":"_posts/nodejs搭建简易脚手架遇到得坑.md","raw":"---\ntitle: nodejs搭建简易脚手架遇到得坑\ndate: 2018-06-14 13:37:32\ncategories:\n- node\ntags:\n- node\n---\nnodejs搭建自己的cli--目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决\n<!-- more -->\n##### 第三方库\n*   [commander.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js)，可以自动的解析命令和参数，用于处理用户输入的命令。\n*   [download-git-repo](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo)，下载并提取 git 仓库，用于下载项目模板。\n*   [Inquirer.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js)，通用的命令行用户界面集合，用于和用户进行交互。\n*   [handlebars.js](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js)，模板引擎，将用户提交的信息动态填充到文件中。\n*   [ora](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora)，下载过程久的话，可以用于显示下载中的动画效果。\n*   [chalk](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk)，可以给终端的字体加上颜色。\n*   [log-symbols](https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols)，可以在终端上显示出 √ 或 × 等的图标。\n\n##### 首先自己搭好一个demo传到github(或者gitLab都可以)\n修改demo得package.json(handlebars语法):\n```JavaScript\n{\n  \"name\": \"{{name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{description}}\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"{{author}}\",\n  \"license\": \"ISC\"\n}\n```\n##### 再建一个新的空项目：\n`npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S`\n在package.json加入字段：\n```JavaScript\n\"bin\": {\n    \"shadownc\": \"./index.js\"//执行文件路径\n  },\n```\n##### index.js:\n```JavaScript\n//在顶部添加这句:\n#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，\n首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。\n//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)\n//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git\n//正确写法：\ndownload('github:Shadownc/express-tpl#master', name, {clone: true}, (err) => {\n    console.log(err ? 'Fail' : 'Success')\n})\n//还有一种简写：\nShadownc/express-tpl#master\n//#master为模板所在的分支\n```\n欢迎加群讨论：163958730 --脚手架暂时不能用啦0.0 等待更新。","slug":"nodejs搭建简易脚手架遇到得坑","published":1,"updated":"2019-01-05T03:44:53.799Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2td001qgw7g7t740vyj","content":"<p>nodejs搭建自己的cli–目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决<br><a id=\"more\"></a></p>\n<h5 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h5><ul>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js\" target=\"_blank\" rel=\"noopener\">commander.js</a>，可以自动的解析命令和参数，用于处理用户输入的命令。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo\" target=\"_blank\" rel=\"noopener\">download-git-repo</a>，下载并提取 git 仓库，用于下载项目模板。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js\" target=\"_blank\" rel=\"noopener\">Inquirer.js</a>，通用的命令行用户界面集合，用于和用户进行交互。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js\" target=\"_blank\" rel=\"noopener\">handlebars.js</a>，模板引擎，将用户提交的信息动态填充到文件中。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora\" target=\"_blank\" rel=\"noopener\">ora</a>，下载过程久的话，可以用于显示下载中的动画效果。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk\" target=\"_blank\" rel=\"noopener\">chalk</a>，可以给终端的字体加上颜色。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols\" target=\"_blank\" rel=\"noopener\">log-symbols</a>，可以在终端上显示出 √ 或 × 等的图标。</li>\n</ul>\n<h5 id=\"首先自己搭好一个demo传到github-或者gitLab都可以\"><a href=\"#首先自己搭好一个demo传到github-或者gitLab都可以\" class=\"headerlink\" title=\"首先自己搭好一个demo传到github(或者gitLab都可以)\"></a>首先自己搭好一个demo传到github(或者gitLab都可以)</h5><p>修改demo得package.json(handlebars语法):<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"再建一个新的空项目：\"><a href=\"#再建一个新的空项目：\" class=\"headerlink\" title=\"再建一个新的空项目：\"></a>再建一个新的空项目：</h5><p><code>npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S</code><br>在package.json加入字段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"bin\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"shadownc\"</span>: <span class=\"string\">\"./index.js\"</span><span class=\"comment\">//执行文件路径</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js:\"></a>index.js:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顶部添加这句:</span></span><br><span class=\"line\"><span class=\"meta\">#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，</span></span><br><span class=\"line\">首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。</span><br><span class=\"line\"><span class=\"comment\">//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)</span></span><br><span class=\"line\"><span class=\"comment\">//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git</span></span><br><span class=\"line\"><span class=\"comment\">//正确写法：</span></span><br><span class=\"line\">download(<span class=\"string\">'github:Shadownc/express-tpl#master'</span>, name, &#123;<span class=\"attr\">clone</span>: <span class=\"literal\">true</span>&#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err ? <span class=\"string\">'Fail'</span> : <span class=\"string\">'Success'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//还有一种简写：</span></span><br><span class=\"line\">Shadownc/express-tpl#master</span><br><span class=\"line\"><span class=\"comment\">//#master为模板所在的分支</span></span><br></pre></td></tr></table></figure>\n<p>欢迎加群讨论：163958730 –脚手架暂时不能用啦0.0 等待更新。</p>\n","site":{"data":{}},"excerpt":"<p>nodejs搭建自己的cli–目前搭建的下载好像遇到了问题，暂时还没有时间去处理解决<br>","more":"</p>\n<h5 id=\"第三方库\"><a href=\"#第三方库\" class=\"headerlink\" title=\"第三方库\"></a>第三方库</h5><ul>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftj%2Fcommander.js\" target=\"_blank\" rel=\"noopener\">commander.js</a>，可以自动的解析命令和参数，用于处理用户输入的命令。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fflipxfx%2Fdownload-git-repo\" target=\"_blank\" rel=\"noopener\">download-git-repo</a>，下载并提取 git 仓库，用于下载项目模板。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FSBoudrias%2FInquirer.js\" target=\"_blank\" rel=\"noopener\">Inquirer.js</a>，通用的命令行用户界面集合，用于和用户进行交互。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fwycats%2Fhandlebars.js\" target=\"_blank\" rel=\"noopener\">handlebars.js</a>，模板引擎，将用户提交的信息动态填充到文件中。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Fora\" target=\"_blank\" rel=\"noopener\">ora</a>，下载过程久的话，可以用于显示下载中的动画效果。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fchalk%2Fchalk\" target=\"_blank\" rel=\"noopener\">chalk</a>，可以给终端的字体加上颜色。</li>\n<li><a href=\"https://link.juejin.im/?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsindresorhus%2Flog-symbols\" target=\"_blank\" rel=\"noopener\">log-symbols</a>，可以在终端上显示出 √ 或 × 等的图标。</li>\n</ul>\n<h5 id=\"首先自己搭好一个demo传到github-或者gitLab都可以\"><a href=\"#首先自己搭好一个demo传到github-或者gitLab都可以\" class=\"headerlink\" title=\"首先自己搭好一个demo传到github(或者gitLab都可以)\"></a>首先自己搭好一个demo传到github(或者gitLab都可以)</h5><p>修改demo得package.json(handlebars语法):<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"&#123;&#123;name&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"&#123;&#123;description&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"&#123;&#123;author&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"再建一个新的空项目：\"><a href=\"#再建一个新的空项目：\" class=\"headerlink\" title=\"再建一个新的空项目：\"></a>再建一个新的空项目：</h5><p><code>npm install commander download-git-repo inquirer handlebars ora chalk log-symbols -S</code><br>在package.json加入字段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"bin\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"shadownc\"</span>: <span class=\"string\">\"./index.js\"</span><span class=\"comment\">//执行文件路径</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js:\"></a>index.js:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在顶部添加这句:</span></span><br><span class=\"line\"><span class=\"meta\">#!/usr/bin/env node  --这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，</span></span><br><span class=\"line\">首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。</span><br><span class=\"line\"><span class=\"comment\">//download-git-repo踩坑(路径错误导致下载模板失败--git clone status 128)</span></span><br><span class=\"line\"><span class=\"comment\">//从github上下载所需得template 下载地址不是你复制得https://github.com/xxx/xxx.git</span></span><br><span class=\"line\"><span class=\"comment\">//正确写法：</span></span><br><span class=\"line\">download(<span class=\"string\">'github:Shadownc/express-tpl#master'</span>, name, &#123;<span class=\"attr\">clone</span>: <span class=\"literal\">true</span>&#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err ? <span class=\"string\">'Fail'</span> : <span class=\"string\">'Success'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//还有一种简写：</span></span><br><span class=\"line\">Shadownc/express-tpl#master</span><br><span class=\"line\"><span class=\"comment\">//#master为模板所在的分支</span></span><br></pre></td></tr></table></figure>\n<p>欢迎加群讨论：163958730 –脚手架暂时不能用啦0.0 等待更新。</p>"},{"title":"nvm(nodejs版本管理工具)配置全局npm、cnpm","date":"2023-08-04T13:20:31.000Z","_content":"nvm(nodejs版本管理工具)配置全局npm、cnpm\n<!-- more -->\n## 安装nvm(**注意：在下载nvm之前需要卸载本电脑已经安装的node!**)\n1 .我们选择[nvm-windows](https://github.com/coreybutler/nvm-windows)进行安装，可选择releases下最新版本的[nvm-setup.exe](https://github.com/coreybutler/nvm-windows/releases/download/1.1.11/nvm-setup.exe)下载安装。  \n2. 在安装根目录下新建`nodejs`文件夹(此文章安装根目录路径为：`D:\\nvm`)  \n3. 配置环境变量,新增:\n``` shell\nNVM_HOME  D:\\nvm\nNVM_SYMLINK D:\\nvm\\nodejs\n```\n4. 选择`Path`编辑环境变量,新建：\n``` shell\n%NVM_HOME%\n%NVM_SYMLINK%\n```\n## 安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)\n1. 在安装根目录下新建`npm`文件夹\n2. 在`C`盘用户文件夹（`C:\\Users[name]`）下会生成一个`.npmrc`的文件，用记事本打开后可以看到如下内容:\n``` shell\nregistry=https://registry.npmjs.org/\n//新增新建的npm文件夹路径\nprefix=D:\\nvm\\npm\n```\n3. 在系统环境变量中的`Path`添加`D:\\nvm\\npm`这样就可以全局安装`npm`包命令\n4. 全局安装npm、cnpm\n``` shell\nnpm install npm -g\nnpm install cnpm -g\n```\n> 注意nodejs版本太高可能引起`cnpm`的报错,安装指定版本的cnpm命令\n``` shell\nnpm install cnpm@7.1.0 -g\n```\n[node版本与npm版本对应的关系查询网址](https://nodejs.org/zh-cn/download/releases)\n## nvm常用命令\n* nvm list [available]： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。\n* nvm install <version> [arch]： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加--insecure ，可以绕过远端下载服务器的SSL验证。\n* nvm uninstall <version>： 卸载指定版本的nodejs。\n* nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。nvm use <arch>将继续使用所选版本，但根据提供的值切换到32/64位模式的<arch>\n* nvm version： 显示当前运行的nvm版本，可以简写为nvm v\n``` shell\nnvm list　　//查看目前已经安装的版本\nnvm list available //显示可下载版本的部分列表\nnvm install 10.15.0 //安装指定的版本的nodejs\nnvm use 10.15.0 //使用指定版本的nodejs\n```","source":"_posts/nvm-nodejs版本管理工具-配置全局npm、cnpm.md","raw":"---\ntitle: nvm(nodejs版本管理工具)配置全局npm、cnpm\ndate: 2023-08-04 21:20:31\ncategories:\n- node\ntags:\n- node\n---\nnvm(nodejs版本管理工具)配置全局npm、cnpm\n<!-- more -->\n## 安装nvm(**注意：在下载nvm之前需要卸载本电脑已经安装的node!**)\n1 .我们选择[nvm-windows](https://github.com/coreybutler/nvm-windows)进行安装，可选择releases下最新版本的[nvm-setup.exe](https://github.com/coreybutler/nvm-windows/releases/download/1.1.11/nvm-setup.exe)下载安装。  \n2. 在安装根目录下新建`nodejs`文件夹(此文章安装根目录路径为：`D:\\nvm`)  \n3. 配置环境变量,新增:\n``` shell\nNVM_HOME  D:\\nvm\nNVM_SYMLINK D:\\nvm\\nodejs\n```\n4. 选择`Path`编辑环境变量,新建：\n``` shell\n%NVM_HOME%\n%NVM_SYMLINK%\n```\n## 安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)\n1. 在安装根目录下新建`npm`文件夹\n2. 在`C`盘用户文件夹（`C:\\Users[name]`）下会生成一个`.npmrc`的文件，用记事本打开后可以看到如下内容:\n``` shell\nregistry=https://registry.npmjs.org/\n//新增新建的npm文件夹路径\nprefix=D:\\nvm\\npm\n```\n3. 在系统环境变量中的`Path`添加`D:\\nvm\\npm`这样就可以全局安装`npm`包命令\n4. 全局安装npm、cnpm\n``` shell\nnpm install npm -g\nnpm install cnpm -g\n```\n> 注意nodejs版本太高可能引起`cnpm`的报错,安装指定版本的cnpm命令\n``` shell\nnpm install cnpm@7.1.0 -g\n```\n[node版本与npm版本对应的关系查询网址](https://nodejs.org/zh-cn/download/releases)\n## nvm常用命令\n* nvm list [available]： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。\n* nvm install <version> [arch]： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加--insecure ，可以绕过远端下载服务器的SSL验证。\n* nvm uninstall <version>： 卸载指定版本的nodejs。\n* nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。nvm use <arch>将继续使用所选版本，但根据提供的值切换到32/64位模式的<arch>\n* nvm version： 显示当前运行的nvm版本，可以简写为nvm v\n``` shell\nnvm list　　//查看目前已经安装的版本\nnvm list available //显示可下载版本的部分列表\nnvm install 10.15.0 //安装指定的版本的nodejs\nnvm use 10.15.0 //使用指定版本的nodejs\n```","slug":"nvm-nodejs版本管理工具-配置全局npm、cnpm","published":1,"updated":"2023-08-04T13:21:14.888Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tf001tgw7g9o7kityw","content":"<p>nvm(nodejs版本管理工具)配置全局npm、cnpm<br><a id=\"more\"></a></p>\n<h2 id=\"安装nvm-注意：在下载nvm之前需要卸载本电脑已经安装的node\"><a href=\"#安装nvm-注意：在下载nvm之前需要卸载本电脑已经安装的node\" class=\"headerlink\" title=\"安装nvm(注意：在下载nvm之前需要卸载本电脑已经安装的node!)\"></a>安装nvm(<strong>注意：在下载nvm之前需要卸载本电脑已经安装的node!</strong>)</h2><p>1 .我们选择<a href=\"https://github.com/coreybutler/nvm-windows\" target=\"_blank\" rel=\"noopener\">nvm-windows</a>进行安装，可选择releases下最新版本的<a href=\"https://github.com/coreybutler/nvm-windows/releases/download/1.1.11/nvm-setup.exe\" target=\"_blank\" rel=\"noopener\">nvm-setup.exe</a>下载安装。  </p>\n<ol start=\"2\">\n<li>在安装根目录下新建<code>nodejs</code>文件夹(此文章安装根目录路径为：<code>D:\\nvm</code>)  </li>\n<li><p>配置环境变量,新增:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVM_HOME  D:\\nvm</span><br><span class=\"line\">NVM_SYMLINK D:\\nvm\\nodejs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>选择<code>Path</code>编辑环境变量,新建：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">%</span><span class=\"bash\">NVM_HOME%</span></span><br><span class=\"line\"><span class=\"meta\">%</span><span class=\"bash\">NVM_SYMLINK%</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"安装全局使用的npm、cnpm-切换nodejs版本仍旧可用-无需重新安装\"><a href=\"#安装全局使用的npm、cnpm-切换nodejs版本仍旧可用-无需重新安装\" class=\"headerlink\" title=\"安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)\"></a>安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)</h2><ol>\n<li>在安装根目录下新建<code>npm</code>文件夹</li>\n<li><p>在<code>C</code>盘用户文件夹（<code>C:\\Users[name]</code>）下会生成一个<code>.npmrc</code>的文件，用记事本打开后可以看到如下内容:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npmjs.org/</span><br><span class=\"line\">//新增新建的npm文件夹路径</span><br><span class=\"line\">prefix=D:\\nvm\\npm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在系统环境变量中的<code>Path</code>添加<code>D:\\nvm\\npm</code>这样就可以全局安装<code>npm</code>包命令</p>\n</li>\n<li>全局安装npm、cnpm<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install npm -g</span><br><span class=\"line\">npm install cnpm -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>注意nodejs版本太高可能引起<code>cnpm</code>的报错,安装指定版本的cnpm命令<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cnpm@7.1.0 -g</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><a href=\"https://nodejs.org/zh-cn/download/releases\" target=\"_blank\" rel=\"noopener\">node版本与npm版本对应的关系查询网址</a></p>\n<h2 id=\"nvm常用命令\"><a href=\"#nvm常用命令\" class=\"headerlink\" title=\"nvm常用命令\"></a>nvm常用命令</h2><ul>\n<li>nvm list [available]： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。</li>\n<li>nvm install <version> [arch]： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加–insecure ，可以绕过远端下载服务器的SSL验证。</version></li>\n<li>nvm uninstall <version>： 卸载指定版本的nodejs。</version></li>\n<li>nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。nvm use <arch>将继续使用所选版本，但根据提供的值切换到32/64位模式的<arch></arch></arch></li>\n<li>nvm version： 显示当前运行的nvm版本，可以简写为nvm v<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list　　//查看目前已经安装的版本</span><br><span class=\"line\">nvm list available //显示可下载版本的部分列表</span><br><span class=\"line\">nvm install 10.15.0 //安装指定的版本的nodejs</span><br><span class=\"line\">nvm use 10.15.0 //使用指定版本的nodejs</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>nvm(nodejs版本管理工具)配置全局npm、cnpm<br>","more":"</p>\n<h2 id=\"安装nvm-注意：在下载nvm之前需要卸载本电脑已经安装的node\"><a href=\"#安装nvm-注意：在下载nvm之前需要卸载本电脑已经安装的node\" class=\"headerlink\" title=\"安装nvm(注意：在下载nvm之前需要卸载本电脑已经安装的node!)\"></a>安装nvm(<strong>注意：在下载nvm之前需要卸载本电脑已经安装的node!</strong>)</h2><p>1 .我们选择<a href=\"https://github.com/coreybutler/nvm-windows\" target=\"_blank\" rel=\"noopener\">nvm-windows</a>进行安装，可选择releases下最新版本的<a href=\"https://github.com/coreybutler/nvm-windows/releases/download/1.1.11/nvm-setup.exe\" target=\"_blank\" rel=\"noopener\">nvm-setup.exe</a>下载安装。  </p>\n<ol start=\"2\">\n<li>在安装根目录下新建<code>nodejs</code>文件夹(此文章安装根目录路径为：<code>D:\\nvm</code>)  </li>\n<li><p>配置环境变量,新增:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NVM_HOME  D:\\nvm</span><br><span class=\"line\">NVM_SYMLINK D:\\nvm\\nodejs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>选择<code>Path</code>编辑环境变量,新建：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">%</span><span class=\"bash\">NVM_HOME%</span></span><br><span class=\"line\"><span class=\"meta\">%</span><span class=\"bash\">NVM_SYMLINK%</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"安装全局使用的npm、cnpm-切换nodejs版本仍旧可用-无需重新安装\"><a href=\"#安装全局使用的npm、cnpm-切换nodejs版本仍旧可用-无需重新安装\" class=\"headerlink\" title=\"安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)\"></a>安装全局使用的npm、cnpm(切换nodejs版本仍旧可用 无需重新安装)</h2><ol>\n<li>在安装根目录下新建<code>npm</code>文件夹</li>\n<li><p>在<code>C</code>盘用户文件夹（<code>C:\\Users[name]</code>）下会生成一个<code>.npmrc</code>的文件，用记事本打开后可以看到如下内容:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npmjs.org/</span><br><span class=\"line\">//新增新建的npm文件夹路径</span><br><span class=\"line\">prefix=D:\\nvm\\npm</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在系统环境变量中的<code>Path</code>添加<code>D:\\nvm\\npm</code>这样就可以全局安装<code>npm</code>包命令</p>\n</li>\n<li>全局安装npm、cnpm<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install npm -g</span><br><span class=\"line\">npm install cnpm -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>注意nodejs版本太高可能引起<code>cnpm</code>的报错,安装指定版本的cnpm命令<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cnpm@7.1.0 -g</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><a href=\"https://nodejs.org/zh-cn/download/releases\" target=\"_blank\" rel=\"noopener\">node版本与npm版本对应的关系查询网址</a></p>\n<h2 id=\"nvm常用命令\"><a href=\"#nvm常用命令\" class=\"headerlink\" title=\"nvm常用命令\"></a>nvm常用命令</h2><ul>\n<li>nvm list [available]： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。</li>\n<li>nvm install <version> [arch]： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加–insecure ，可以绕过远端下载服务器的SSL验证。</version></li>\n<li>nvm uninstall <version>： 卸载指定版本的nodejs。</version></li>\n<li>nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。nvm use <arch>将继续使用所选版本，但根据提供的值切换到32/64位模式的<arch></arch></arch></li>\n<li>nvm version： 显示当前运行的nvm版本，可以简写为nvm v<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list　　//查看目前已经安装的版本</span><br><span class=\"line\">nvm list available //显示可下载版本的部分列表</span><br><span class=\"line\">nvm install 10.15.0 //安装指定的版本的nodejs</span><br><span class=\"line\">nvm use 10.15.0 //使用指定版本的nodejs</span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"package.json and package-lock.json","date":"2018-09-25T08:33:09.000Z","_content":"走进package.json and package-lock.json\n<!-- more -->\n>package-lock.json是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。\nnpm 5.2.4版本后，如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。\n##### package-lock.json作用\n>1. 安装之后锁定包的版本，手动更改package.json文件安装将不会更新包，想要更新只能使用 npm install xxx@1.0.0 --save 这种方式来进行版本更新package-lock.json 文件才可以\n>2. 加快了npm install 的速度，因为 package-lock.json 文件中已经记录了整个 node_modules 文件夹的树状结构，甚至连模块的下载地址都记录了，再重新安装的时候只需要直接下载文件即可\n```JavaScript\n//指定安装依赖的版本号:\n* '1.0.13'   表示安装指定的版本号，也就是安装1.0.13版本。\n* '~1.0.13' 表示安装1.0.x的最新版本，安装时不改变大版本号和次要版本号。\n* '^1.0.13'  表示安装1.x.x的最新版本，安装时不改变大版本号。\n```\n##### dependencies，devDependencies\n```JavaScript\n--save参数表示将该模块写入dependencies属性，简写: -S,\n--save-dev表示将该模块写入devDependencies属性，简写: -D。\n//生产环境下使用\n\"dependencies\": {\n    \"axios\": \"^0.18.0\",\n    \"vue\": \"^2.5.2\",\n    \"vue-router\": \"^3.0.1\"\n  },\n//开发环境下使用\n  \"devDependencies\": {\n   \"webpack-dev-server\": \"^2.9.1\"\n}\n```","source":"_posts/package.json and package-lock.json.md","raw":"---\ntitle: package.json and package-lock.json\ndate: 2018-09-25 16:33:09\ncategories:\n- node\ntags:\n- node\n---\n走进package.json and package-lock.json\n<!-- more -->\n>package-lock.json是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。\nnpm 5.2.4版本后，如果改了package.json，且package.json和lock文件不同，那么执行`npm i`时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。\n##### package-lock.json作用\n>1. 安装之后锁定包的版本，手动更改package.json文件安装将不会更新包，想要更新只能使用 npm install xxx@1.0.0 --save 这种方式来进行版本更新package-lock.json 文件才可以\n>2. 加快了npm install 的速度，因为 package-lock.json 文件中已经记录了整个 node_modules 文件夹的树状结构，甚至连模块的下载地址都记录了，再重新安装的时候只需要直接下载文件即可\n```JavaScript\n//指定安装依赖的版本号:\n* '1.0.13'   表示安装指定的版本号，也就是安装1.0.13版本。\n* '~1.0.13' 表示安装1.0.x的最新版本，安装时不改变大版本号和次要版本号。\n* '^1.0.13'  表示安装1.x.x的最新版本，安装时不改变大版本号。\n```\n##### dependencies，devDependencies\n```JavaScript\n--save参数表示将该模块写入dependencies属性，简写: -S,\n--save-dev表示将该模块写入devDependencies属性，简写: -D。\n//生产环境下使用\n\"dependencies\": {\n    \"axios\": \"^0.18.0\",\n    \"vue\": \"^2.5.2\",\n    \"vue-router\": \"^3.0.1\"\n  },\n//开发环境下使用\n  \"devDependencies\": {\n   \"webpack-dev-server\": \"^2.9.1\"\n}\n```","slug":"package.json and package-lock.json","published":1,"updated":"2019-01-05T03:38:35.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2th001wgw7g7tkgvy32","content":"<p>走进package.json and package-lock.json<br><a id=\"more\"></a></p>\n<blockquote>\n<p>package-lock.json是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。<br>npm 5.2.4版本后，如果改了package.json，且package.json和lock文件不同，那么执行<code>npm i</code>时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。</p>\n</blockquote>\n<h5 id=\"package-lock-json作用\"><a href=\"#package-lock-json作用\" class=\"headerlink\" title=\"package-lock.json作用\"></a>package-lock.json作用</h5><blockquote>\n<ol>\n<li>安装之后锁定包的版本，手动更改package.json文件安装将不会更新包，想要更新只能使用 npm install <a href=\"mailto:xxx@1.0.0\" target=\"_blank\" rel=\"noopener\">xxx@1.0.0</a> –save 这种方式来进行版本更新package-lock.json 文件才可以</li>\n<li>加快了npm install 的速度，因为 package-lock.json 文件中已经记录了整个 node_modules 文件夹的树状结构，甚至连模块的下载地址都记录了，再重新安装的时候只需要直接下载文件即可<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//指定安装依赖的版本号:</span></span><br><span class=\"line\">* <span class=\"string\">'1.0.13'</span>   表示安装指定的版本号，也就是安装<span class=\"number\">1.0</span><span class=\"number\">.13</span>版本。</span><br><span class=\"line\">* <span class=\"string\">'~1.0.13'</span> 表示安装<span class=\"number\">1.0</span>.x的最新版本，安装时不改变大版本号和次要版本号。</span><br><span class=\"line\">* <span class=\"string\">'^1.0.13'</span>  表示安装<span class=\"number\">1.</span>x.x的最新版本，安装时不改变大版本号。</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h5 id=\"dependencies，devDependencies\"><a href=\"#dependencies，devDependencies\" class=\"headerlink\" title=\"dependencies，devDependencies\"></a>dependencies，devDependencies</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--save参数表示将该模块写入dependencies属性，简写: -S,</span><br><span class=\"line\">--save-dev表示将该模块写入devDependencies属性，简写: -D。</span><br><span class=\"line\"><span class=\"comment\">//生产环境下使用</span></span><br><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"axios\"</span>: <span class=\"string\">\"^0.18.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"^2.5.2\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue-router\"</span>: <span class=\"string\">\"^3.0.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//开发环境下使用</span></span><br><span class=\"line\">  <span class=\"string\">\"devDependencies\"</span>: &#123;</span><br><span class=\"line\">   <span class=\"string\">\"webpack-dev-server\"</span>: <span class=\"string\">\"^2.9.1\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>走进package.json and package-lock.json<br>","more":"</p>\n<blockquote>\n<p>package-lock.json是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。<br>npm 5.2.4版本后，如果改了package.json，且package.json和lock文件不同，那么执行<code>npm i</code>时npm会根据package中的版本号以及语义含义去下载最新的包，并更新至lock。</p>\n</blockquote>\n<h5 id=\"package-lock-json作用\"><a href=\"#package-lock-json作用\" class=\"headerlink\" title=\"package-lock.json作用\"></a>package-lock.json作用</h5><blockquote>\n<ol>\n<li>安装之后锁定包的版本，手动更改package.json文件安装将不会更新包，想要更新只能使用 npm install <a href=\"mailto:xxx@1.0.0\" target=\"_blank\" rel=\"noopener\">xxx@1.0.0</a> –save 这种方式来进行版本更新package-lock.json 文件才可以</li>\n<li>加快了npm install 的速度，因为 package-lock.json 文件中已经记录了整个 node_modules 文件夹的树状结构，甚至连模块的下载地址都记录了，再重新安装的时候只需要直接下载文件即可<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//指定安装依赖的版本号:</span></span><br><span class=\"line\">* <span class=\"string\">'1.0.13'</span>   表示安装指定的版本号，也就是安装<span class=\"number\">1.0</span><span class=\"number\">.13</span>版本。</span><br><span class=\"line\">* <span class=\"string\">'~1.0.13'</span> 表示安装<span class=\"number\">1.0</span>.x的最新版本，安装时不改变大版本号和次要版本号。</span><br><span class=\"line\">* <span class=\"string\">'^1.0.13'</span>  表示安装<span class=\"number\">1.</span>x.x的最新版本，安装时不改变大版本号。</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h5 id=\"dependencies，devDependencies\"><a href=\"#dependencies，devDependencies\" class=\"headerlink\" title=\"dependencies，devDependencies\"></a>dependencies，devDependencies</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--save参数表示将该模块写入dependencies属性，简写: -S,</span><br><span class=\"line\">--save-dev表示将该模块写入devDependencies属性，简写: -D。</span><br><span class=\"line\"><span class=\"comment\">//生产环境下使用</span></span><br><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"axios\"</span>: <span class=\"string\">\"^0.18.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"^2.5.2\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"vue-router\"</span>: <span class=\"string\">\"^3.0.1\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//开发环境下使用</span></span><br><span class=\"line\">  <span class=\"string\">\"devDependencies\"</span>: &#123;</span><br><span class=\"line\">   <span class=\"string\">\"webpack-dev-server\"</span>: <span class=\"string\">\"^2.9.1\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"travis-ci配置","date":"2018-07-18T07:52:53.000Z","_content":"travis-ci自动部署hexo到github教程\n<!-- more -->\n##### .travis.yml--贴一下配置文件\n```JavaScript\nlanguage: node_js\nnode_js: stable\n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\n    \n#安装hexo及插件\ninstall:\n  - npm install  \n\n#清除 生成\nscript:\n  - hexo clean  \n  - hexo g\n\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name \"username\"\n  - git config user.email \"useremail\"\n  - git add .\n  - git commit -m \"update\"\n  - git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" master:master\n  #- git push --force --quiet \"https://${GH_TOKEN}@${你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https}\" master:master\n\n#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build\n#branches:\n#  only:\n#    - blogTS\n\n#build以后的地址\nenv:\n global:\n   - GH_REF: (分发布用的分支地址)  //讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下\n```\n##### 步骤：\n创建 Personal access tokens\nPersonal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。\n\n在 `Settings` -> `Developer settings` -> `Personal access tokens` 中可以生成一个新的 token。\n\n权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。\n\n##### 配置 Travis CI\n注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 `Build only if .travis.yml is present`。你还可以开启 `Limit concurrent jobs` 限制并发任务。为了使配置文件更具通用性，我们需要在` Environment Variables` 中添加几个要用到的环境变量：\n```JavaScript\nGH_TOKEN（生成的 Personal access tokens）\nGIT_NAME（部署时的提交者名称）\nGIT_EMAIL（部署时的提交者邮箱）\nCUSTOM_DOMAIN（自定义域名）\nCUSTOM_PATH（自定义输出目录）\n```\n因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 `Display value in build log`，比如你的 `GH_TOKEN`，否则其它看到日志的人就可以操作你的仓库了。\n","source":"_posts/travis-ci配置.md","raw":"---\ntitle: travis-ci配置\ndate: 2018-07-18 15:52:53\ncategories:\n- git\ntags:\n- git\n---\ntravis-ci自动部署hexo到github教程\n<!-- more -->\n##### .travis.yml--贴一下配置文件\n```JavaScript\nlanguage: node_js\nnode_js: stable\n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\n    \n#安装hexo及插件\ninstall:\n  - npm install  \n\n#清除 生成\nscript:\n  - hexo clean  \n  - hexo g\n\nafter_script:\n  - cd ./public\n  - git init\n  - git config user.name \"username\"\n  - git config user.email \"useremail\"\n  - git add .\n  - git commit -m \"update\"\n  - git push --force --quiet \"https://${GH_TOKEN}@${GH_REF}\" master:master\n  #- git push --force --quiet \"https://${GH_TOKEN}@${你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https}\" master:master\n\n#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build\n#branches:\n#  only:\n#    - blogTS\n\n#build以后的地址\nenv:\n global:\n   - GH_REF: (分发布用的分支地址)  //讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下\n```\n##### 步骤：\n创建 Personal access tokens\nPersonal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。\n\n在 `Settings` -> `Developer settings` -> `Personal access tokens` 中可以生成一个新的 token。\n\n权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。\n\n##### 配置 Travis CI\n注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 `Build only if .travis.yml is present`。你还可以开启 `Limit concurrent jobs` 限制并发任务。为了使配置文件更具通用性，我们需要在` Environment Variables` 中添加几个要用到的环境变量：\n```JavaScript\nGH_TOKEN（生成的 Personal access tokens）\nGIT_NAME（部署时的提交者名称）\nGIT_EMAIL（部署时的提交者邮箱）\nCUSTOM_DOMAIN（自定义域名）\nCUSTOM_PATH（自定义输出目录）\n```\n因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 `Display value in build log`，比如你的 `GH_TOKEN`，否则其它看到日志的人就可以操作你的仓库了。\n","slug":"travis-ci配置","published":1,"updated":"2019-01-05T03:38:35.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tj001zgw7gk7qtt9y5","content":"<p>travis-ci自动部署hexo到github教程<br><a id=\"more\"></a></p>\n<h5 id=\"travis-yml–贴一下配置文件\"><a href=\"#travis-yml–贴一下配置文件\" class=\"headerlink\" title=\".travis.yml–贴一下配置文件\"></a>.travis.yml–贴一下配置文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">#安装hexo及插件</span><br><span class=\"line\">install:</span><br><span class=\"line\">  - npm install  </span><br><span class=\"line\"></span><br><span class=\"line\">#清除 生成</span><br><span class=\"line\">script:</span><br><span class=\"line\">  - hexo clean  </span><br><span class=\"line\">  - hexo g</span><br><span class=\"line\"></span><br><span class=\"line\">after_script:</span><br><span class=\"line\">  - cd ./public</span><br><span class=\"line\">  - git init</span><br><span class=\"line\">  - git config user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">  - git config user.email <span class=\"string\">\"useremail\"</span></span><br><span class=\"line\">  - git add .</span><br><span class=\"line\">  - git commit -m <span class=\"string\">\"update\"</span></span><br><span class=\"line\">  - git push --force --quiet <span class=\"string\">\"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\"</span> master:master</span><br><span class=\"line\">  #- git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https&#125;\" master:master</span><br><span class=\"line\"></span><br><span class=\"line\">#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build</span><br><span class=\"line\">#branches:</span><br><span class=\"line\">#  only:</span><br><span class=\"line\">#    - blogTS</span><br><span class=\"line\"></span><br><span class=\"line\">#build以后的地址</span><br><span class=\"line\">env:</span><br><span class=\"line\"> global:</span><br><span class=\"line\">   - GH_REF: (分发布用的分支地址)  <span class=\"comment\">//讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h5><p>创建 Personal access tokens<br>Personal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。</p>\n<p>在 <code>Settings</code> -&gt; <code>Developer settings</code> -&gt; <code>Personal access tokens</code> 中可以生成一个新的 token。</p>\n<p>权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。</p>\n<h5 id=\"配置-Travis-CI\"><a href=\"#配置-Travis-CI\" class=\"headerlink\" title=\"配置 Travis CI\"></a>配置 Travis CI</h5><p>注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 <code>Build only if .travis.yml is present</code>。你还可以开启 <code>Limit concurrent jobs</code> 限制并发任务。为了使配置文件更具通用性，我们需要在<code>Environment Variables</code> 中添加几个要用到的环境变量：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH_TOKEN（生成的 Personal access tokens）</span><br><span class=\"line\">GIT_NAME（部署时的提交者名称）</span><br><span class=\"line\">GIT_EMAIL（部署时的提交者邮箱）</span><br><span class=\"line\">CUSTOM_DOMAIN（自定义域名）</span><br><span class=\"line\">CUSTOM_PATH（自定义输出目录）</span><br></pre></td></tr></table></figure></p>\n<p>因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 <code>Display value in build log</code>，比如你的 <code>GH_TOKEN</code>，否则其它看到日志的人就可以操作你的仓库了。</p>\n","site":{"data":{}},"excerpt":"<p>travis-ci自动部署hexo到github教程<br>","more":"</p>\n<h5 id=\"travis-yml–贴一下配置文件\"><a href=\"#travis-yml–贴一下配置文件\" class=\"headerlink\" title=\".travis.yml–贴一下配置文件\"></a>.travis.yml–贴一下配置文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js: stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">#安装hexo及插件</span><br><span class=\"line\">install:</span><br><span class=\"line\">  - npm install  </span><br><span class=\"line\"></span><br><span class=\"line\">#清除 生成</span><br><span class=\"line\">script:</span><br><span class=\"line\">  - hexo clean  </span><br><span class=\"line\">  - hexo g</span><br><span class=\"line\"></span><br><span class=\"line\">after_script:</span><br><span class=\"line\">  - cd ./public</span><br><span class=\"line\">  - git init</span><br><span class=\"line\">  - git config user.name <span class=\"string\">\"username\"</span></span><br><span class=\"line\">  - git config user.email <span class=\"string\">\"useremail\"</span></span><br><span class=\"line\">  - git add .</span><br><span class=\"line\">  - git commit -m <span class=\"string\">\"update\"</span></span><br><span class=\"line\">  - git push --force --quiet <span class=\"string\">\"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\"</span> master:master</span><br><span class=\"line\">  #- git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;你得项目地址(如果源码跟发布的不在一个分支 这里是分发布用的分支地址)，不带https&#125;\" master:master</span><br><span class=\"line\"></span><br><span class=\"line\">#默认一个分支可以忽略此配置--监视github仓库中的master分支，分支出现变化就执行build</span><br><span class=\"line\">#branches:</span><br><span class=\"line\">#  only:</span><br><span class=\"line\">#    - blogTS</span><br><span class=\"line\"></span><br><span class=\"line\">#build以后的地址</span><br><span class=\"line\">env:</span><br><span class=\"line\"> global:</span><br><span class=\"line\">   - GH_REF: (分发布用的分支地址)  <span class=\"comment\">//讲道理 这个地方我还不太清楚有什么用 有知道的可以告诉我下</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h5><p>创建 Personal access tokens<br>Personal access tokens 类似传统的 OAuth access tokens，可以无需通过账号密码的方式操作仓库。</p>\n<p>在 <code>Settings</code> -&gt; <code>Developer settings</code> -&gt; <code>Personal access tokens</code> 中可以生成一个新的 token。</p>\n<p>权限控制只需要勾选 repo 就可以了，生成的 token 只会显示一次。</p>\n<h5 id=\"配置-Travis-CI\"><a href=\"#配置-Travis-CI\" class=\"headerlink\" title=\"配置 Travis CI\"></a>配置 Travis CI</h5><p>注册部分就不再赘述了，完成后需要在 account 中对指定仓库开启服务。在对应仓库的 Settings 中开启 <code>Build only if .travis.yml is present</code>。你还可以开启 <code>Limit concurrent jobs</code> 限制并发任务。为了使配置文件更具通用性，我们需要在<code>Environment Variables</code> 中添加几个要用到的环境变量：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GH_TOKEN（生成的 Personal access tokens）</span><br><span class=\"line\">GIT_NAME（部署时的提交者名称）</span><br><span class=\"line\">GIT_EMAIL（部署时的提交者邮箱）</span><br><span class=\"line\">CUSTOM_DOMAIN（自定义域名）</span><br><span class=\"line\">CUSTOM_PATH（自定义输出目录）</span><br></pre></td></tr></table></figure></p>\n<p>因为 Travis CI 的日志是公开的，所以要注意不要对敏感的内容开启 <code>Display value in build log</code>，比如你的 <code>GH_TOKEN</code>，否则其它看到日志的人就可以操作你的仓库了。</p>"},{"title":"return和return false的区别","date":"2018-05-16T06:56:34.000Z","_content":"JavaScript return和return false的区别\n<!-- more -->\n##### return和return false的区别\n一、返回控制与函数结果，\n\n语法为：return 表达式;\n语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果\n\n 二、返回控制，\n\n无函数结果，语法为：return;\n\n在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   \n\n Return False 就相当于终止符，Return True 就相当于执行符。   \n\n 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   \n\n onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   \n\n 你想取消对象的默认动作就可以return false。\n首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。\n```JavaScript\nfunction a(){\n\n   if(True)\n       return false;\n},//这是没有任何问题的。\n```\n\n如果我改成这种\n\n```JavaScript\nfunction a(){\n    return false\n}\nfunction b(){\n    console.log(11);\n    return true\n}\nfunction c(){\n    console.log(22);\n    return true\n}\nfunction test() {\n    if(!a()){\n        console.log(33);\n        return\n    }\n    b();\n    c();\n  }\n  test();//结果只打印33 在if里面加return和return false效果是一样得\n```\n即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面\n\nreturn false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。\n\n总之：return false 只在当前函数有效，不会影响其他外部函数的执行。\n\n \n\n三：总结\n\nretrun true； 返回正确的处理结果。\n\nreturn false；分会错误的处理结果，终止处理。\n\nreturn；把控制权返回给页面。\n\n","source":"_posts/return和returnFalse的区别.md","raw":"---\ntitle: return和return false的区别\ndate: 2018-05-16 14:56:34\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript return和return false的区别\n<!-- more -->\n##### return和return false的区别\n一、返回控制与函数结果，\n\n语法为：return 表达式;\n语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果\n\n 二、返回控制，\n\n无函数结果，语法为：return;\n\n在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   \n\n Return False 就相当于终止符，Return True 就相当于执行符。   \n\n 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   \n\n onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   \n\n 你想取消对象的默认动作就可以return false。\n首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。\n```JavaScript\nfunction a(){\n\n   if(True)\n       return false;\n},//这是没有任何问题的。\n```\n\n如果我改成这种\n\n```JavaScript\nfunction a(){\n    return false\n}\nfunction b(){\n    console.log(11);\n    return true\n}\nfunction c(){\n    console.log(22);\n    return true\n}\nfunction test() {\n    if(!a()){\n        console.log(33);\n        return\n    }\n    b();\n    c();\n  }\n  test();//结果只打印33 在if里面加return和return false效果是一样得\n```\n即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面\n\nreturn false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。\n\n总之：return false 只在当前函数有效，不会影响其他外部函数的执行。\n\n \n\n三：总结\n\nretrun true； 返回正确的处理结果。\n\nreturn false；分会错误的处理结果，终止处理。\n\nreturn；把控制权返回给页面。\n\n","slug":"return和returnFalse的区别","published":1,"updated":"2019-01-05T03:38:35.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tl0022gw7guk2z6zrk","content":"<p>JavaScript return和return false的区别<br><a id=\"more\"></a></p>\n<h5 id=\"return和return-false的区别\"><a href=\"#return和return-false的区别\" class=\"headerlink\" title=\"return和return false的区别\"></a>return和return false的区别</h5><p>一、返回控制与函数结果，</p>\n<p>语法为：return 表达式;<br>语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果</p>\n<p> 二、返回控制，</p>\n<p>无函数结果，语法为：return;</p>\n<p>在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   </p>\n<p> Return False 就相当于终止符，Return True 就相当于执行符。   </p>\n<p> 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   </p>\n<p> onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   </p>\n<p> 你想取消对象的默认动作就可以return false。<br>首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(True)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"comment\">//这是没有任何问题的。</span></span><br></pre></td></tr></table></figure></p>\n<p>如果我改成这种</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">33</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">    c();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test();<span class=\"comment\">//结果只打印33 在if里面加return和return false效果是一样得</span></span><br></pre></td></tr></table></figure>\n<p>即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面</p>\n<p>return false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。</p>\n<p>总之：return false 只在当前函数有效，不会影响其他外部函数的执行。</p>\n<p>三：总结</p>\n<p>retrun true； 返回正确的处理结果。</p>\n<p>return false；分会错误的处理结果，终止处理。</p>\n<p>return；把控制权返回给页面。</p>\n","site":{"data":{}},"excerpt":"<p>JavaScript return和return false的区别<br>","more":"</p>\n<h5 id=\"return和return-false的区别\"><a href=\"#return和return-false的区别\" class=\"headerlink\" title=\"return和return false的区别\"></a>return和return false的区别</h5><p>一、返回控制与函数结果，</p>\n<p>语法为：return 表达式;<br>语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果</p>\n<p> 二、返回控制，</p>\n<p>无函数结果，语法为：return;</p>\n<p>在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个a标签,页面会跳转到该元素href属性指定的页.   </p>\n<p> Return False 就相当于终止符，Return True 就相当于执行符。   </p>\n<p> 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的   </p>\n<p> onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果   </p>\n<p> 你想取消对象的默认动作就可以return false。<br>首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(True)</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;,<span class=\"comment\">//这是没有任何问题的。</span></span><br></pre></td></tr></table></figure></p>\n<p>如果我改成这种</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!a())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">33</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    b();</span><br><span class=\"line\">    c();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  test();<span class=\"comment\">//结果只打印33 在if里面加return和return false效果是一样得</span></span><br></pre></td></tr></table></figure>\n<p>即使a函数返回return false 阻止提交了，但是不影响 b()以及 c()函数的执行。在Test()函数里调用a()函数，那面里面</p>\n<p>return false 对于Test()函数来说，只是相当于返回值。而不能阻止Test()函数执行。</p>\n<p>总之：return false 只在当前函数有效，不会影响其他外部函数的执行。</p>\n<p>三：总结</p>\n<p>retrun true； 返回正确的处理结果。</p>\n<p>return false；分会错误的处理结果，终止处理。</p>\n<p>return；把控制权返回给页面。</p>"},{"title":"vue-transition","date":"2018-03-02T06:02:44.000Z","_content":"vue的过渡动画css\n<!-- more -->\n##### 关于vue的过渡动画,先上css:\n```css\n/* // down */\n.slide-down-enter-active {\n  transition: all 0.4s ease;\n}\n.slide-down-leave-active {\n  /* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */\n  transition: all 0.4s;\n}\n.slide-down-enter,\n.slide-down-leave-active {\n  transform: translateY(20px);\n  opacity: 0;\n}\n.slide-down-move {\n  transition: all 0.4s;\n}\n.slide-down-leave-active {\n  /* position: absolute !important;\n  width: 100%; */\n}\n\n/* // up */\n.slide-up-enter-active {\n  transition: all 0.5s ease 0.3s;\n}\n.slide-up-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-up-enter,\n.slide-up-leave-active {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n.slide-up-move {\n  transition: all 0.5s;\n}\n\n/* // left */\n.slide-left-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-left-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-left-enter {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-left-leave-active {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-left-move {\n  transition: all 0.5s;\n}\n\n/* // right */\n.slide-right-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-right-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-right-enter {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-right-leave-active {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-right-move {\n  transition: all 0.5s;\n}\n\n/* // fade */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-active {\n  opacity: 0;\n}\n.fade-move {\n  transition: transform 0.3s;\n}\n```\n使用方法：\n```\n<button v-on:click=\"show = !show\">\n            展开列表\n        </button>\n        <transition name=\"fade\">\n            <ul v-show=\"show\">\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n            </ul>\n        </transition>\n```\n测试案例就不放了。。自己放到代码里试试效果呗~\n**欢迎前端小伙伴加群一起学习进步：163958730**","source":"_posts/vue-transition.md","raw":"---\ntitle: vue-transition\ndate: 2018-03-02 14:02:44\ncategories:\n- Vue\ntags:\n- Vue\n---\nvue的过渡动画css\n<!-- more -->\n##### 关于vue的过渡动画,先上css:\n```css\n/* // down */\n.slide-down-enter-active {\n  transition: all 0.4s ease;\n}\n.slide-down-leave-active {\n  /* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */\n  transition: all 0.4s;\n}\n.slide-down-enter,\n.slide-down-leave-active {\n  transform: translateY(20px);\n  opacity: 0;\n}\n.slide-down-move {\n  transition: all 0.4s;\n}\n.slide-down-leave-active {\n  /* position: absolute !important;\n  width: 100%; */\n}\n\n/* // up */\n.slide-up-enter-active {\n  transition: all 0.5s ease 0.3s;\n}\n.slide-up-leave-active {\n  transition: all 0.5s ease;\n}\n.slide-up-enter,\n.slide-up-leave-active {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n.slide-up-move {\n  transition: all 0.5s;\n}\n\n/* // left */\n.slide-left-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-left-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-left-enter {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-left-leave-active {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-left-move {\n  transition: all 0.5s;\n}\n\n/* // right */\n.slide-right-enter-active {\n  transition: all 0.5s ease;\n}\n.slide-right-leave-active {\n  transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n}\n.slide-right-enter {\n  transform: translateX(-20px);\n  opacity: 0;\n}\n.slide-right-leave-active {\n  transform: translateX(20px);\n  opacity: 0;\n}\n.slide-right-move {\n  transition: all 0.5s;\n}\n\n/* // fade */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n.fade-enter,\n.fade-leave-active {\n  opacity: 0;\n}\n.fade-move {\n  transition: transform 0.3s;\n}\n```\n使用方法：\n```\n<button v-on:click=\"show = !show\">\n            展开列表\n        </button>\n        <transition name=\"fade\">\n            <ul v-show=\"show\">\n                <li>1</li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n            </ul>\n        </transition>\n```\n测试案例就不放了。。自己放到代码里试试效果呗~\n**欢迎前端小伙伴加群一起学习进步：163958730**","slug":"vue-transition","published":1,"updated":"2019-01-05T03:38:35.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tm0025gw7g1tmvcv0d","content":"<p>vue的过渡动画css<br><a id=\"more\"></a></p>\n<h5 id=\"关于vue的过渡动画-先上css\"><a href=\"#关于vue的过渡动画-先上css\" class=\"headerlink\" title=\"关于vue的过渡动画,先上css:\"></a>关于vue的过渡动画,先上css:</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* // down */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* position: absolute !important;</span></span><br><span class=\"line\"><span class=\"comment\">  width: 100%; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // up */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // left */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.55</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // right */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.55</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // fade */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter-active</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class=\"line\">            展开列表</span><br><span class=\"line\">        &lt;/button&gt;</span><br><span class=\"line\">        &lt;transition name=&quot;fade&quot;&gt;</span><br><span class=\"line\">            &lt;ul v-show=&quot;show&quot;&gt;</span><br><span class=\"line\">                &lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;3&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;4&lt;/li&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">        &lt;/transition&gt;</span><br></pre></td></tr></table></figure></p>\n<p>测试案例就不放了。。自己放到代码里试试效果呗~<br><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>\n","site":{"data":{}},"excerpt":"<p>vue的过渡动画css<br>","more":"</p>\n<h5 id=\"关于vue的过渡动画-先上css\"><a href=\"#关于vue的过渡动画-先上css\" class=\"headerlink\" title=\"关于vue的过渡动画,先上css:\"></a>关于vue的过渡动画,先上css:</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* // down */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* transition: all 0.4s cubic-bezier(1, 0.5, 0.8, 1); */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-down-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* position: absolute !important;</span></span><br><span class=\"line\"><span class=\"comment\">  width: 100%; */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // up */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-up-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // left */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.55</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-left-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // right */</span></span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.55</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-enter</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">20px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.slide-right-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* // fade */</span></span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter-active</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-enter</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.fade-leave-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fade-move</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: transform <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class=\"line\">            展开列表</span><br><span class=\"line\">        &lt;/button&gt;</span><br><span class=\"line\">        &lt;transition name=&quot;fade&quot;&gt;</span><br><span class=\"line\">            &lt;ul v-show=&quot;show&quot;&gt;</span><br><span class=\"line\">                &lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;3&lt;/li&gt;</span><br><span class=\"line\">                &lt;li&gt;4&lt;/li&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">        &lt;/transition&gt;</span><br></pre></td></tr></table></figure></p>\n<p>测试案例就不放了。。自己放到代码里试试效果呗~<br><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>"},{"title":"分秒倒计时","date":"2018-05-11T10:05:01.000Z","_content":"Vue倒计时代码--适用于未支付订单倒计时\n<!-- more -->\n```JavaScript\ndata() {\n    return {\n      timeLeft: \"\"\n    };\n  },\n//在mounted中调用\n mounted() {\n    setInterval(this.countTime, 1000);\n  },\n//方法如下\nmethods: {\n    countTime() {\n      //获取当前时间\n      let date = new Date();\n      let now = date.getTime();\n      //设置截止时间\n      //let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间\n      let end = new Date(\"2018-05-11 15:02\").getTime() + 15 * 60 * 1000;\n      //console.log(end, \"结束时间\");\n      //时间差\n      let leftT = end - now;\n      //console.log(leftT, \"时间差\");\n      //定义变量 d,h,m,s保存倒计时的时间\n      let d, h, m, s;\n      if (leftT >= 0) {\n        //d = Math.floor(leftT / 1000 / 60 / 60 / 24);\n        //h = Math.floor((leftT / 1000 / 60 / 60) % 24);\n        m = Math.floor((leftT / 1000 / 60) % 60);\n        s = Math.floor((leftT / 1000) % 60);\n      } else {\n        m = 0;\n        s = 0;\n      }\n      clearInterval(this.countTime);\n      //将倒计时赋值到data中\n      this.timeLeft = `${m}分${s<10 ? `0${s}` : `${s}` }秒`;\n    }\n  }\n```\n\n```JavaScript\nvar timerHourDown;\nfunction getTime(timeStamp) {\n    //时分倒计时\n    if (timeStamp > 0) {\n        var h = 0;\n        var m = 0;\n        var s = 0;\n        function countDown() {\n            $('.icon-dater').show()\n            if (timeStamp <= 0) {\n                clearInterval(timerHourDown)\n                $('.icon-dater').hide()\n            }\n            timeStamp -= 1000\n            h = Math.floor((timeStamp / 1000 / 60 / 60) % 24);\n            m = Math.floor((timeStamp / 1000 / 60) % 60);\n            s = Math.floor((timeStamp / 1000) % 60);\n            //console.log(timeStamp, s);\n            $('.icon-dater').empty().html(h + \"小时\" + m + \"分后自动确认\")\n        }\n        timerHourDown = setInterval(countDown, 1000);\n    } else {\n        setTimeout(function () {\n            $('.icon-dater').hide()\n        }, 0)\n        clearInterval(timerHourDown)\n    }\n}\n\n    var d = parseInt(timeStamp / (24 * 60 * 60 * 1000));//天数\n    var h = parseInt(timeStamp / (60 * 60 * 1000) % 24);//当前天内小时\n    var hh = parseInt(timeStamp / (60 * 60 * 1000));//单纯剩余小时\n    var m = parseInt(timeStamp / (60 * 1000) % 60);//当前小时内剩余分钟\n    var mm = parseInt(timeStamp / 60 / 1000);//单纯剩余分钟\n    var s = parseInt(timeStamp / 1000 % 60);//当前分钟内剩余秒数\n    var ss = parseInt(timeStamp / 1000);//单纯剩余秒数\n```","source":"_posts/分秒倒计时.md","raw":"---\ntitle: 分秒倒计时\ndate: 2018-05-11 18:05:01\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nVue倒计时代码--适用于未支付订单倒计时\n<!-- more -->\n```JavaScript\ndata() {\n    return {\n      timeLeft: \"\"\n    };\n  },\n//在mounted中调用\n mounted() {\n    setInterval(this.countTime, 1000);\n  },\n//方法如下\nmethods: {\n    countTime() {\n      //获取当前时间\n      let date = new Date();\n      let now = date.getTime();\n      //设置截止时间\n      //let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间\n      let end = new Date(\"2018-05-11 15:02\").getTime() + 15 * 60 * 1000;\n      //console.log(end, \"结束时间\");\n      //时间差\n      let leftT = end - now;\n      //console.log(leftT, \"时间差\");\n      //定义变量 d,h,m,s保存倒计时的时间\n      let d, h, m, s;\n      if (leftT >= 0) {\n        //d = Math.floor(leftT / 1000 / 60 / 60 / 24);\n        //h = Math.floor((leftT / 1000 / 60 / 60) % 24);\n        m = Math.floor((leftT / 1000 / 60) % 60);\n        s = Math.floor((leftT / 1000) % 60);\n      } else {\n        m = 0;\n        s = 0;\n      }\n      clearInterval(this.countTime);\n      //将倒计时赋值到data中\n      this.timeLeft = `${m}分${s<10 ? `0${s}` : `${s}` }秒`;\n    }\n  }\n```\n\n```JavaScript\nvar timerHourDown;\nfunction getTime(timeStamp) {\n    //时分倒计时\n    if (timeStamp > 0) {\n        var h = 0;\n        var m = 0;\n        var s = 0;\n        function countDown() {\n            $('.icon-dater').show()\n            if (timeStamp <= 0) {\n                clearInterval(timerHourDown)\n                $('.icon-dater').hide()\n            }\n            timeStamp -= 1000\n            h = Math.floor((timeStamp / 1000 / 60 / 60) % 24);\n            m = Math.floor((timeStamp / 1000 / 60) % 60);\n            s = Math.floor((timeStamp / 1000) % 60);\n            //console.log(timeStamp, s);\n            $('.icon-dater').empty().html(h + \"小时\" + m + \"分后自动确认\")\n        }\n        timerHourDown = setInterval(countDown, 1000);\n    } else {\n        setTimeout(function () {\n            $('.icon-dater').hide()\n        }, 0)\n        clearInterval(timerHourDown)\n    }\n}\n\n    var d = parseInt(timeStamp / (24 * 60 * 60 * 1000));//天数\n    var h = parseInt(timeStamp / (60 * 60 * 1000) % 24);//当前天内小时\n    var hh = parseInt(timeStamp / (60 * 60 * 1000));//单纯剩余小时\n    var m = parseInt(timeStamp / (60 * 1000) % 60);//当前小时内剩余分钟\n    var mm = parseInt(timeStamp / 60 / 1000);//单纯剩余分钟\n    var s = parseInt(timeStamp / 1000 % 60);//当前分钟内剩余秒数\n    var ss = parseInt(timeStamp / 1000);//单纯剩余秒数\n```","slug":"分秒倒计时","published":1,"updated":"2020-07-15T15:06:34.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2to0028gw7gydhhlyyi","content":"<p>Vue倒计时代码–适用于未支付订单倒计时<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      timeLeft: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//在mounted中调用</span></span><br><span class=\"line\"> mounted() &#123;</span><br><span class=\"line\">    setInterval(<span class=\"keyword\">this</span>.countTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//方法如下</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    countTime() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> now = date.getTime();</span><br><span class=\"line\">      <span class=\"comment\">//设置截止时间</span></span><br><span class=\"line\">      <span class=\"comment\">//let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"2018-05-11 15:02\"</span>).getTime() + <span class=\"number\">15</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(end, \"结束时间\");</span></span><br><span class=\"line\">      <span class=\"comment\">//时间差</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> leftT = end - now;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(leftT, \"时间差\");</span></span><br><span class=\"line\">      <span class=\"comment\">//定义变量 d,h,m,s保存倒计时的时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> d, h, m, s;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (leftT &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//d = Math.floor(leftT / 1000 / 60 / 60 / 24);</span></span><br><span class=\"line\">        <span class=\"comment\">//h = Math.floor((leftT / 1000 / 60 / 60) % 24);</span></span><br><span class=\"line\">        m = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">        s = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        s = <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      clearInterval(<span class=\"keyword\">this</span>.countTime);</span><br><span class=\"line\">      <span class=\"comment\">//将倒计时赋值到data中</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.timeLeft = <span class=\"string\">`<span class=\"subst\">$&#123;m&#125;</span>分<span class=\"subst\">$&#123;s&lt;<span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;s&#125;</span>`</span> : <span class=\"string\">`<span class=\"subst\">$&#123;s&#125;</span>`</span> &#125;</span>秒`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> timerHourDown;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTime</span>(<span class=\"params\">timeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时分倒计时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeStamp &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> h = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">countDown</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).show()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timeStamp &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                clearInterval(timerHourDown)</span><br><span class=\"line\">                $(<span class=\"string\">'.icon-dater'</span>).hide()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            timeStamp -= <span class=\"number\">1000</span></span><br><span class=\"line\">            h = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span>) % <span class=\"number\">24</span>);</span><br><span class=\"line\">            m = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">            s = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">            <span class=\"comment\">//console.log(timeStamp, s);</span></span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).empty().html(h + <span class=\"string\">\"小时\"</span> + m + <span class=\"string\">\"分后自动确认\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        timerHourDown = setInterval(countDown, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).hide()</span><br><span class=\"line\">        &#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">        clearInterval(timerHourDown)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> d = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>));<span class=\"comment\">//天数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) % <span class=\"number\">24</span>);<span class=\"comment\">//当前天内小时</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hh = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>));<span class=\"comment\">//单纯剩余小时</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);<span class=\"comment\">//当前小时内剩余分钟</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mm = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">60</span> / <span class=\"number\">1000</span>);<span class=\"comment\">//单纯剩余分钟</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">1000</span> % <span class=\"number\">60</span>);<span class=\"comment\">//当前分钟内剩余秒数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ss = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">1000</span>);<span class=\"comment\">//单纯剩余秒数</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Vue倒计时代码–适用于未支付订单倒计时<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      timeLeft: <span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//在mounted中调用</span></span><br><span class=\"line\"> mounted() &#123;</span><br><span class=\"line\">    setInterval(<span class=\"keyword\">this</span>.countTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">//方法如下</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    countTime() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">      <span class=\"keyword\">let</span> now = date.getTime();</span><br><span class=\"line\">      <span class=\"comment\">//设置截止时间</span></span><br><span class=\"line\">      <span class=\"comment\">//let end = new Date(this.detail.CreatedDate).getTime() + 15 * 60 * 1000;//this.detail.CreatedDate可以是后端返回的创建时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"2018-05-11 15:02\"</span>).getTime() + <span class=\"number\">15</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(end, \"结束时间\");</span></span><br><span class=\"line\">      <span class=\"comment\">//时间差</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> leftT = end - now;</span><br><span class=\"line\">      <span class=\"comment\">//console.log(leftT, \"时间差\");</span></span><br><span class=\"line\">      <span class=\"comment\">//定义变量 d,h,m,s保存倒计时的时间</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> d, h, m, s;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (leftT &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//d = Math.floor(leftT / 1000 / 60 / 60 / 24);</span></span><br><span class=\"line\">        <span class=\"comment\">//h = Math.floor((leftT / 1000 / 60 / 60) % 24);</span></span><br><span class=\"line\">        m = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">        s = <span class=\"built_in\">Math</span>.floor((leftT / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        s = <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      clearInterval(<span class=\"keyword\">this</span>.countTime);</span><br><span class=\"line\">      <span class=\"comment\">//将倒计时赋值到data中</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.timeLeft = <span class=\"string\">`<span class=\"subst\">$&#123;m&#125;</span>分<span class=\"subst\">$&#123;s&lt;<span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;s&#125;</span>`</span> : <span class=\"string\">`<span class=\"subst\">$&#123;s&#125;</span>`</span> &#125;</span>秒`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> timerHourDown;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTime</span>(<span class=\"params\">timeStamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时分倒计时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timeStamp &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> h = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> m = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">countDown</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).show()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timeStamp &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                clearInterval(timerHourDown)</span><br><span class=\"line\">                $(<span class=\"string\">'.icon-dater'</span>).hide()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            timeStamp -= <span class=\"number\">1000</span></span><br><span class=\"line\">            h = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span>) % <span class=\"number\">24</span>);</span><br><span class=\"line\">            m = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span> / <span class=\"number\">60</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">            s = <span class=\"built_in\">Math</span>.floor((timeStamp / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);</span><br><span class=\"line\">            <span class=\"comment\">//console.log(timeStamp, s);</span></span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).empty().html(h + <span class=\"string\">\"小时\"</span> + m + <span class=\"string\">\"分后自动确认\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        timerHourDown = setInterval(countDown, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            $(<span class=\"string\">'.icon-dater'</span>).hide()</span><br><span class=\"line\">        &#125;, <span class=\"number\">0</span>)</span><br><span class=\"line\">        clearInterval(timerHourDown)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> d = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>));<span class=\"comment\">//天数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) % <span class=\"number\">24</span>);<span class=\"comment\">//当前天内小时</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hh = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>));<span class=\"comment\">//单纯剩余小时</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(timeStamp / (<span class=\"number\">60</span> * <span class=\"number\">1000</span>) % <span class=\"number\">60</span>);<span class=\"comment\">//当前小时内剩余分钟</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mm = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">60</span> / <span class=\"number\">1000</span>);<span class=\"comment\">//单纯剩余分钟</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">1000</span> % <span class=\"number\">60</span>);<span class=\"comment\">//当前分钟内剩余秒数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ss = <span class=\"built_in\">parseInt</span>(timeStamp / <span class=\"number\">1000</span>);<span class=\"comment\">//单纯剩余秒数</span></span><br></pre></td></tr></table></figure>"},{"title":"关于最新版vue-cli","date":"2018-01-15T05:24:49.000Z","_content":"vue-cli创建项目报错原因及解决\n<!-- more -->\n### 如题。。\n今天准备新建个`vue-cli`的项目测试用，但是当你`cmd`执行命令的时候却一直报错。。\n`cmd`命令：\n```\nvue init webpack projectName\n```\n**执行上面的命令时报了如下错误：**\n![](/images/vueerror.jpg '错误截图')\n\n度娘上搜也并没有发现很好的解决办法。。\n最后本地`cmd`查看了下`vue-cli`的版本\n发现是**2.8.1**的，下面就是解决这个报错的方法：\n```\nnpm i vue-cli -g\n```\n**将本地的vue-cli升级到最新版本**\n**有不同见解的小伙伴欢迎加群163958730讨论**","source":"_posts/关于最新版vue-cli.md","raw":"---\ntitle: '关于最新版vue-cli'\ndate: 2018-01-15 13:24:49\ncategories:\n- Vue\ntags:\n- Vue\n---\nvue-cli创建项目报错原因及解决\n<!-- more -->\n### 如题。。\n今天准备新建个`vue-cli`的项目测试用，但是当你`cmd`执行命令的时候却一直报错。。\n`cmd`命令：\n```\nvue init webpack projectName\n```\n**执行上面的命令时报了如下错误：**\n![](/images/vueerror.jpg '错误截图')\n\n度娘上搜也并没有发现很好的解决办法。。\n最后本地`cmd`查看了下`vue-cli`的版本\n发现是**2.8.1**的，下面就是解决这个报错的方法：\n```\nnpm i vue-cli -g\n```\n**将本地的vue-cli升级到最新版本**\n**有不同见解的小伙伴欢迎加群163958730讨论**","slug":"关于最新版vue-cli","published":1,"updated":"2019-01-05T03:38:35.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tq002bgw7gwgtscrc0","content":"<p>vue-cli创建项目报错原因及解决<br><a id=\"more\"></a></p>\n<h3 id=\"如题。。\"><a href=\"#如题。。\" class=\"headerlink\" title=\"如题。。\"></a>如题。。</h3><p>今天准备新建个<code>vue-cli</code>的项目测试用，但是当你<code>cmd</code>执行命令的时候却一直报错。。<br><code>cmd</code>命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack projectName</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行上面的命令时报了如下错误：</strong><br><img src=\"/images/vueerror.jpg\" alt title=\"错误截图\"></p>\n<p>度娘上搜也并没有发现很好的解决办法。。<br>最后本地<code>cmd</code>查看了下<code>vue-cli</code>的版本<br>发现是<strong>2.8.1</strong>的，下面就是解决这个报错的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-cli -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>将本地的vue-cli升级到最新版本</strong><br><strong>有不同见解的小伙伴欢迎加群163958730讨论</strong></p>\n","site":{"data":{}},"excerpt":"<p>vue-cli创建项目报错原因及解决<br>","more":"</p>\n<h3 id=\"如题。。\"><a href=\"#如题。。\" class=\"headerlink\" title=\"如题。。\"></a>如题。。</h3><p>今天准备新建个<code>vue-cli</code>的项目测试用，但是当你<code>cmd</code>执行命令的时候却一直报错。。<br><code>cmd</code>命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack projectName</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行上面的命令时报了如下错误：</strong><br><img src=\"/images/vueerror.jpg\" alt title=\"错误截图\"></p>\n<p>度娘上搜也并没有发现很好的解决办法。。<br>最后本地<code>cmd</code>查看了下<code>vue-cli</code>的版本<br>发现是<strong>2.8.1</strong>的，下面就是解决这个报错的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vue-cli -g</span><br></pre></td></tr></table></figure></p>\n<p><strong>将本地的vue-cli升级到最新版本</strong><br><strong>有不同见解的小伙伴欢迎加群163958730讨论</strong></p>"},{"title":"vue点击空白处隐藏","date":"2018-03-15T07:59:01.000Z","_content":"Vue点击空白处隐藏--适用于pc菜单展开的隐藏\n<!-- more -->\n##### 方法有两种\n1.div失去焦点事件：\n```JavaScript\n<div @click=\"show()\" :tabindex=\"-1\" @blur=\"hide()\">hide</div>\n//hide方法里控制v-if,v-show\n```\n2.监听点击事件\n```JavaScript\ndocument.addEventListener(\"click\", e => {\n      console.log(e.target);\n      if (!this.$el.contains(e.target)) this.show = false;\n    });\n//this.show 为data中控制v-if,v-show的属性\n```","source":"_posts/vue点击空白处隐藏.md","raw":"---\ntitle: vue点击空白处隐藏\ndate: 2018-03-15 15:59:01\ncategories:\n- Vue\ntags:\n- Vue\n---\nVue点击空白处隐藏--适用于pc菜单展开的隐藏\n<!-- more -->\n##### 方法有两种\n1.div失去焦点事件：\n```JavaScript\n<div @click=\"show()\" :tabindex=\"-1\" @blur=\"hide()\">hide</div>\n//hide方法里控制v-if,v-show\n```\n2.监听点击事件\n```JavaScript\ndocument.addEventListener(\"click\", e => {\n      console.log(e.target);\n      if (!this.$el.contains(e.target)) this.show = false;\n    });\n//this.show 为data中控制v-if,v-show的属性\n```","slug":"vue点击空白处隐藏","published":1,"updated":"2019-01-05T03:38:35.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2ts002egw7g96yb9fbh","content":"<p>Vue点击空白处隐藏–适用于pc菜单展开的隐藏<br><a id=\"more\"></a></p>\n<h5 id=\"方法有两种\"><a href=\"#方法有两种\" class=\"headerlink\" title=\"方法有两种\"></a>方法有两种</h5><p>1.div失去焦点事件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div @click=<span class=\"string\">\"show()\"</span> :tabindex=<span class=\"string\">\"-1\"</span> @blur=<span class=\"string\">\"hide()\"</span>&gt;hide&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/hide方法里控制v-if,v-show</span></span><br></pre></td></tr></table></figure></p>\n<p>2.监听点击事件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"click\"</span>, e =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(e.target);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.$el.contains(e.target)) <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//this.show 为data中控制v-if,v-show的属性</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Vue点击空白处隐藏–适用于pc菜单展开的隐藏<br>","more":"</p>\n<h5 id=\"方法有两种\"><a href=\"#方法有两种\" class=\"headerlink\" title=\"方法有两种\"></a>方法有两种</h5><p>1.div失去焦点事件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div @click=<span class=\"string\">\"show()\"</span> :tabindex=<span class=\"string\">\"-1\"</span> @blur=<span class=\"string\">\"hide()\"</span>&gt;hide&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/hide方法里控制v-if,v-show</span></span><br></pre></td></tr></table></figure></p>\n<p>2.监听点击事件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"click\"</span>, e =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(e.target);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.$el.contains(e.target)) <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//this.show 为data中控制v-if,v-show的属性</span></span><br></pre></td></tr></table></figure></p>"},{"title":"something about Vuex...","date":"2018-01-17T08:41:37.000Z","_content":"Vuex从入门到放弃...哈哈哈\n<!-- more -->\n安装什么得应该不用多说了吧。。不会安装的点击官网链接\n\n**Vuex:**<https://vuex.vuejs.org/zh-cn/installation.html>\n\n引入使用：\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n```\n在你的store或者vuex目录下创建一个store：\n```javascript\n// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n       ...\n    },\n    mutations: {\n        ...\n    }\n})\n\nexport default store\n\n//在main.js挂载store\nimport store from './vuex'\nnew Vue({\n  el: '#app',\n  router,\n // 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件\n  store ,//必须是store\n  components: { App },\n  template: '<App/>'\n})\n//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'\n//还有另一种导出方法\nexport default new Vuex.Store({\n  state: {\n     ...\n  },\n  actions,\n  getters,\n  modules: {\n    ...\n  }\n})\n```\n**接下来是核心模块**\n* state\n```javascript\n//从store取出state\ncomputed: {\n    count () {\n      return this.store.state.count\n    }\n  }\n```\n##### **mapState 辅助函数**\n```javascript\n// 在单独构建的版本中辅助函数为 Vuex.mapState\nimport { mapState } from 'vuex'\n\ncomputed: mapState({\n    // 箭头函数可使代码更简练\n    count: state => state.count,\n\n    // 传字符串参数 'count' 等同于 `state => state.count`\n    countAlias: 'count',\n\n    // 为了能够使用 `this` 获取局部状态，必须使用常规函数\n    countPlusLocalState (state) {\n      return state.count + this.localCount\n    }  \n    //es6\n    countPlusLocalState: state => {\n        return state.count + this.localCount;\n      }\n  })\n如果你想将一个 state属性另取一个名字，使用对象形式：\n当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。\ncomputed: mapState([\n  // 映射 this.count 为 store.state.count\n  'count'\n])\n//...mapState\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n```\n* getters\n项目中我也没怎么用过，类似于计算属性\n>```javascript\nconst store = new Vuex.Store({\n  state: {\n    todos: [\n      { id: 1, text: '...', done: true },\n      { id: 2, text: '...', done: false }\n   ]\n  },\n  getters: {\n    doneTodos: state => {\n      return state.todos.filter(todo => todo.done)//返回done是true的新数组\n    }\n  }\n})\n```\n**Getter 也可以接受其他 getter 作为第二个参数：**\n```javascript\ngetters: {\n  // ...\n  doneTodosCount: (state, getters) => {\n    return getters.doneTodos.length\n  }\n}\nstore.getters.doneTodosCount // -> 1\n```\n##### mapGetters 辅助函数去官网看吧 和mapState差不多。。\n\n* mutations\n>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：\n#\n```javascript\n mutations: {\n    increment (state,payload) {\n      // 变更状态\n      payload ? state.count+=payload : state.count++\n    }\n  }\n```\n>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：\n#\n`store.commit('increment') || store.commit('increment',10)`\n**payload可以是对象：**\n```javascript\nmutations: {\n  increment (state, payload) {\n    state.count += payload.amount\n  }\n}\n\nstore.commit('increment', {\n  amount: 10\n})\n\n```\n**在组件中提交 Mutation**\n>你可以在组件中使用 this.$store.commit('xxx') 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。\n#\n```javascript\nimport { mapMutations } from 'vuex'\nmethods: {\n    ...mapMutations([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='increment(payload) --payload可传可不传'\n      // `mapMutations` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`\n    ]),\n    ...mapMutations({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='add() --payload同上'\n    })\n  }\n```\n* actions\n* Action 类似于 mutation，不同在于：\n Action 提交的是 mutation，而不是直接变更状态。\nAction 可以包含任意异步操作。\n```javascript\n actions: {\n    increment (context) {\n      context.commit('increment')\n      //Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation\n      ，或者通过 context.state 和 context.getters 来获取 state 和 getters。\n    }\n  }\n```\n**Action 通过 store.dispatch 方法触发：**\n`store.dispatch('increment')`\n>实践中，我们会经常用到 ES2015 的 [参数解构](https://github.com/lukehoban/es6features#destructuring) 来简化代码（特别是我们需要调用 `commit` 很多次的时候）：\n#\n```javascript\nactions: {\n  increment ({ commit }) {\n    commit('increment')\n  }\n}\n```\n**Actions 支持同样的载荷方式和对象方式进行分发：**\n```javascript\nactions: {\n        increment({ commit, state }, payload) {\n            commit('increment', payload)//mutations接收payload 如未传则默认null\n        }\n    }\n```\n**在组件中分发 Action**\n```javascript\nimport { mapActions } from 'vuex'\n//类似于mutations\n methods: {\n    ...mapActions([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`\n\n      // `mapActions` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`\n    ]),\n    ...mapActions({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.dispatch('increment')`\n    })\n  }\n```\n**组合 Action深入了解[见官网](https://vuex.vuejs.org/zh-cn/actions.html)**\n* modules\n>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter\n>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。\n>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：\n#\n```javascript\nconst moduleA = {\n  // ...\n  actions: {\n    incrementIfOddOnRootSum ({ state, commit, rootState }) {//state为moduleA的局部state,rootState是根的state\n      if ((state.count + rootState.count) % 2 === 1) {\n        commit('increment')\n      }\n    }\n  }\n}\n```","source":"_posts/关于Vuex.md","raw":"---\ntitle: something about Vuex...\ndate: 2018-01-17 16:41:37\ncategories:\n- Vue\ntags:\n- Vue\n---\nVuex从入门到放弃...哈哈哈\n<!-- more -->\n安装什么得应该不用多说了吧。。不会安装的点击官网链接\n\n**Vuex:**<https://vuex.vuejs.org/zh-cn/installation.html>\n\n引入使用：\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n```\n在你的store或者vuex目录下创建一个store：\n```javascript\n// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n       ...\n    },\n    mutations: {\n        ...\n    }\n})\n\nexport default store\n\n//在main.js挂载store\nimport store from './vuex'\nnew Vue({\n  el: '#app',\n  router,\n // 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件\n  store ,//必须是store\n  components: { App },\n  template: '<App/>'\n})\n//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'\n//还有另一种导出方法\nexport default new Vuex.Store({\n  state: {\n     ...\n  },\n  actions,\n  getters,\n  modules: {\n    ...\n  }\n})\n```\n**接下来是核心模块**\n* state\n```javascript\n//从store取出state\ncomputed: {\n    count () {\n      return this.store.state.count\n    }\n  }\n```\n##### **mapState 辅助函数**\n```javascript\n// 在单独构建的版本中辅助函数为 Vuex.mapState\nimport { mapState } from 'vuex'\n\ncomputed: mapState({\n    // 箭头函数可使代码更简练\n    count: state => state.count,\n\n    // 传字符串参数 'count' 等同于 `state => state.count`\n    countAlias: 'count',\n\n    // 为了能够使用 `this` 获取局部状态，必须使用常规函数\n    countPlusLocalState (state) {\n      return state.count + this.localCount\n    }  \n    //es6\n    countPlusLocalState: state => {\n        return state.count + this.localCount;\n      }\n  })\n如果你想将一个 state属性另取一个名字，使用对象形式：\n当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。\ncomputed: mapState([\n  // 映射 this.count 为 store.state.count\n  'count'\n])\n//...mapState\ncomputed: {\n  localComputed () { /* ... */ },\n  // 使用对象展开运算符将此对象混入到外部对象中\n  ...mapState({\n    // ...\n  })\n}\n```\n* getters\n项目中我也没怎么用过，类似于计算属性\n>```javascript\nconst store = new Vuex.Store({\n  state: {\n    todos: [\n      { id: 1, text: '...', done: true },\n      { id: 2, text: '...', done: false }\n   ]\n  },\n  getters: {\n    doneTodos: state => {\n      return state.todos.filter(todo => todo.done)//返回done是true的新数组\n    }\n  }\n})\n```\n**Getter 也可以接受其他 getter 作为第二个参数：**\n```javascript\ngetters: {\n  // ...\n  doneTodosCount: (state, getters) => {\n    return getters.doneTodos.length\n  }\n}\nstore.getters.doneTodosCount // -> 1\n```\n##### mapGetters 辅助函数去官网看吧 和mapState差不多。。\n\n* mutations\n>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：\n#\n```javascript\n mutations: {\n    increment (state,payload) {\n      // 变更状态\n      payload ? state.count+=payload : state.count++\n    }\n  }\n```\n>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：\n#\n`store.commit('increment') || store.commit('increment',10)`\n**payload可以是对象：**\n```javascript\nmutations: {\n  increment (state, payload) {\n    state.count += payload.amount\n  }\n}\n\nstore.commit('increment', {\n  amount: 10\n})\n\n```\n**在组件中提交 Mutation**\n>你可以在组件中使用 this.$store.commit('xxx') 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。\n#\n```javascript\nimport { mapMutations } from 'vuex'\nmethods: {\n    ...mapMutations([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='increment(payload) --payload可传可不传'\n      // `mapMutations` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`\n    ]),\n    ...mapMutations({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`\n      //@click调用：@click='add() --payload同上'\n    })\n  }\n```\n* actions\n* Action 类似于 mutation，不同在于：\n Action 提交的是 mutation，而不是直接变更状态。\nAction 可以包含任意异步操作。\n```javascript\n actions: {\n    increment (context) {\n      context.commit('increment')\n      //Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation\n      ，或者通过 context.state 和 context.getters 来获取 state 和 getters。\n    }\n  }\n```\n**Action 通过 store.dispatch 方法触发：**\n`store.dispatch('increment')`\n>实践中，我们会经常用到 ES2015 的 [参数解构](https://github.com/lukehoban/es6features#destructuring) 来简化代码（特别是我们需要调用 `commit` 很多次的时候）：\n#\n```javascript\nactions: {\n  increment ({ commit }) {\n    commit('increment')\n  }\n}\n```\n**Actions 支持同样的载荷方式和对象方式进行分发：**\n```javascript\nactions: {\n        increment({ commit, state }, payload) {\n            commit('increment', payload)//mutations接收payload 如未传则默认null\n        }\n    }\n```\n**在组件中分发 Action**\n```javascript\nimport { mapActions } from 'vuex'\n//类似于mutations\n methods: {\n    ...mapActions([\n      'increment', // 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`\n\n      // `mapActions` 也支持载荷：\n      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`\n    ]),\n    ...mapActions({\n      add: 'increment' // 将 `this.add()` 映射为 `this.$store.dispatch('increment')`\n    })\n  }\n```\n**组合 Action深入了解[见官网](https://vuex.vuejs.org/zh-cn/actions.html)**\n* modules\n>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter\n>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。\n>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：\n#\n```javascript\nconst moduleA = {\n  // ...\n  actions: {\n    incrementIfOddOnRootSum ({ state, commit, rootState }) {//state为moduleA的局部state,rootState是根的state\n      if ((state.count + rootState.count) % 2 === 1) {\n        commit('increment')\n      }\n    }\n  }\n}\n```","slug":"关于Vuex","published":1,"updated":"2019-01-05T03:38:35.207Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tu002hgw7g78cn6m8s","content":"<p>Vuex从入门到放弃…哈哈哈<br><a id=\"more\"></a><br>安装什么得应该不用多说了吧。。不会安装的点击官网链接</p>\n<p><strong>Vuex:</strong><a href=\"https://vuex.vuejs.org/zh-cn/installation.html\" target=\"_blank\" rel=\"noopener\">https://vuex.vuejs.org/zh-cn/installation.html</a></p>\n<p>引入使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p>\n<p>在你的store或者vuex目录下创建一个store：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    state: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mutations: &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在main.js挂载store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\"> <span class=\"comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></span><br><span class=\"line\">  store ,<span class=\"comment\">//必须是store</span></span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'</span></span><br><span class=\"line\"><span class=\"comment\">//还有另一种导出方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">     ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions,</span><br><span class=\"line\">  getters,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>接下来是核心模块</strong></p>\n<ul>\n<li>state<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从store取出state</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    count () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.store.state.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"mapState-辅助函数\"><a href=\"#mapState-辅助函数\" class=\"headerlink\" title=\"mapState 辅助函数\"></a><strong>mapState 辅助函数</strong></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 箭头函数可使代码更简练</span></span><br><span class=\"line\">    count: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.count,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></span><br><span class=\"line\">    countAlias: <span class=\"string\">'count'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></span><br><span class=\"line\">    countPlusLocalState (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">//es6</span></span><br><span class=\"line\">    countPlusLocalState: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">如果你想将一个 state属性另取一个名字，使用对象形式：</span><br><span class=\"line\">当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。</span><br><span class=\"line\">computed: mapState([</span><br><span class=\"line\">  <span class=\"comment\">// 映射 this.count 为 store.state.count</span></span><br><span class=\"line\">  <span class=\"string\">'count'</span></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//...mapState</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  localComputed () &#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class=\"line\">  ...mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>getters<br>项目中我也没怎么用过，类似于计算属性<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doneTodos: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.todos.filter(<span class=\"function\"><span class=\"params\">todo</span> =&gt;</span> todo.done)<span class=\"comment\">//返回done是true的新数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<p><strong>Getter 也可以接受其他 getter 作为第二个参数：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  doneTodosCount: <span class=\"function\">(<span class=\"params\">state, getters</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> getters.doneTodos.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.getters.doneTodosCount <span class=\"comment\">// -&gt; 1</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"mapGetters-辅助函数去官网看吧-和mapState差不多。。\"><a href=\"#mapGetters-辅助函数去官网看吧-和mapState差不多。。\" class=\"headerlink\" title=\"mapGetters 辅助函数去官网看吧 和mapState差不多。。\"></a>mapGetters 辅助函数去官网看吧 和mapState差不多。。</h5><ul>\n<li>mutations<blockquote>\n<p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">   increment (state,payload) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 变更状态</span></span><br><span class=\"line\">     payload ? state.count+=payload : state.count++</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：<br>#<br><code>store.commit(&#39;increment&#39;) || store.commit(&#39;increment&#39;,10)</code><br><strong>payload可以是对象：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  increment (state, payload) &#123;</span><br><span class=\"line\">    state.count += payload.amount</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">store.commit(<span class=\"string\">'increment'</span>, &#123;</span><br><span class=\"line\">  amount: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>在组件中提交 Mutation</strong></p>\n<blockquote>\n<p>你可以在组件中使用 this.$store.commit(‘xxx’) 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapMutations([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='increment(payload) --payload可传可不传'</span></span><br><span class=\"line\">      <span class=\"comment\">// `mapMutations` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapMutations(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='add() --payload同上'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>actions</li>\n<li>Action 类似于 mutation，不同在于：<br>Action 提交的是 mutation，而不是直接变更状态。<br>Action 可以包含任意异步操作。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">   increment (context) &#123;</span><br><span class=\"line\">     context.commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">     <span class=\"comment\">//Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation</span></span><br><span class=\"line\">     ，或者通过 context.state 和 context.getters 来获取 state 和 getters。</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>Action 通过 store.dispatch 方法触发：</strong><br><code>store.dispatch(&#39;increment&#39;)</code></p>\n<blockquote>\n<p>实践中，我们会经常用到 ES2015 的 <a href=\"https://github.com/lukehoban/es6features#destructuring\" target=\"_blank\" rel=\"noopener\">参数解构</a> 来简化代码（特别是我们需要调用 <code>commit</code> 很多次的时候）：<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  increment (&#123; commit &#125;) &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>Actions 支持同样的载荷方式和对象方式进行分发：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">        increment(&#123; commit, state &#125;, payload) &#123;</span><br><span class=\"line\">            commit(<span class=\"string\">'increment'</span>, payload)<span class=\"comment\">//mutations接收payload 如未传则默认null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>在组件中分发 Action</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"comment\">//类似于mutations</span></span><br><span class=\"line\"> methods: &#123;</span><br><span class=\"line\">    ...mapActions([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// `mapActions` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapActions(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组合 Action深入了解<a href=\"https://vuex.vuejs.org/zh-cn/actions.html\" target=\"_blank\" rel=\"noopener\">见官网</a></strong></p>\n<ul>\n<li>modules<blockquote>\n<p>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter<br>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。<br>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;<span class=\"comment\">//state为moduleA的局部state,rootState是根的state</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((state.count + rootState.count) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Vuex从入门到放弃…哈哈哈<br>","more":"<br>安装什么得应该不用多说了吧。。不会安装的点击官网链接</p>\n<p><strong>Vuex:</strong><a href=\"https://vuex.vuejs.org/zh-cn/installation.html\" target=\"_blank\" rel=\"noopener\">https://vuex.vuejs.org/zh-cn/installation.html</a></p>\n<p>引入使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p>\n<p>在你的store或者vuex目录下创建一个store：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    state: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mutations: &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在main.js挂载store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./vuex'</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\"> <span class=\"comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></span><br><span class=\"line\">  store ,<span class=\"comment\">//必须是store</span></span><br><span class=\"line\">  components: &#123; App &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;App/&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//这里补充说明一点，挂载必须是store，否则$store会报 '$store\" is not defined'</span></span><br><span class=\"line\"><span class=\"comment\">//还有另一种导出方法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">     ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions,</span><br><span class=\"line\">  getters,</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>接下来是核心模块</strong></p>\n<ul>\n<li>state<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从store取出state</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    count () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.store.state.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"mapState-辅助函数\"><a href=\"#mapState-辅助函数\" class=\"headerlink\" title=\"mapState 辅助函数\"></a><strong>mapState 辅助函数</strong></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在单独构建的版本中辅助函数为 Vuex.mapState</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 箭头函数可使代码更简练</span></span><br><span class=\"line\">    count: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.count,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 传字符串参数 'count' 等同于 `state =&gt; state.count`</span></span><br><span class=\"line\">    countAlias: <span class=\"string\">'count'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 为了能够使用 `this` 获取局部状态，必须使用常规函数</span></span><br><span class=\"line\">    countPlusLocalState (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">//es6</span></span><br><span class=\"line\">    countPlusLocalState: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.count + <span class=\"keyword\">this</span>.localCount;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">如果你想将一个 state属性另取一个名字，使用对象形式：</span><br><span class=\"line\">当映射的计算属性的名称与 state 的子节点名称相同时，我们也可以给 mapState 传一个字符串数组。</span><br><span class=\"line\">computed: mapState([</span><br><span class=\"line\">  <span class=\"comment\">// 映射 this.count 为 store.state.count</span></span><br><span class=\"line\">  <span class=\"string\">'count'</span></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\">//...mapState</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  localComputed () &#123; <span class=\"comment\">/* ... */</span> &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 使用对象展开运算符将此对象混入到外部对象中</span></span><br><span class=\"line\">  ...mapState(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>getters<br>项目中我也没怎么用过，类似于计算属性<blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">      &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">text</span>: <span class=\"string\">'...'</span>, <span class=\"attr\">done</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">   ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doneTodos: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.todos.filter(<span class=\"function\"><span class=\"params\">todo</span> =&gt;</span> todo.done)<span class=\"comment\">//返回done是true的新数组</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<p><strong>Getter 也可以接受其他 getter 作为第二个参数：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getters: &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  doneTodosCount: <span class=\"function\">(<span class=\"params\">state, getters</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> getters.doneTodos.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">store.getters.doneTodosCount <span class=\"comment\">// -&gt; 1</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"mapGetters-辅助函数去官网看吧-和mapState差不多。。\"><a href=\"#mapGetters-辅助函数去官网看吧-和mapState差不多。。\" class=\"headerlink\" title=\"mapGetters 辅助函数去官网看吧 和mapState差不多。。\"></a>mapGetters 辅助函数去官网看吧 和mapState差不多。。</h5><ul>\n<li>mutations<blockquote>\n<p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的 事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">   increment (state,payload) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 变更状态</span></span><br><span class=\"line\">     payload ? state.count+=payload : state.count++</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 increment 的 mutation 时，调用此函数。”要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法：<br>#<br><code>store.commit(&#39;increment&#39;) || store.commit(&#39;increment&#39;,10)</code><br><strong>payload可以是对象：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mutations: &#123;</span><br><span class=\"line\">  increment (state, payload) &#123;</span><br><span class=\"line\">    state.count += payload.amount</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">store.commit(<span class=\"string\">'increment'</span>, &#123;</span><br><span class=\"line\">  amount: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>在组件中提交 Mutation</strong></p>\n<blockquote>\n<p>你可以在组件中使用 this.$store.commit(‘xxx’) 提交 mutation，或者使用 mapMutations 辅助函数将组件中的 methods 映射为 store.commit 调用（需要在根节点注入 store）。<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    ...mapMutations([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='increment(payload) --payload可传可不传'</span></span><br><span class=\"line\">      <span class=\"comment\">// `mapMutations` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapMutations(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.commit('increment')`</span></span><br><span class=\"line\">      <span class=\"comment\">//@click调用：@click='add() --payload同上'</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>actions</li>\n<li>Action 类似于 mutation，不同在于：<br>Action 提交的是 mutation，而不是直接变更状态。<br>Action 可以包含任意异步操作。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">   increment (context) &#123;</span><br><span class=\"line\">     context.commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">     <span class=\"comment\">//Action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation</span></span><br><span class=\"line\">     ，或者通过 context.state 和 context.getters 来获取 state 和 getters。</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>Action 通过 store.dispatch 方法触发：</strong><br><code>store.dispatch(&#39;increment&#39;)</code></p>\n<blockquote>\n<p>实践中，我们会经常用到 ES2015 的 <a href=\"https://github.com/lukehoban/es6features#destructuring\" target=\"_blank\" rel=\"noopener\">参数解构</a> 来简化代码（特别是我们需要调用 <code>commit</code> 很多次的时候）：<br>#<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">  increment (&#123; commit &#125;) &#123;</span><br><span class=\"line\">    commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>Actions 支持同样的载荷方式和对象方式进行分发：</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">actions: &#123;</span><br><span class=\"line\">        increment(&#123; commit, state &#125;, payload) &#123;</span><br><span class=\"line\">            commit(<span class=\"string\">'increment'</span>, payload)<span class=\"comment\">//mutations接收payload 如未传则默认null</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>在组件中分发 Action</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"><span class=\"comment\">//类似于mutations</span></span><br><span class=\"line\"> methods: &#123;</span><br><span class=\"line\">    ...mapActions([</span><br><span class=\"line\">      <span class=\"string\">'increment'</span>, <span class=\"comment\">// 将 `this.increment()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// `mapActions` 也支持载荷：</span></span><br><span class=\"line\">      <span class=\"string\">'incrementBy'</span> <span class=\"comment\">// 将 `this.incrementBy(amount)` 映射为 `this.$store.dispatch('incrementBy', amount)`</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    ...mapActions(&#123;</span><br><span class=\"line\">      add: <span class=\"string\">'increment'</span> <span class=\"comment\">// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>组合 Action深入了解<a href=\"https://vuex.vuejs.org/zh-cn/actions.html\" target=\"_blank\" rel=\"noopener\">见官网</a></strong></p>\n<ul>\n<li>modules<blockquote>\n<p>Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter<br>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。<br>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState：<br>#</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;<span class=\"comment\">//state为moduleA的局部state,rootState是根的state</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((state.count + rootState.count) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        commit(<span class=\"string\">'increment'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n</ul>"},{"title":"删除webpack打包导致无法删除的文件","date":"2019-05-09T06:46:49.000Z","_content":"删除webpack打包导致无法删除的文件\n<!-- more -->\n##### 展示下删除提示:\n![](/images/can'tDel.png '错误截图')\n##### 解决方法：\n```JavaScript\ncmd 打开命令提示符\n输入： rd /q/s E:\\webpack.\\\nPS:(最后面的 \".\\\" 不可以没有~)\nE:\\webpack--是需要删除的目录路径\n温馨提示：千万千万千万不要在桌面运行命令提示符去删除！！！不然删错了东西怕是要哭咯~\n```\n>用法：rd[盘符:][路径][子目录名][/s][/q][/?]或rmdir[盘符:][路径][子目录名][/s][/q][/?]\n参数说明如下：\n/s 删除指定目录和所有子目录及其包含的所有文件\n/q 安静模式。删除目录时，不会提示确认信息","source":"_posts/删除webpack打包导致无法删除的文件.md","raw":"---\ntitle: 删除webpack打包导致无法删除的文件\ndate: 2019-05-09 14:46:49\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n删除webpack打包导致无法删除的文件\n<!-- more -->\n##### 展示下删除提示:\n![](/images/can'tDel.png '错误截图')\n##### 解决方法：\n```JavaScript\ncmd 打开命令提示符\n输入： rd /q/s E:\\webpack.\\\nPS:(最后面的 \".\\\" 不可以没有~)\nE:\\webpack--是需要删除的目录路径\n温馨提示：千万千万千万不要在桌面运行命令提示符去删除！！！不然删错了东西怕是要哭咯~\n```\n>用法：rd[盘符:][路径][子目录名][/s][/q][/?]或rmdir[盘符:][路径][子目录名][/s][/q][/?]\n参数说明如下：\n/s 删除指定目录和所有子目录及其包含的所有文件\n/q 安静模式。删除目录时，不会提示确认信息","slug":"删除webpack打包导致无法删除的文件","published":1,"updated":"2019-05-09T14:28:45.603Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tv002kgw7g540j82dk","content":"<p>删除webpack打包导致无法删除的文件<br><a id=\"more\"></a></p>\n<h5 id=\"展示下删除提示\"><a href=\"#展示下删除提示\" class=\"headerlink\" title=\"展示下删除提示:\"></a>展示下删除提示:</h5><p><img src=\"/images/can&#39;tDel.png\" alt title=\"错误截图\"></p>\n<h5 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd 打开命令提示符</span><br><span class=\"line\">输入： rd /q/s E:\\webpack.\\</span><br><span class=\"line\">PS:(最后面的 <span class=\"string\">\".\\\" 不可以没有~)</span></span><br><span class=\"line\"><span class=\"string\">E:\\webpack--是需要删除的目录路径</span></span><br><span class=\"line\"><span class=\"string\">温馨提示：千万千万千万不要在桌面运行命令提示符去删除！！！不然删错了东西怕是要哭咯~</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>用法：rd[盘符:][路径][子目录名][/s][/q][/?]或rmdir[盘符:][路径][子目录名][/s][/q][/?]<br>参数说明如下：<br>/s 删除指定目录和所有子目录及其包含的所有文件<br>/q 安静模式。删除目录时，不会提示确认信息</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>删除webpack打包导致无法删除的文件<br>","more":"</p>\n<h5 id=\"展示下删除提示\"><a href=\"#展示下删除提示\" class=\"headerlink\" title=\"展示下删除提示:\"></a>展示下删除提示:</h5><p><img src=\"/images/can&#39;tDel.png\" alt title=\"错误截图\"></p>\n<h5 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd 打开命令提示符</span><br><span class=\"line\">输入： rd /q/s E:\\webpack.\\</span><br><span class=\"line\">PS:(最后面的 <span class=\"string\">\".\\\" 不可以没有~)</span></span><br><span class=\"line\"><span class=\"string\">E:\\webpack--是需要删除的目录路径</span></span><br><span class=\"line\"><span class=\"string\">温馨提示：千万千万千万不要在桌面运行命令提示符去删除！！！不然删错了东西怕是要哭咯~</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>用法：rd[盘符:][路径][子目录名][/s][/q][/?]或rmdir[盘符:][路径][子目录名][/s][/q][/?]<br>参数说明如下：<br>/s 删除指定目录和所有子目录及其包含的所有文件<br>/q 安静模式。删除目录时，不会提示确认信息</p>\n</blockquote>"},{"title":"判断是否滚动到底部","date":"2018-03-01T05:09:10.000Z","_content":"JavaScript判断是否滚动到底部--可用于列表的滚动加载\n<!-- more -->\n```JavaScript\n//滚动条在Y轴上的滚动距离\nfunction getScrollTop() {\n    var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n    if (document.body) {\n        bodyScrollTop = document.body.scrollTop;\n    }\n    if (document.documentElement) {\n        documentScrollTop = document.documentElement.scrollTop;\n    }\n    scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n    return scrollTop;\n}\n\n//文档的总高度\nfunction getScrollHeight() {\n    var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n    if (document.body) {\n        bodyScrollHeight = document.body.scrollHeight;\n    }\n    if (document.documentElement) {\n        documentScrollHeight = document.documentElement.scrollHeight;\n    }\n    scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n    return scrollHeight;\n}\n\n//浏览器视口的高度\nfunction getWindowHeight() {\n    var windowHeight = 0;\n    if (document.compatMode == \"CSS1Compat\") {\n        windowHeight = document.documentElement.clientHeight;\n    } else {\n        windowHeight = document.body.clientHeight;\n    }\n    return windowHeight;\n}\n//判断是否滚动到底部\nfunction isBottom(distance) {\n    let bottomDistance = distance || 0;\n    if (getScrollTop() + getWindowHeight() + bottomDistance >= getScrollHeight()) {\n        //console.log(\"已经到底部\");\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport { isBottom }\n\n//引用 import {isBottom} from './isBottom.js'\n\n//滚动加载使用\n//vue中生命周期mounted执行\nwindow.addEventListener('scroll', this.loadMore) //this.loadMore为滚动加载的方法\n//移除监听\n//vue中生命周期beforeDestroy执行\nwindow.removeEventListener('scroll', this.loadMore)\n```\n\n**欢迎前端小伙伴加群一起学习进步：163958730**","source":"_posts/判断是否滚动到底部.md","raw":"---\ntitle: 判断是否滚动到底部\ndate: 2018-03-01 13:09:10\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\nJavaScript判断是否滚动到底部--可用于列表的滚动加载\n<!-- more -->\n```JavaScript\n//滚动条在Y轴上的滚动距离\nfunction getScrollTop() {\n    var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n    if (document.body) {\n        bodyScrollTop = document.body.scrollTop;\n    }\n    if (document.documentElement) {\n        documentScrollTop = document.documentElement.scrollTop;\n    }\n    scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n    return scrollTop;\n}\n\n//文档的总高度\nfunction getScrollHeight() {\n    var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n    if (document.body) {\n        bodyScrollHeight = document.body.scrollHeight;\n    }\n    if (document.documentElement) {\n        documentScrollHeight = document.documentElement.scrollHeight;\n    }\n    scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n    return scrollHeight;\n}\n\n//浏览器视口的高度\nfunction getWindowHeight() {\n    var windowHeight = 0;\n    if (document.compatMode == \"CSS1Compat\") {\n        windowHeight = document.documentElement.clientHeight;\n    } else {\n        windowHeight = document.body.clientHeight;\n    }\n    return windowHeight;\n}\n//判断是否滚动到底部\nfunction isBottom(distance) {\n    let bottomDistance = distance || 0;\n    if (getScrollTop() + getWindowHeight() + bottomDistance >= getScrollHeight()) {\n        //console.log(\"已经到底部\");\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport { isBottom }\n\n//引用 import {isBottom} from './isBottom.js'\n\n//滚动加载使用\n//vue中生命周期mounted执行\nwindow.addEventListener('scroll', this.loadMore) //this.loadMore为滚动加载的方法\n//移除监听\n//vue中生命周期beforeDestroy执行\nwindow.removeEventListener('scroll', this.loadMore)\n```\n\n**欢迎前端小伙伴加群一起学习进步：163958730**","slug":"判断是否滚动到底部","published":1,"updated":"2019-01-05T03:38:35.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tx002ngw7gtri8l2a2","content":"<p>JavaScript判断是否滚动到底部–可用于列表的滚动加载<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">\"CSS1Compat\"</span>) &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是否滚动到底部</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBottom</span>(<span class=\"params\">distance</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> bottomDistance = distance || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getScrollTop() + getWindowHeight() + bottomDistance &gt;= getScrollHeight()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(\"已经到底部\");</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; isBottom &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//引用 import &#123;isBottom&#125; from './isBottom.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//滚动加载使用</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期mounted执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore) <span class=\"comment\">//this.loadMore为滚动加载的方法</span></span><br><span class=\"line\"><span class=\"comment\">//移除监听</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期beforeDestroy执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore)</span><br></pre></td></tr></table></figure></p>\n<p><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>\n","site":{"data":{}},"excerpt":"<p>JavaScript判断是否滚动到底部–可用于列表的滚动加载<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollTop</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollTop = <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollTop = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getScrollHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.body) &#123;</span><br><span class=\"line\">        bodyScrollHeight = <span class=\"built_in\">document</span>.body.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">        documentScrollHeight = <span class=\"built_in\">document</span>.documentElement.scrollHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWindowHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.compatMode == <span class=\"string\">\"CSS1Compat\"</span>) &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        windowHeight = <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断是否滚动到底部</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isBottom</span>(<span class=\"params\">distance</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> bottomDistance = distance || <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getScrollTop() + getWindowHeight() + bottomDistance &gt;= getScrollHeight()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(\"已经到底部\");</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; isBottom &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//引用 import &#123;isBottom&#125; from './isBottom.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//滚动加载使用</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期mounted执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore) <span class=\"comment\">//this.loadMore为滚动加载的方法</span></span><br><span class=\"line\"><span class=\"comment\">//移除监听</span></span><br><span class=\"line\"><span class=\"comment\">//vue中生命周期beforeDestroy执行</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">'scroll'</span>, <span class=\"keyword\">this</span>.loadMore)</span><br></pre></td></tr></table></figure></p>\n<p><strong>欢迎前端小伙伴加群一起学习进步：163958730</strong></p>"},{"title":"常用方法封装","date":"2020-10-23T07:55:45.000Z","_content":"常用方法封装\n<!-- more -->\n##### 修改对象的key值\n```JavaScript\n//如果data是对象可以免去遍历这一步\nreplaceKey(data, oldKeyName, newKeyName) {\n      data.forEach(item => {\n        for (let key in item) {\n          if (key == oldKeyName) {\n            item[newKeyName] = item[key];\n            delete item[key];\n          }\n        }\n      });\n      return data;\n    }\n```\n##### es6解构赋值删除不需要的属性\n```JavaScript\nlet {phone, qqList, ...obj} = {ck1: '1', phone:\"10086\", qqList:{}, ck2: '2', ck3: '3'};\nconsole.log(obj); // {ck1: '1', ck2: '2', ck3: '3'}\n```\n\n##### reduce删除对象中重复的属性--网上的例子\n```JavaScript\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\n\nlet obj = {};\n\nperson = person.reduce((cur,next) => {\n    obj[next.id] ? \"\" : obj[next.id] = true && cur.push(next);\n    return cur;\n},[]) //设置cur默认类型为数组，并且初始值为空的数组\n//console.log(person);\n```\n##### reduce数组合并去重并修改数组中对象的属性值\n```JavaScript\nlet arr = [{ name: '应继武', vendor: 1 }, { name: '李四', vendor: 1 },{ name: '张三', vendor: 1 }];\nlet arr1 = [{ name: '应继武', vendor: 2 }, { name: '张三', vendor: 2 }, { name: '王五', vendor: 2 }];\nlet list = [...arr, ...arr1];\n\nlet d = []\nlet hash = {}\nd = list.reduce((item, next, index, sArr) => {\n    // console.log(item, next, index, sArr)\n    hash[next.name] ? item=setArr(next.name,item) : hash[next.name] = true && item.push(next)\n    return item\n}, [])\n\nfunction setArr(name,list){\n    list.forEach(item=>{\n        if(item.name===name){\n            item.vendor=3\n        }\n    })\n    return list\n}\n//console.log(d)\n//[{ name: '应继武', vendor: 3 }, { name: '李四', vendor: 1 },{ name: '张三', vendor: 3 }, { name: '王五', vendor: 2 }]\n```\n\n##### 检测是否是数组\n```JavaScript\nArray.isArray([]);  // true\nArray.isArray(undefined); // false;\n\narray instanceof Array; // true 检测对象的原型链是否指向构造函数的prototype对象\n```\n\n##### 数组的一些操作\n```JavaScript\n//遍历数组\nlet arr=[1,2,3,4,3,2,1];\n//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。\n//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值\nfor (let value of arr) {//break 跳出循环下面的方法继续执行；return 终止运行\n  console.log(value);//输出1,2,3,4,3,2,1\n}\n\n//map 返回一个新数组\nlet users = [\n  {name: \"张含韵\", \"email\": \"zhang@email.com\"},\n  {name: \"江一燕\",   \"email\": \"jiang@email.com\"},\n  {name: \"李小璐\",  \"email\": \"li@email.com\"}\n];\nlet emails = users.map(item=>item.email);\n\n//filter 返回过滤后的新数组\nlet arr=[1,2,3,4,3,2,1,2];\nlet newArr1=arr.filter((value,index,arr)=>value>=3)\nconsole.log(newArr1);//输出[3,4,3]\n```\n##### 时间戳转 y-m-d h:m:s\n```JavaScript\nfunction timestampToTime(timestamp,full) {\n    var date = timestamp.length == 10 ? new Date(timestamp * 1000) : new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n    Y = date.getFullYear() + '-';\n    M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    D = date.getDate() + ' ';\n    h = date.getHours() + ':';\n    m = date.getMinutes() + ':';\n    s = date.getSeconds();\n    //return Y+M+D+h+m+s;\n    if (full) {\n        return Y + M + D + h + m + s;//2018-11-11 11:11:11\n    } else {\n        return { ymd: Y + M + D, hms: h + m + s }\n    }\n}\n```\n##### 判断一个变量是不是空对象\n```JavaScript\nfunction isEmptyObj(obj) {\n    return obj !== null && typeof obj === 'object' && !Array.isArray(obj) && (Object.getOwnPropertyNames(obj).length === 0) && (Object.getOwnPropertySymbols(obj).length === 0)\n}\n```\n##### 分割一位数组\n```JavaScript\nfunction cutArr(size, arr) {\n    var result = [];\n    for (var i = 0; i < arr.length; i += size) {\n        result.push(data.slice(i, i + size));\n    }\n    return result\n}\n//示例\nvar data = [\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n];\ncutArr(3,data)\n```\n![](/images/cutArr.png '结果截图')\n##### jq判断div是否滚动到底部（loadMore）\n```JavaScript\n  $('#div').scroll(function (event) {\n    var scrollTop = $(this).scrollTop();//表示滚动条滚动的高度\n    var height = $(this).height();//div高度\n    var scrollHeight = $(this)[0].scrollHeight;//表示滚动条需要滚动的高度\n    // var scrollTop = event.currentTarget.scrollTop;\n    // var height = event.currentTarget.clientHeight;\n    // var scrollHeight = event.currentTarget.scrollHeight;\n    //console.log(scrollTop, height, scrollHeight);\n    if (scrollTop + height == scrollHeight) {\n      console.log('到底了');\n    }\n    if (scrollTop == 0) {\n      console.log('到顶了');\n    }\n  })\n```","source":"_posts/常用方法封装.md","raw":"---\ntitle: 常用方法封装\ndate: 2020-10-23 15:55:45\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n常用方法封装\n<!-- more -->\n##### 修改对象的key值\n```JavaScript\n//如果data是对象可以免去遍历这一步\nreplaceKey(data, oldKeyName, newKeyName) {\n      data.forEach(item => {\n        for (let key in item) {\n          if (key == oldKeyName) {\n            item[newKeyName] = item[key];\n            delete item[key];\n          }\n        }\n      });\n      return data;\n    }\n```\n##### es6解构赋值删除不需要的属性\n```JavaScript\nlet {phone, qqList, ...obj} = {ck1: '1', phone:\"10086\", qqList:{}, ck2: '2', ck3: '3'};\nconsole.log(obj); // {ck1: '1', ck2: '2', ck3: '3'}\n```\n\n##### reduce删除对象中重复的属性--网上的例子\n```JavaScript\nlet person = [\n     {id: 0, name: \"小明\"},\n     {id: 1, name: \"小张\"},\n     {id: 2, name: \"小李\"},\n     {id: 3, name: \"小孙\"},\n     {id: 1, name: \"小周\"},\n     {id: 2, name: \"小陈\"},   \n];\n\nlet obj = {};\n\nperson = person.reduce((cur,next) => {\n    obj[next.id] ? \"\" : obj[next.id] = true && cur.push(next);\n    return cur;\n},[]) //设置cur默认类型为数组，并且初始值为空的数组\n//console.log(person);\n```\n##### reduce数组合并去重并修改数组中对象的属性值\n```JavaScript\nlet arr = [{ name: '应继武', vendor: 1 }, { name: '李四', vendor: 1 },{ name: '张三', vendor: 1 }];\nlet arr1 = [{ name: '应继武', vendor: 2 }, { name: '张三', vendor: 2 }, { name: '王五', vendor: 2 }];\nlet list = [...arr, ...arr1];\n\nlet d = []\nlet hash = {}\nd = list.reduce((item, next, index, sArr) => {\n    // console.log(item, next, index, sArr)\n    hash[next.name] ? item=setArr(next.name,item) : hash[next.name] = true && item.push(next)\n    return item\n}, [])\n\nfunction setArr(name,list){\n    list.forEach(item=>{\n        if(item.name===name){\n            item.vendor=3\n        }\n    })\n    return list\n}\n//console.log(d)\n//[{ name: '应继武', vendor: 3 }, { name: '李四', vendor: 1 },{ name: '张三', vendor: 3 }, { name: '王五', vendor: 2 }]\n```\n\n##### 检测是否是数组\n```JavaScript\nArray.isArray([]);  // true\nArray.isArray(undefined); // false;\n\narray instanceof Array; // true 检测对象的原型链是否指向构造函数的prototype对象\n```\n\n##### 数组的一些操作\n```JavaScript\n//遍历数组\nlet arr=[1,2,3,4,3,2,1];\n//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。\n//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值\nfor (let value of arr) {//break 跳出循环下面的方法继续执行；return 终止运行\n  console.log(value);//输出1,2,3,4,3,2,1\n}\n\n//map 返回一个新数组\nlet users = [\n  {name: \"张含韵\", \"email\": \"zhang@email.com\"},\n  {name: \"江一燕\",   \"email\": \"jiang@email.com\"},\n  {name: \"李小璐\",  \"email\": \"li@email.com\"}\n];\nlet emails = users.map(item=>item.email);\n\n//filter 返回过滤后的新数组\nlet arr=[1,2,3,4,3,2,1,2];\nlet newArr1=arr.filter((value,index,arr)=>value>=3)\nconsole.log(newArr1);//输出[3,4,3]\n```\n##### 时间戳转 y-m-d h:m:s\n```JavaScript\nfunction timestampToTime(timestamp,full) {\n    var date = timestamp.length == 10 ? new Date(timestamp * 1000) : new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n    Y = date.getFullYear() + '-';\n    M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n    D = date.getDate() + ' ';\n    h = date.getHours() + ':';\n    m = date.getMinutes() + ':';\n    s = date.getSeconds();\n    //return Y+M+D+h+m+s;\n    if (full) {\n        return Y + M + D + h + m + s;//2018-11-11 11:11:11\n    } else {\n        return { ymd: Y + M + D, hms: h + m + s }\n    }\n}\n```\n##### 判断一个变量是不是空对象\n```JavaScript\nfunction isEmptyObj(obj) {\n    return obj !== null && typeof obj === 'object' && !Array.isArray(obj) && (Object.getOwnPropertyNames(obj).length === 0) && (Object.getOwnPropertySymbols(obj).length === 0)\n}\n```\n##### 分割一位数组\n```JavaScript\nfunction cutArr(size, arr) {\n    var result = [];\n    for (var i = 0; i < arr.length; i += size) {\n        result.push(data.slice(i, i + size));\n    }\n    return result\n}\n//示例\nvar data = [\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n  {name:'Liming',age:'25'},\n];\ncutArr(3,data)\n```\n![](/images/cutArr.png '结果截图')\n##### jq判断div是否滚动到底部（loadMore）\n```JavaScript\n  $('#div').scroll(function (event) {\n    var scrollTop = $(this).scrollTop();//表示滚动条滚动的高度\n    var height = $(this).height();//div高度\n    var scrollHeight = $(this)[0].scrollHeight;//表示滚动条需要滚动的高度\n    // var scrollTop = event.currentTarget.scrollTop;\n    // var height = event.currentTarget.clientHeight;\n    // var scrollHeight = event.currentTarget.scrollHeight;\n    //console.log(scrollTop, height, scrollHeight);\n    if (scrollTop + height == scrollHeight) {\n      console.log('到底了');\n    }\n    if (scrollTop == 0) {\n      console.log('到顶了');\n    }\n  })\n```","slug":"常用方法封装","published":1,"updated":"2020-11-07T10:53:08.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2tz002qgw7g34hvxgzp","content":"<p>常用方法封装<br><a id=\"more\"></a></p>\n<h5 id=\"修改对象的key值\"><a href=\"#修改对象的key值\" class=\"headerlink\" title=\"修改对象的key值\"></a>修改对象的key值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//如果data是对象可以免去遍历这一步</span></span><br><span class=\"line\">replaceKey(data, oldKeyName, newKeyName) &#123;</span><br><span class=\"line\">      data.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (key == oldKeyName) &#123;</span><br><span class=\"line\">            item[newKeyName] = item[key];</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> item[key];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"es6解构赋值删除不需要的属性\"><a href=\"#es6解构赋值删除不需要的属性\" class=\"headerlink\" title=\"es6解构赋值删除不需要的属性\"></a>es6解构赋值删除不需要的属性</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;phone, qqList, ...obj&#125; = &#123;<span class=\"attr\">ck1</span>: <span class=\"string\">'1'</span>, <span class=\"attr\">phone</span>:<span class=\"string\">\"10086\"</span>, <span class=\"attr\">qqList</span>:&#123;&#125;, <span class=\"attr\">ck2</span>: <span class=\"string\">'2'</span>, <span class=\"attr\">ck3</span>: <span class=\"string\">'3'</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj); <span class=\"comment\">// &#123;ck1: '1', ck2: '2', ck3: '3'&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce删除对象中重复的属性–网上的例子\"><a href=\"#reduce删除对象中重复的属性–网上的例子\" class=\"headerlink\" title=\"reduce删除对象中重复的属性–网上的例子\"></a>reduce删除对象中重复的属性–网上的例子</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小明\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小张\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小李\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小孙\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小周\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小陈\"</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person = person.reduce(<span class=\"function\">(<span class=\"params\">cur,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    obj[next.id] ? <span class=\"string\">\"\"</span> : obj[next.id] = <span class=\"literal\">true</span> &amp;&amp; cur.push(next);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">&#125;,[]) <span class=\"comment\">//设置cur默认类型为数组，并且初始值为空的数组</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(person);</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce数组合并去重并修改数组中对象的属性值\"><a href=\"#reduce数组合并去重并修改数组中对象的属性值\" class=\"headerlink\" title=\"reduce数组合并去重并修改数组中对象的属性值\"></a>reduce数组合并去重并修改数组中对象的属性值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">'应继武'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'李四'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;,&#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">'应继武'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'王五'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;];</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [...arr, ...arr1];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> d = []</span><br><span class=\"line\"><span class=\"keyword\">let</span> hash = &#123;&#125;</span><br><span class=\"line\">d = list.reduce(<span class=\"function\">(<span class=\"params\">item, next, index, sArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(item, next, index, sArr)</span></span><br><span class=\"line\">    hash[next.name] ? item=setArr(next.name,item) : hash[next.name] = <span class=\"literal\">true</span> &amp;&amp; item.push(next)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setArr</span>(<span class=\"params\">name,list</span>)</span>&#123;</span><br><span class=\"line\">    list.forEach(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(item.name===name)&#123;</span><br><span class=\"line\">            item.vendor=<span class=\"number\">3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//console.log(d)</span></span><br><span class=\"line\"><span class=\"comment\">//[&#123; name: '应继武', vendor: 3 &#125;, &#123; name: '李四', vendor: 1 &#125;,&#123; name: '张三', vendor: 3 &#125;, &#123; name: '王五', vendor: 2 &#125;]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"检测是否是数组\"><a href=\"#检测是否是数组\" class=\"headerlink\" title=\"检测是否是数组\"></a>检测是否是数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.isArray([]);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>.isArray(<span class=\"literal\">undefined</span>); <span class=\"comment\">// false;</span></span><br><span class=\"line\"></span><br><span class=\"line\">array <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true 检测对象的原型链是否指向构造函数的prototype对象</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"数组的一些操作\"><a href=\"#数组的一些操作\" class=\"headerlink\" title=\"数组的一些操作\"></a>数组的一些操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。</span></span><br><span class=\"line\"><span class=\"comment\">//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;<span class=\"comment\">//break 跳出循环下面的方法继续执行；return 终止运行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);<span class=\"comment\">//输出1,2,3,4,3,2,1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//map 返回一个新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> users = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"张含韵\"</span>, <span class=\"string\">\"email\"</span>: <span class=\"string\">\"zhang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"江一燕\"</span>,   <span class=\"string\">\"email\"</span>: <span class=\"string\">\"jiang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"李小璐\"</span>,  <span class=\"string\">\"email\"</span>: <span class=\"string\">\"li@email.com\"</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> emails = users.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item.email);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filter 返回过滤后的新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr1=arr.filter(<span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>value&gt;=<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1);<span class=\"comment\">//输出[3,4,3]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"时间戳转-y-m-d-h-m-s\"><a href=\"#时间戳转-y-m-d-h-m-s\" class=\"headerlink\" title=\"时间戳转 y-m-d h:m:s\"></a>时间戳转 y-m-d h:m:s</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timestampToTime</span>(<span class=\"params\">timestamp,full</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = timestamp.length == <span class=\"number\">10</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp * <span class=\"number\">1000</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp);<span class=\"comment\">//时间戳为10位需*1000，时间戳为13位的话不需乘1000</span></span><br><span class=\"line\">    Y = date.getFullYear() + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    D = date.getDate() + <span class=\"string\">' '</span>;</span><br><span class=\"line\">    h = date.getHours() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    m = date.getMinutes() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    s = date.getSeconds();</span><br><span class=\"line\">    <span class=\"comment\">//return Y+M+D+h+m+s;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (full) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Y + M + D + h + m + s;<span class=\"comment\">//2018-11-11 11:11:11</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">ymd</span>: Y + M + D, <span class=\"attr\">hms</span>: h + m + s &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"判断一个变量是不是空对象\"><a href=\"#判断一个变量是不是空对象\" class=\"headerlink\" title=\"判断一个变量是不是空对象\"></a>判断一个变量是不是空对象</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isEmptyObj</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj !== <span class=\"literal\">null</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj === <span class=\"string\">'object'</span> &amp;&amp; !<span class=\"built_in\">Array</span>.isArray(obj) &amp;&amp; (<span class=\"built_in\">Object</span>.getOwnPropertyNames(obj).length === <span class=\"number\">0</span>) &amp;&amp; (<span class=\"built_in\">Object</span>.getOwnPropertySymbols(obj).length === <span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"分割一位数组\"><a href=\"#分割一位数组\" class=\"headerlink\" title=\"分割一位数组\"></a>分割一位数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cutArr</span>(<span class=\"params\">size, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i += size) &#123;</span><br><span class=\"line\">        result.push(data.slice(i, i + size));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//示例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">cutArr(<span class=\"number\">3</span>,data)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/cutArr.png\" alt title=\"结果截图\"></p>\n<h5 id=\"jq判断div是否滚动到底部（loadMore）\"><a href=\"#jq判断div是否滚动到底部（loadMore）\" class=\"headerlink\" title=\"jq判断div是否滚动到底部（loadMore）\"></a>jq判断div是否滚动到底部（loadMore）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#div'</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = $(<span class=\"keyword\">this</span>).scrollTop();<span class=\"comment\">//表示滚动条滚动的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> height = $(<span class=\"keyword\">this</span>).height();<span class=\"comment\">//div高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollHeight = $(<span class=\"keyword\">this</span>)[<span class=\"number\">0</span>].scrollHeight;<span class=\"comment\">//表示滚动条需要滚动的高度</span></span><br><span class=\"line\">  <span class=\"comment\">// var scrollTop = event.currentTarget.scrollTop;</span></span><br><span class=\"line\">  <span class=\"comment\">// var height = event.currentTarget.clientHeight;</span></span><br><span class=\"line\">  <span class=\"comment\">// var scrollHeight = event.currentTarget.scrollHeight;</span></span><br><span class=\"line\">  <span class=\"comment\">//console.log(scrollTop, height, scrollHeight);</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollTop + height == scrollHeight) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'到底了'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollTop == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'到顶了'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>常用方法封装<br>","more":"</p>\n<h5 id=\"修改对象的key值\"><a href=\"#修改对象的key值\" class=\"headerlink\" title=\"修改对象的key值\"></a>修改对象的key值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//如果data是对象可以免去遍历这一步</span></span><br><span class=\"line\">replaceKey(data, oldKeyName, newKeyName) &#123;</span><br><span class=\"line\">      data.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> item) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (key == oldKeyName) &#123;</span><br><span class=\"line\">            item[newKeyName] = item[key];</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> item[key];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"es6解构赋值删除不需要的属性\"><a href=\"#es6解构赋值删除不需要的属性\" class=\"headerlink\" title=\"es6解构赋值删除不需要的属性\"></a>es6解构赋值删除不需要的属性</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123;phone, qqList, ...obj&#125; = &#123;<span class=\"attr\">ck1</span>: <span class=\"string\">'1'</span>, <span class=\"attr\">phone</span>:<span class=\"string\">\"10086\"</span>, <span class=\"attr\">qqList</span>:&#123;&#125;, <span class=\"attr\">ck2</span>: <span class=\"string\">'2'</span>, <span class=\"attr\">ck3</span>: <span class=\"string\">'3'</span>&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj); <span class=\"comment\">// &#123;ck1: '1', ck2: '2', ck3: '3'&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce删除对象中重复的属性–网上的例子\"><a href=\"#reduce删除对象中重复的属性–网上的例子\" class=\"headerlink\" title=\"reduce删除对象中重复的属性–网上的例子\"></a>reduce删除对象中重复的属性–网上的例子</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = [</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小明\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小张\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小李\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小孙\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小周\"</span>&#125;,</span><br><span class=\"line\">     &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">\"小陈\"</span>&#125;,   </span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person = person.reduce(<span class=\"function\">(<span class=\"params\">cur,next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    obj[next.id] ? <span class=\"string\">\"\"</span> : obj[next.id] = <span class=\"literal\">true</span> &amp;&amp; cur.push(next);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur;</span><br><span class=\"line\">&#125;,[]) <span class=\"comment\">//设置cur默认类型为数组，并且初始值为空的数组</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(person);</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"reduce数组合并去重并修改数组中对象的属性值\"><a href=\"#reduce数组合并去重并修改数组中对象的属性值\" class=\"headerlink\" title=\"reduce数组合并去重并修改数组中对象的属性值\"></a>reduce数组合并去重并修改数组中对象的属性值</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">'应继武'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'李四'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;,&#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">1</span> &#125;];</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">'应继武'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'张三'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">'王五'</span>, <span class=\"attr\">vendor</span>: <span class=\"number\">2</span> &#125;];</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [...arr, ...arr1];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> d = []</span><br><span class=\"line\"><span class=\"keyword\">let</span> hash = &#123;&#125;</span><br><span class=\"line\">d = list.reduce(<span class=\"function\">(<span class=\"params\">item, next, index, sArr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(item, next, index, sArr)</span></span><br><span class=\"line\">    hash[next.name] ? item=setArr(next.name,item) : hash[next.name] = <span class=\"literal\">true</span> &amp;&amp; item.push(next)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item</span><br><span class=\"line\">&#125;, [])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setArr</span>(<span class=\"params\">name,list</span>)</span>&#123;</span><br><span class=\"line\">    list.forEach(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(item.name===name)&#123;</span><br><span class=\"line\">            item.vendor=<span class=\"number\">3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//console.log(d)</span></span><br><span class=\"line\"><span class=\"comment\">//[&#123; name: '应继武', vendor: 3 &#125;, &#123; name: '李四', vendor: 1 &#125;,&#123; name: '张三', vendor: 3 &#125;, &#123; name: '王五', vendor: 2 &#125;]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"检测是否是数组\"><a href=\"#检测是否是数组\" class=\"headerlink\" title=\"检测是否是数组\"></a>检测是否是数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.isArray([]);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>.isArray(<span class=\"literal\">undefined</span>); <span class=\"comment\">// false;</span></span><br><span class=\"line\"></span><br><span class=\"line\">array <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true 检测对象的原型链是否指向构造函数的prototype对象</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"数组的一些操作\"><a href=\"#数组的一些操作\" class=\"headerlink\" title=\"数组的一些操作\"></a>数组的一些操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">//forEach遍历数组的话，不能用break跳出循环，也不能用return返回外层。</span></span><br><span class=\"line\"><span class=\"comment\">//for in遍历的是数组的索引（即键名），而for of遍历的是数组元素值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;<span class=\"comment\">//break 跳出循环下面的方法继续执行；return 终止运行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);<span class=\"comment\">//输出1,2,3,4,3,2,1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//map 返回一个新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> users = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"张含韵\"</span>, <span class=\"string\">\"email\"</span>: <span class=\"string\">\"zhang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"江一燕\"</span>,   <span class=\"string\">\"email\"</span>: <span class=\"string\">\"jiang@email.com\"</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"李小璐\"</span>,  <span class=\"string\">\"email\"</span>: <span class=\"string\">\"li@email.com\"</span>&#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> emails = users.map(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>item.email);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filter 返回过滤后的新数组</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr1=arr.filter(<span class=\"function\">(<span class=\"params\">value,index,arr</span>)=&gt;</span>value&gt;=<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1);<span class=\"comment\">//输出[3,4,3]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"时间戳转-y-m-d-h-m-s\"><a href=\"#时间戳转-y-m-d-h-m-s\" class=\"headerlink\" title=\"时间戳转 y-m-d h:m:s\"></a>时间戳转 y-m-d h:m:s</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timestampToTime</span>(<span class=\"params\">timestamp,full</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = timestamp.length == <span class=\"number\">10</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp * <span class=\"number\">1000</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timestamp);<span class=\"comment\">//时间戳为10位需*1000，时间戳为13位的话不需乘1000</span></span><br><span class=\"line\">    Y = date.getFullYear() + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    M = (date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span>) + <span class=\"string\">'-'</span>;</span><br><span class=\"line\">    D = date.getDate() + <span class=\"string\">' '</span>;</span><br><span class=\"line\">    h = date.getHours() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    m = date.getMinutes() + <span class=\"string\">':'</span>;</span><br><span class=\"line\">    s = date.getSeconds();</span><br><span class=\"line\">    <span class=\"comment\">//return Y+M+D+h+m+s;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (full) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Y + M + D + h + m + s;<span class=\"comment\">//2018-11-11 11:11:11</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">ymd</span>: Y + M + D, <span class=\"attr\">hms</span>: h + m + s &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"判断一个变量是不是空对象\"><a href=\"#判断一个变量是不是空对象\" class=\"headerlink\" title=\"判断一个变量是不是空对象\"></a>判断一个变量是不是空对象</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isEmptyObj</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj !== <span class=\"literal\">null</span> &amp;&amp; <span class=\"keyword\">typeof</span> obj === <span class=\"string\">'object'</span> &amp;&amp; !<span class=\"built_in\">Array</span>.isArray(obj) &amp;&amp; (<span class=\"built_in\">Object</span>.getOwnPropertyNames(obj).length === <span class=\"number\">0</span>) &amp;&amp; (<span class=\"built_in\">Object</span>.getOwnPropertySymbols(obj).length === <span class=\"number\">0</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"分割一位数组\"><a href=\"#分割一位数组\" class=\"headerlink\" title=\"分割一位数组\"></a>分割一位数组</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cutArr</span>(<span class=\"params\">size, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i += size) &#123;</span><br><span class=\"line\">        result.push(data.slice(i, i + size));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//示例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">name</span>:<span class=\"string\">'Liming'</span>,<span class=\"attr\">age</span>:<span class=\"string\">'25'</span>&#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">cutArr(<span class=\"number\">3</span>,data)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/cutArr.png\" alt title=\"结果截图\"></p>\n<h5 id=\"jq判断div是否滚动到底部（loadMore）\"><a href=\"#jq判断div是否滚动到底部（loadMore）\" class=\"headerlink\" title=\"jq判断div是否滚动到底部（loadMore）\"></a>jq判断div是否滚动到底部（loadMore）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#div'</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollTop = $(<span class=\"keyword\">this</span>).scrollTop();<span class=\"comment\">//表示滚动条滚动的高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> height = $(<span class=\"keyword\">this</span>).height();<span class=\"comment\">//div高度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollHeight = $(<span class=\"keyword\">this</span>)[<span class=\"number\">0</span>].scrollHeight;<span class=\"comment\">//表示滚动条需要滚动的高度</span></span><br><span class=\"line\">  <span class=\"comment\">// var scrollTop = event.currentTarget.scrollTop;</span></span><br><span class=\"line\">  <span class=\"comment\">// var height = event.currentTarget.clientHeight;</span></span><br><span class=\"line\">  <span class=\"comment\">// var scrollHeight = event.currentTarget.scrollHeight;</span></span><br><span class=\"line\">  <span class=\"comment\">//console.log(scrollTop, height, scrollHeight);</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollTop + height == scrollHeight) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'到底了'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrollTop == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'到顶了'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"前端面试题","date":"2020-04-26T07:16:54.000Z","_content":"前端面试题。\n<!-- more -->\n##### HTTP协议\n#### (1).常见的请求方法\n\nHTTP 1.0\n\n*   1.GET：从指定的资源请求数据\n*   2.POST：向指定的资源提交要被处理的数据，例如\n    *   1.提交表单\n    *   2.将消息发布到公告板，新闻组，邮件列表，博客或类似的文章组；\n*   3.HEAD\n    *   1.类似于get请求，只不过返回的响应中没有具体的内容，只有头部\n    *   2.只请求资源的首部\n    *   3.检查超链接的有效性\n    *   4.检查网页是否被修改\n\nHTTP1.1\n\n*   1.PUT：替换或创建指定资源\n*   2.DELETE：对指定资源进行删除\n\nHTTP2.0\n\n*   1.OPTIONS： 用于获取目的资源所支持的通信选项，比如说服务器支持的请求方式等等。\n\n*   2.TRACE：实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。\n\n*   3.CONNECT\n\n    *   1.为代理服务器准备的\n\n    *   2.在 HTTP 协议中，**`CONNECT`** 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。例如，**`CONNECT`** 可以用来访问采用了 [SSL](https://developer.mozilla.org/en-US/docs/Glossary/SSL) ([HTTPS](https://developer.mozilla.org/zh-CN/docs/Glossary/https)) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。\n\n所有通用服务器必须支持GET和HEAD方法。所有其他方法都是可选的。\n\n*   1.安全性：在[此规范](https://tools.ietf.org/html/rfc7231#section-4.1)定义的请求方法中，GET，HEAD，OPTIONS和TRACE方法被定义为安全的\n*   2.幂等性：PUT，DELETE和安全Method是幂等的。\n*   3.可缓存性：GET, HEAD, and POST。但大多数是只实现GET和HEAD可缓存\n    *   1.表示浏览器是会自动缓存的，以应用于后续请求。除非response中有相关策略\n\n#### (2).GET 和 POST 的区别\n\n*   1.get参数通过url传递，post放在request body中。\n\n*   2.get请求在url中传递的参数是有长度限制的，而post没有。\n\n*   3.get比post更不安全，因为参数直接暴露在url中，所以不能用来传递敏感信息。\n\n*   4.get请求只能进行url编码，而post支持多种编码方式\n\n*   5.get请求会浏览器主动cache，而post支持多种编码方式。\n\n*   6.get请求参数会被完整保留在浏览历史记录里，而post中的参数不会被保留。\n\n*   7.GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。\n\n#### (3).HTTP 状态码\n\n*   1xx (Informational): 收到请求，正在处理\n*   2xx (Successful): 该请求已成功收到，理解并接受\n*   3xx (Redirection): 重定向\n*   4xx (Client Error): 该请求包含错误的语法或不能为完成\n*   5xx (Server Error): 服务器错误\n\n#### (4).301 和 302 有什么具体区别\n\n*   301：永久移动，请求的网页已永久移动到新的位置，服务器返回此响应，会自动将请求者转到新位置\n\n*   302：历史移动，服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来继续以后的请求。\n\n##### MVVM和MVC\n*   **MVC:** MVC是应用最广泛的软件架构之一,一般`MVC`分为:`Model(模型)`,`View(视图)`,`Controller(控制器)`。 这主要是基于分层的目的,让彼此的职责分开.`View`一般用过`Controller`来和`Model`进行联系。`Controller`是`Model`和`View`的协调者,`View`和`Model`不直接联系。基本都是单向联系。\n> 1.View传送指令到Controller。\n\n> 2.Controller完成业务逻辑后改变Model状态。\n\n> 3.Model将新的数据发送至View,用户得到反馈。\n\n*   **MVVM:** `MVVM`是把`MVC`中的`Controller`改变成了`ViewModel`。\n\n    `View`的变化会自动更新到`ViewModel`,`ViewModel`的变化也会自动同步到`View上`显示,通过数据来显示视图层。\n\n## 2.MVVM模式的优点以及与MVC模式的区别\n\n*   MVVM模式的优点:\n\n    *   低耦合:View可以独立于Model变化和修改,一个ViewModel可以绑定到不同的View上,当View变化的时候Model可以不变,当Model变化的时候View也可以不变。\n    *   可重用性: 可以把一些视图逻辑放在一个ViewModel里面,让很多View重用这段视图逻辑。\n    *   独立开发: 开发人员可以专注于业务逻辑和数据的开发,设计人员可以专注于页面的设计。\n*   MVVM和MVC的区别:\n\n    *   MVC中Controller演变成MVVM中的ViewModel\n    *   MVVM通过数据来显示视图层而不是节点操作\n    *   MVVM主要解决了MVC中大量的dom操作使页面渲染性能降低,加载速度变慢,影响用户体验\n\n##### ajax\n(1).实现一个Ajax\n```JavaScript\n\nvar xhr = new XMLHttpRequest()\n// 必须在调用 open()之前指定 onreadystatechange 事件处理程序才能确保跨浏览器兼容性\nxhr.onreadystatechange = function () {\n  if (xhr.readyState === 4) {\n    if (xhr.status >= 200 && xhr.status < 300 || xhr.status ==== 304) {\n      console.log(xhr.responseText)\n    } else {\n      console.log('Error:' + xhr.status)\n    }\n  }\n}\n// 第三个参数表示异步发送请求\nxhr.open('get', '/api/getSth',  true)\n// 参数为作为请求主体发送的数据\nxhr.send(null)\n```\n(2).Ajax状态\n\n0--未初始化。尚未调用 open()方法。\n1--启动。已经调用 open()方法，但尚未调用 send()方法。\n2--发送。已经调用 send()方法，但尚未接收到响应。\n3--接收。已经接收到部分响应数据。\n4--完成。已经接收到全部响应数据，而且已经可以在客户端使用了。\n\n(3).将原生的 ajax 封装成 promise\n```JavaScript\nconst ajax = (url, method, async, data) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      // 已经接收到全部响应数据，而且已经可以在客户端使用了\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(JSON.parse(xhr.responseText))\n        } else if (xhr.status > 400) {\n          reject('发生错误')\n        }\n      }\n    }\n    xhr.open(url, method, async)\n    xhr.send(data || null)\n  })\n}\n```\n有补充或者有更通俗易懂的小伙伴可以私信或者加QQ群：163958730（已满） 145454260 一起讨论~\n","source":"_posts/前端面试题.md","raw":"---\ntitle: 前端面试题\ndate: 2020-04-26 15:16:54\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n前端面试题。\n<!-- more -->\n##### HTTP协议\n#### (1).常见的请求方法\n\nHTTP 1.0\n\n*   1.GET：从指定的资源请求数据\n*   2.POST：向指定的资源提交要被处理的数据，例如\n    *   1.提交表单\n    *   2.将消息发布到公告板，新闻组，邮件列表，博客或类似的文章组；\n*   3.HEAD\n    *   1.类似于get请求，只不过返回的响应中没有具体的内容，只有头部\n    *   2.只请求资源的首部\n    *   3.检查超链接的有效性\n    *   4.检查网页是否被修改\n\nHTTP1.1\n\n*   1.PUT：替换或创建指定资源\n*   2.DELETE：对指定资源进行删除\n\nHTTP2.0\n\n*   1.OPTIONS： 用于获取目的资源所支持的通信选项，比如说服务器支持的请求方式等等。\n\n*   2.TRACE：实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。\n\n*   3.CONNECT\n\n    *   1.为代理服务器准备的\n\n    *   2.在 HTTP 协议中，**`CONNECT`** 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。例如，**`CONNECT`** 可以用来访问采用了 [SSL](https://developer.mozilla.org/en-US/docs/Glossary/SSL) ([HTTPS](https://developer.mozilla.org/zh-CN/docs/Glossary/https)) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。\n\n所有通用服务器必须支持GET和HEAD方法。所有其他方法都是可选的。\n\n*   1.安全性：在[此规范](https://tools.ietf.org/html/rfc7231#section-4.1)定义的请求方法中，GET，HEAD，OPTIONS和TRACE方法被定义为安全的\n*   2.幂等性：PUT，DELETE和安全Method是幂等的。\n*   3.可缓存性：GET, HEAD, and POST。但大多数是只实现GET和HEAD可缓存\n    *   1.表示浏览器是会自动缓存的，以应用于后续请求。除非response中有相关策略\n\n#### (2).GET 和 POST 的区别\n\n*   1.get参数通过url传递，post放在request body中。\n\n*   2.get请求在url中传递的参数是有长度限制的，而post没有。\n\n*   3.get比post更不安全，因为参数直接暴露在url中，所以不能用来传递敏感信息。\n\n*   4.get请求只能进行url编码，而post支持多种编码方式\n\n*   5.get请求会浏览器主动cache，而post支持多种编码方式。\n\n*   6.get请求参数会被完整保留在浏览历史记录里，而post中的参数不会被保留。\n\n*   7.GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。\n\n#### (3).HTTP 状态码\n\n*   1xx (Informational): 收到请求，正在处理\n*   2xx (Successful): 该请求已成功收到，理解并接受\n*   3xx (Redirection): 重定向\n*   4xx (Client Error): 该请求包含错误的语法或不能为完成\n*   5xx (Server Error): 服务器错误\n\n#### (4).301 和 302 有什么具体区别\n\n*   301：永久移动，请求的网页已永久移动到新的位置，服务器返回此响应，会自动将请求者转到新位置\n\n*   302：历史移动，服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来继续以后的请求。\n\n##### MVVM和MVC\n*   **MVC:** MVC是应用最广泛的软件架构之一,一般`MVC`分为:`Model(模型)`,`View(视图)`,`Controller(控制器)`。 这主要是基于分层的目的,让彼此的职责分开.`View`一般用过`Controller`来和`Model`进行联系。`Controller`是`Model`和`View`的协调者,`View`和`Model`不直接联系。基本都是单向联系。\n> 1.View传送指令到Controller。\n\n> 2.Controller完成业务逻辑后改变Model状态。\n\n> 3.Model将新的数据发送至View,用户得到反馈。\n\n*   **MVVM:** `MVVM`是把`MVC`中的`Controller`改变成了`ViewModel`。\n\n    `View`的变化会自动更新到`ViewModel`,`ViewModel`的变化也会自动同步到`View上`显示,通过数据来显示视图层。\n\n## 2.MVVM模式的优点以及与MVC模式的区别\n\n*   MVVM模式的优点:\n\n    *   低耦合:View可以独立于Model变化和修改,一个ViewModel可以绑定到不同的View上,当View变化的时候Model可以不变,当Model变化的时候View也可以不变。\n    *   可重用性: 可以把一些视图逻辑放在一个ViewModel里面,让很多View重用这段视图逻辑。\n    *   独立开发: 开发人员可以专注于业务逻辑和数据的开发,设计人员可以专注于页面的设计。\n*   MVVM和MVC的区别:\n\n    *   MVC中Controller演变成MVVM中的ViewModel\n    *   MVVM通过数据来显示视图层而不是节点操作\n    *   MVVM主要解决了MVC中大量的dom操作使页面渲染性能降低,加载速度变慢,影响用户体验\n\n##### ajax\n(1).实现一个Ajax\n```JavaScript\n\nvar xhr = new XMLHttpRequest()\n// 必须在调用 open()之前指定 onreadystatechange 事件处理程序才能确保跨浏览器兼容性\nxhr.onreadystatechange = function () {\n  if (xhr.readyState === 4) {\n    if (xhr.status >= 200 && xhr.status < 300 || xhr.status ==== 304) {\n      console.log(xhr.responseText)\n    } else {\n      console.log('Error:' + xhr.status)\n    }\n  }\n}\n// 第三个参数表示异步发送请求\nxhr.open('get', '/api/getSth',  true)\n// 参数为作为请求主体发送的数据\nxhr.send(null)\n```\n(2).Ajax状态\n\n0--未初始化。尚未调用 open()方法。\n1--启动。已经调用 open()方法，但尚未调用 send()方法。\n2--发送。已经调用 send()方法，但尚未接收到响应。\n3--接收。已经接收到部分响应数据。\n4--完成。已经接收到全部响应数据，而且已经可以在客户端使用了。\n\n(3).将原生的 ajax 封装成 promise\n```JavaScript\nconst ajax = (url, method, async, data) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      // 已经接收到全部响应数据，而且已经可以在客户端使用了\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(JSON.parse(xhr.responseText))\n        } else if (xhr.status > 400) {\n          reject('发生错误')\n        }\n      }\n    }\n    xhr.open(url, method, async)\n    xhr.send(data || null)\n  })\n}\n```\n有补充或者有更通俗易懂的小伙伴可以私信或者加QQ群：163958730（已满） 145454260 一起讨论~\n","slug":"前端面试题","published":1,"updated":"2020-04-26T11:20:03.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u0002tgw7gzk4wvj5n","content":"<p>前端面试题。<br><a id=\"more\"></a></p>\n<h5 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h5><h4 id=\"1-常见的请求方法\"><a href=\"#1-常见的请求方法\" class=\"headerlink\" title=\"(1).常见的请求方法\"></a>(1).常见的请求方法</h4><p>HTTP 1.0</p>\n<ul>\n<li>1.GET：从指定的资源请求数据</li>\n<li>2.POST：向指定的资源提交要被处理的数据，例如<ul>\n<li>1.提交表单</li>\n<li>2.将消息发布到公告板，新闻组，邮件列表，博客或类似的文章组；</li>\n</ul>\n</li>\n<li>3.HEAD<ul>\n<li>1.类似于get请求，只不过返回的响应中没有具体的内容，只有头部</li>\n<li>2.只请求资源的首部</li>\n<li>3.检查超链接的有效性</li>\n<li>4.检查网页是否被修改</li>\n</ul>\n</li>\n</ul>\n<p>HTTP1.1</p>\n<ul>\n<li>1.PUT：替换或创建指定资源</li>\n<li>2.DELETE：对指定资源进行删除</li>\n</ul>\n<p>HTTP2.0</p>\n<ul>\n<li><p>1.OPTIONS： 用于获取目的资源所支持的通信选项，比如说服务器支持的请求方式等等。</p>\n</li>\n<li><p>2.TRACE：实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。</p>\n</li>\n<li><p>3.CONNECT</p>\n<ul>\n<li><p>1.为代理服务器准备的</p>\n</li>\n<li><p>2.在 HTTP 协议中，<strong><code>CONNECT</code></strong> 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。例如，<strong><code>CONNECT</code></strong> 可以用来访问采用了 <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/SSL\" target=\"_blank\" rel=\"noopener\">SSL</a> (<a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" target=\"_blank\" rel=\"noopener\">HTTPS</a>) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>所有通用服务器必须支持GET和HEAD方法。所有其他方法都是可选的。</p>\n<ul>\n<li>1.安全性：在<a href=\"https://tools.ietf.org/html/rfc7231#section-4.1\" target=\"_blank\" rel=\"noopener\">此规范</a>定义的请求方法中，GET，HEAD，OPTIONS和TRACE方法被定义为安全的</li>\n<li>2.幂等性：PUT，DELETE和安全Method是幂等的。</li>\n<li>3.可缓存性：GET, HEAD, and POST。但大多数是只实现GET和HEAD可缓存<ul>\n<li>1.表示浏览器是会自动缓存的，以应用于后续请求。除非response中有相关策略</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-GET-和-POST-的区别\"><a href=\"#2-GET-和-POST-的区别\" class=\"headerlink\" title=\"(2).GET 和 POST 的区别\"></a>(2).GET 和 POST 的区别</h4><ul>\n<li><p>1.get参数通过url传递，post放在request body中。</p>\n</li>\n<li><p>2.get请求在url中传递的参数是有长度限制的，而post没有。</p>\n</li>\n<li><p>3.get比post更不安全，因为参数直接暴露在url中，所以不能用来传递敏感信息。</p>\n</li>\n<li><p>4.get请求只能进行url编码，而post支持多种编码方式</p>\n</li>\n<li><p>5.get请求会浏览器主动cache，而post支持多种编码方式。</p>\n</li>\n<li><p>6.get请求参数会被完整保留在浏览历史记录里，而post中的参数不会被保留。</p>\n</li>\n<li><p>7.GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。</p>\n</li>\n</ul>\n<h4 id=\"3-HTTP-状态码\"><a href=\"#3-HTTP-状态码\" class=\"headerlink\" title=\"(3).HTTP 状态码\"></a>(3).HTTP 状态码</h4><ul>\n<li>1xx (Informational): 收到请求，正在处理</li>\n<li>2xx (Successful): 该请求已成功收到，理解并接受</li>\n<li>3xx (Redirection): 重定向</li>\n<li>4xx (Client Error): 该请求包含错误的语法或不能为完成</li>\n<li>5xx (Server Error): 服务器错误</li>\n</ul>\n<h4 id=\"4-301-和-302-有什么具体区别\"><a href=\"#4-301-和-302-有什么具体区别\" class=\"headerlink\" title=\"(4).301 和 302 有什么具体区别\"></a>(4).301 和 302 有什么具体区别</h4><ul>\n<li><p>301：永久移动，请求的网页已永久移动到新的位置，服务器返回此响应，会自动将请求者转到新位置</p>\n</li>\n<li><p>302：历史移动，服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来继续以后的请求。</p>\n</li>\n</ul>\n<h5 id=\"MVVM和MVC\"><a href=\"#MVVM和MVC\" class=\"headerlink\" title=\"MVVM和MVC\"></a>MVVM和MVC</h5><ul>\n<li><strong>MVC:</strong> MVC是应用最广泛的软件架构之一,一般<code>MVC</code>分为:<code>Model(模型)</code>,<code>View(视图)</code>,<code>Controller(控制器)</code>。 这主要是基于分层的目的,让彼此的职责分开.<code>View</code>一般用过<code>Controller</code>来和<code>Model</code>进行联系。<code>Controller</code>是<code>Model</code>和<code>View</code>的协调者,<code>View</code>和<code>Model</code>不直接联系。基本都是单向联系。<blockquote>\n<p>1.View传送指令到Controller。</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>2.Controller完成业务逻辑后改变Model状态。</p>\n</blockquote>\n<blockquote>\n<p>3.Model将新的数据发送至View,用户得到反馈。</p>\n</blockquote>\n<ul>\n<li><p><strong>MVVM:</strong> <code>MVVM</code>是把<code>MVC</code>中的<code>Controller</code>改变成了<code>ViewModel</code>。</p>\n<p><code>View</code>的变化会自动更新到<code>ViewModel</code>,<code>ViewModel</code>的变化也会自动同步到<code>View上</code>显示,通过数据来显示视图层。</p>\n</li>\n</ul>\n<h2 id=\"2-MVVM模式的优点以及与MVC模式的区别\"><a href=\"#2-MVVM模式的优点以及与MVC模式的区别\" class=\"headerlink\" title=\"2.MVVM模式的优点以及与MVC模式的区别\"></a>2.MVVM模式的优点以及与MVC模式的区别</h2><ul>\n<li><p>MVVM模式的优点:</p>\n<ul>\n<li>低耦合:View可以独立于Model变化和修改,一个ViewModel可以绑定到不同的View上,当View变化的时候Model可以不变,当Model变化的时候View也可以不变。</li>\n<li>可重用性: 可以把一些视图逻辑放在一个ViewModel里面,让很多View重用这段视图逻辑。</li>\n<li>独立开发: 开发人员可以专注于业务逻辑和数据的开发,设计人员可以专注于页面的设计。</li>\n</ul>\n</li>\n<li><p>MVVM和MVC的区别:</p>\n<ul>\n<li>MVC中Controller演变成MVVM中的ViewModel</li>\n<li>MVVM通过数据来显示视图层而不是节点操作</li>\n<li>MVVM主要解决了MVC中大量的dom操作使页面渲染性能降低,加载速度变慢,影响用户体验</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"ajax\"><a href=\"#ajax\" class=\"headerlink\" title=\"ajax\"></a>ajax</h5><p>(1).实现一个Ajax<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\"><span class=\"comment\">// 必须在调用 open()之前指定 onreadystatechange 事件处理程序才能确保跨浏览器兼容性</span></span><br><span class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xhr.readyState === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhr.status &gt;= <span class=\"number\">200</span> &amp;&amp; xhr.status &lt; <span class=\"number\">300</span> || xhr.status ==== <span class=\"number\">304</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(xhr.responseText)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Error:'</span> + xhr.status)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 第三个参数表示异步发送请求</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">'get'</span>, <span class=\"string\">'/api/getSth'</span>,  <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"comment\">// 参数为作为请求主体发送的数据</span></span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure></p>\n<p>(2).Ajax状态</p>\n<p>0–未初始化。尚未调用 open()方法。<br>1–启动。已经调用 open()方法，但尚未调用 send()方法。<br>2–发送。已经调用 send()方法，但尚未接收到响应。<br>3–接收。已经接收到部分响应数据。<br>4–完成。已经接收到全部响应数据，而且已经可以在客户端使用了。</p>\n<p>(3).将原生的 ajax 封装成 promise<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ajax = <span class=\"function\">(<span class=\"params\">url, method, <span class=\"keyword\">async</span>, data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\">    xhr.onreadystatechange = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 已经接收到全部响应数据，而且已经可以在客户端使用了</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (xhr.readyState === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xhr.status === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">          resolve(<span class=\"built_in\">JSON</span>.parse(xhr.responseText))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xhr.status &gt; <span class=\"number\">400</span>) &#123;</span><br><span class=\"line\">          reject(<span class=\"string\">'发生错误'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.open(url, method, <span class=\"keyword\">async</span>)</span><br><span class=\"line\">    xhr.send(data || <span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>有补充或者有更通俗易懂的小伙伴可以私信或者加QQ群：163958730（已满） 145454260 一起讨论~</p>\n","site":{"data":{}},"excerpt":"<p>前端面试题。<br>","more":"</p>\n<h5 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h5><h4 id=\"1-常见的请求方法\"><a href=\"#1-常见的请求方法\" class=\"headerlink\" title=\"(1).常见的请求方法\"></a>(1).常见的请求方法</h4><p>HTTP 1.0</p>\n<ul>\n<li>1.GET：从指定的资源请求数据</li>\n<li>2.POST：向指定的资源提交要被处理的数据，例如<ul>\n<li>1.提交表单</li>\n<li>2.将消息发布到公告板，新闻组，邮件列表，博客或类似的文章组；</li>\n</ul>\n</li>\n<li>3.HEAD<ul>\n<li>1.类似于get请求，只不过返回的响应中没有具体的内容，只有头部</li>\n<li>2.只请求资源的首部</li>\n<li>3.检查超链接的有效性</li>\n<li>4.检查网页是否被修改</li>\n</ul>\n</li>\n</ul>\n<p>HTTP1.1</p>\n<ul>\n<li>1.PUT：替换或创建指定资源</li>\n<li>2.DELETE：对指定资源进行删除</li>\n</ul>\n<p>HTTP2.0</p>\n<ul>\n<li><p>1.OPTIONS： 用于获取目的资源所支持的通信选项，比如说服务器支持的请求方式等等。</p>\n</li>\n<li><p>2.TRACE：实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。</p>\n</li>\n<li><p>3.CONNECT</p>\n<ul>\n<li><p>1.为代理服务器准备的</p>\n</li>\n<li><p>2.在 HTTP 协议中，<strong><code>CONNECT</code></strong> 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。例如，<strong><code>CONNECT</code></strong> 可以用来访问采用了 <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/SSL\" target=\"_blank\" rel=\"noopener\">SSL</a> (<a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" target=\"_blank\" rel=\"noopener\">HTTPS</a>) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>所有通用服务器必须支持GET和HEAD方法。所有其他方法都是可选的。</p>\n<ul>\n<li>1.安全性：在<a href=\"https://tools.ietf.org/html/rfc7231#section-4.1\" target=\"_blank\" rel=\"noopener\">此规范</a>定义的请求方法中，GET，HEAD，OPTIONS和TRACE方法被定义为安全的</li>\n<li>2.幂等性：PUT，DELETE和安全Method是幂等的。</li>\n<li>3.可缓存性：GET, HEAD, and POST。但大多数是只实现GET和HEAD可缓存<ul>\n<li>1.表示浏览器是会自动缓存的，以应用于后续请求。除非response中有相关策略</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2-GET-和-POST-的区别\"><a href=\"#2-GET-和-POST-的区别\" class=\"headerlink\" title=\"(2).GET 和 POST 的区别\"></a>(2).GET 和 POST 的区别</h4><ul>\n<li><p>1.get参数通过url传递，post放在request body中。</p>\n</li>\n<li><p>2.get请求在url中传递的参数是有长度限制的，而post没有。</p>\n</li>\n<li><p>3.get比post更不安全，因为参数直接暴露在url中，所以不能用来传递敏感信息。</p>\n</li>\n<li><p>4.get请求只能进行url编码，而post支持多种编码方式</p>\n</li>\n<li><p>5.get请求会浏览器主动cache，而post支持多种编码方式。</p>\n</li>\n<li><p>6.get请求参数会被完整保留在浏览历史记录里，而post中的参数不会被保留。</p>\n</li>\n<li><p>7.GET和POST本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。</p>\n</li>\n</ul>\n<h4 id=\"3-HTTP-状态码\"><a href=\"#3-HTTP-状态码\" class=\"headerlink\" title=\"(3).HTTP 状态码\"></a>(3).HTTP 状态码</h4><ul>\n<li>1xx (Informational): 收到请求，正在处理</li>\n<li>2xx (Successful): 该请求已成功收到，理解并接受</li>\n<li>3xx (Redirection): 重定向</li>\n<li>4xx (Client Error): 该请求包含错误的语法或不能为完成</li>\n<li>5xx (Server Error): 服务器错误</li>\n</ul>\n<h4 id=\"4-301-和-302-有什么具体区别\"><a href=\"#4-301-和-302-有什么具体区别\" class=\"headerlink\" title=\"(4).301 和 302 有什么具体区别\"></a>(4).301 和 302 有什么具体区别</h4><ul>\n<li><p>301：永久移动，请求的网页已永久移动到新的位置，服务器返回此响应，会自动将请求者转到新位置</p>\n</li>\n<li><p>302：历史移动，服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来继续以后的请求。</p>\n</li>\n</ul>\n<h5 id=\"MVVM和MVC\"><a href=\"#MVVM和MVC\" class=\"headerlink\" title=\"MVVM和MVC\"></a>MVVM和MVC</h5><ul>\n<li><strong>MVC:</strong> MVC是应用最广泛的软件架构之一,一般<code>MVC</code>分为:<code>Model(模型)</code>,<code>View(视图)</code>,<code>Controller(控制器)</code>。 这主要是基于分层的目的,让彼此的职责分开.<code>View</code>一般用过<code>Controller</code>来和<code>Model</code>进行联系。<code>Controller</code>是<code>Model</code>和<code>View</code>的协调者,<code>View</code>和<code>Model</code>不直接联系。基本都是单向联系。<blockquote>\n<p>1.View传送指令到Controller。</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>2.Controller完成业务逻辑后改变Model状态。</p>\n</blockquote>\n<blockquote>\n<p>3.Model将新的数据发送至View,用户得到反馈。</p>\n</blockquote>\n<ul>\n<li><p><strong>MVVM:</strong> <code>MVVM</code>是把<code>MVC</code>中的<code>Controller</code>改变成了<code>ViewModel</code>。</p>\n<p><code>View</code>的变化会自动更新到<code>ViewModel</code>,<code>ViewModel</code>的变化也会自动同步到<code>View上</code>显示,通过数据来显示视图层。</p>\n</li>\n</ul>\n<h2 id=\"2-MVVM模式的优点以及与MVC模式的区别\"><a href=\"#2-MVVM模式的优点以及与MVC模式的区别\" class=\"headerlink\" title=\"2.MVVM模式的优点以及与MVC模式的区别\"></a>2.MVVM模式的优点以及与MVC模式的区别</h2><ul>\n<li><p>MVVM模式的优点:</p>\n<ul>\n<li>低耦合:View可以独立于Model变化和修改,一个ViewModel可以绑定到不同的View上,当View变化的时候Model可以不变,当Model变化的时候View也可以不变。</li>\n<li>可重用性: 可以把一些视图逻辑放在一个ViewModel里面,让很多View重用这段视图逻辑。</li>\n<li>独立开发: 开发人员可以专注于业务逻辑和数据的开发,设计人员可以专注于页面的设计。</li>\n</ul>\n</li>\n<li><p>MVVM和MVC的区别:</p>\n<ul>\n<li>MVC中Controller演变成MVVM中的ViewModel</li>\n<li>MVVM通过数据来显示视图层而不是节点操作</li>\n<li>MVVM主要解决了MVC中大量的dom操作使页面渲染性能降低,加载速度变慢,影响用户体验</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"ajax\"><a href=\"#ajax\" class=\"headerlink\" title=\"ajax\"></a>ajax</h5><p>(1).实现一个Ajax<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\"><span class=\"comment\">// 必须在调用 open()之前指定 onreadystatechange 事件处理程序才能确保跨浏览器兼容性</span></span><br><span class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xhr.readyState === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhr.status &gt;= <span class=\"number\">200</span> &amp;&amp; xhr.status &lt; <span class=\"number\">300</span> || xhr.status ==== <span class=\"number\">304</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(xhr.responseText)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'Error:'</span> + xhr.status)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 第三个参数表示异步发送请求</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">'get'</span>, <span class=\"string\">'/api/getSth'</span>,  <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"comment\">// 参数为作为请求主体发送的数据</span></span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure></p>\n<p>(2).Ajax状态</p>\n<p>0–未初始化。尚未调用 open()方法。<br>1–启动。已经调用 open()方法，但尚未调用 send()方法。<br>2–发送。已经调用 send()方法，但尚未接收到响应。<br>3–接收。已经接收到部分响应数据。<br>4–完成。已经接收到全部响应数据，而且已经可以在客户端使用了。</p>\n<p>(3).将原生的 ajax 封装成 promise<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ajax = <span class=\"function\">(<span class=\"params\">url, method, <span class=\"keyword\">async</span>, data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest()</span><br><span class=\"line\">    xhr.onreadystatechange = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 已经接收到全部响应数据，而且已经可以在客户端使用了</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (xhr.readyState === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xhr.status === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">          resolve(<span class=\"built_in\">JSON</span>.parse(xhr.responseText))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xhr.status &gt; <span class=\"number\">400</span>) &#123;</span><br><span class=\"line\">          reject(<span class=\"string\">'发生错误'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.open(url, method, <span class=\"keyword\">async</span>)</span><br><span class=\"line\">    xhr.send(data || <span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>有补充或者有更通俗易懂的小伙伴可以私信或者加QQ群：163958730（已满） 145454260 一起讨论~</p>"},{"title":"微信测试号接入微信sdk本地开发调试","date":"2021-07-28T13:52:22.000Z","_content":"微信测试号接入微信sdk本地开发调试\n<!-- more -->\nH5开发的网页在微信端需要调用微信sdk的录音功能,自己摸索下来总结的一些经验。\n>由于用户体验和安全性方面的考虑，微信公众号的注册有一定门槛，某些高级接口的权限需要微信认证后才可以获取。所以，为了帮助开发者快速了解和上手微信公众号开发，熟悉各个接口的调用，我们推出了微信公众帐号测试号，通过手机微信扫描二维码即可获得测试号。\n## 申请测试号\n[点此去申请微信测试号](https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login)\n## 获取jssdk签名配置\n1. 在测试号管理界面绑定`JS接口安全域名`**(可以用本地的ip，方便在真机预览调试)**\n2. 扫码关注自己的测试号\n3. 要引入微信`jssdk`需要**通过config接口注入权限验证配置**\n    ``` js\n    wx.config({\n      debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n      appId: '', // 必填，公众号的唯一标识\n      timestamp: , // 必填，生成签名的时间戳\n      nonceStr: '', // 必填，生成签名的随机串\n      signature: '',// 必填，签名\n      jsApiList: [] // 必填，需要使用的JS接口列表\n    });\n    ```\n**获取signature**\n1. 访问[此链接](https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appid}&secret=${secret})获取`access_token`,参数就是测试号的`appid`和`appsecret`\n2. 通过获取到的`access_token`采用http GET方式请求获得jsapi_ticket（有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket）：https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&type=jsapi  \n    成功返回如下JSON：\n    ```\n    {\n      \"errcode\":0,\n      \"errmsg\":\"ok\",\n      \"ticket\":\"bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA\",\n      \"expires_in\":7200\n    }\n    ```\n    获得`jsapi_ticket`之后，就可以生成`JS-SDK`权限验证的签名了。我是使用官方提供的`python`版的`demo`生成的签名，调试前生成签名，填入配置，在微信开发者工具的公众号网页调试地址栏输入我们本地的开发`ip`再点击预览即可在手机上进行调试\n    >[示例代码](http://demo.open.weixin.qq.com/jssdk/sample.zip)\n\n    >备注：链接中包含php、java、nodejs以及python的示例代码供第三方参考，第三方切记要对获取的accesstoken以及jsapi_ticket进行缓存以确保不会触发频率限制。\n## python3的需要对官方提供的代码进行一定的修改\n``` js\nimport time\nimport random\nimport string\nimport hashlib\n\n\nclass Sign:\n    def __init__(self, jsapi_ticket, url):\n        self.ret = {\n            'nonceStr': self.__create_nonce_str(),\n            'jsapi_ticket': jsapi_ticket,\n            'timestamp': self.__create_timestamp(),\n            'url': url\n        }\n\n    def __create_nonce_str(self):\n        return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(15))\n\n    def __create_timestamp(self):\n        return int(time.time())\n\n    def sign(self):\n        string = '&'.join(['%s=%s' % (key.lower(), self.ret[key]) for key in sorted(self.ret)])\n        print(string)\n        string=string.encode(\"utf8\")//需要先编码 不然运行会报错\n        self.ret['signature'] = hashlib.sha1(string).hexdigest()\n        return self.ret\n\n\nif __name__ == '__main__':\n    # 注意 URL 一定要动态获取，不能 hardcode\n    sign = Sign('jsapi_ticket','url')//url 可以用本地开发地址(本机ip)方便调试\n    print(sign.sign())\n```\n","source":"_posts/微信测试号接入微信sdk本地开发调试.md","raw":"---\ntitle: 微信测试号接入微信sdk本地开发调试\ndate: 2021-07-28 21:52:22\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n微信测试号接入微信sdk本地开发调试\n<!-- more -->\nH5开发的网页在微信端需要调用微信sdk的录音功能,自己摸索下来总结的一些经验。\n>由于用户体验和安全性方面的考虑，微信公众号的注册有一定门槛，某些高级接口的权限需要微信认证后才可以获取。所以，为了帮助开发者快速了解和上手微信公众号开发，熟悉各个接口的调用，我们推出了微信公众帐号测试号，通过手机微信扫描二维码即可获得测试号。\n## 申请测试号\n[点此去申请微信测试号](https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login)\n## 获取jssdk签名配置\n1. 在测试号管理界面绑定`JS接口安全域名`**(可以用本地的ip，方便在真机预览调试)**\n2. 扫码关注自己的测试号\n3. 要引入微信`jssdk`需要**通过config接口注入权限验证配置**\n    ``` js\n    wx.config({\n      debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n      appId: '', // 必填，公众号的唯一标识\n      timestamp: , // 必填，生成签名的时间戳\n      nonceStr: '', // 必填，生成签名的随机串\n      signature: '',// 必填，签名\n      jsApiList: [] // 必填，需要使用的JS接口列表\n    });\n    ```\n**获取signature**\n1. 访问[此链接](https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appid}&secret=${secret})获取`access_token`,参数就是测试号的`appid`和`appsecret`\n2. 通过获取到的`access_token`采用http GET方式请求获得jsapi_ticket（有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket）：https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&type=jsapi  \n    成功返回如下JSON：\n    ```\n    {\n      \"errcode\":0,\n      \"errmsg\":\"ok\",\n      \"ticket\":\"bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA\",\n      \"expires_in\":7200\n    }\n    ```\n    获得`jsapi_ticket`之后，就可以生成`JS-SDK`权限验证的签名了。我是使用官方提供的`python`版的`demo`生成的签名，调试前生成签名，填入配置，在微信开发者工具的公众号网页调试地址栏输入我们本地的开发`ip`再点击预览即可在手机上进行调试\n    >[示例代码](http://demo.open.weixin.qq.com/jssdk/sample.zip)\n\n    >备注：链接中包含php、java、nodejs以及python的示例代码供第三方参考，第三方切记要对获取的accesstoken以及jsapi_ticket进行缓存以确保不会触发频率限制。\n## python3的需要对官方提供的代码进行一定的修改\n``` js\nimport time\nimport random\nimport string\nimport hashlib\n\n\nclass Sign:\n    def __init__(self, jsapi_ticket, url):\n        self.ret = {\n            'nonceStr': self.__create_nonce_str(),\n            'jsapi_ticket': jsapi_ticket,\n            'timestamp': self.__create_timestamp(),\n            'url': url\n        }\n\n    def __create_nonce_str(self):\n        return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(15))\n\n    def __create_timestamp(self):\n        return int(time.time())\n\n    def sign(self):\n        string = '&'.join(['%s=%s' % (key.lower(), self.ret[key]) for key in sorted(self.ret)])\n        print(string)\n        string=string.encode(\"utf8\")//需要先编码 不然运行会报错\n        self.ret['signature'] = hashlib.sha1(string).hexdigest()\n        return self.ret\n\n\nif __name__ == '__main__':\n    # 注意 URL 一定要动态获取，不能 hardcode\n    sign = Sign('jsapi_ticket','url')//url 可以用本地开发地址(本机ip)方便调试\n    print(sign.sign())\n```\n","slug":"微信测试号接入微信sdk本地开发调试","published":1,"updated":"2021-07-28T13:53:29.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u2002wgw7g4nuhhtbe","content":"<p>微信测试号接入微信sdk本地开发调试<br><a id=\"more\"></a><br>H5开发的网页在微信端需要调用微信sdk的录音功能,自己摸索下来总结的一些经验。</p>\n<blockquote>\n<p>由于用户体验和安全性方面的考虑，微信公众号的注册有一定门槛，某些高级接口的权限需要微信认证后才可以获取。所以，为了帮助开发者快速了解和上手微信公众号开发，熟悉各个接口的调用，我们推出了微信公众帐号测试号，通过手机微信扫描二维码即可获得测试号。</p>\n</blockquote>\n<h2 id=\"申请测试号\"><a href=\"#申请测试号\" class=\"headerlink\" title=\"申请测试号\"></a>申请测试号</h2><p><a href=\"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login\" target=\"_blank\" rel=\"noopener\">点此去申请微信测试号</a></p>\n<h2 id=\"获取jssdk签名配置\"><a href=\"#获取jssdk签名配置\" class=\"headerlink\" title=\"获取jssdk签名配置\"></a>获取jssdk签名配置</h2><ol>\n<li>在测试号管理界面绑定<code>JS接口安全域名</code><strong>(可以用本地的ip，方便在真机预览调试)</strong></li>\n<li>扫码关注自己的测试号</li>\n<li>要引入微信<code>jssdk</code>需要<strong>通过config接口注入权限验证配置</strong> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  debug: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class=\"line\">  appId: <span class=\"string\">''</span>, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">  timestamp: , <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">  nonceStr: <span class=\"string\">''</span>, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">  signature: <span class=\"string\">''</span>,<span class=\"comment\">// 必填，签名</span></span><br><span class=\"line\">  jsApiList: [] <span class=\"comment\">// 必填，需要使用的JS接口列表</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>获取signature</strong></p>\n<ol>\n<li>访问<a href=\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=${appid}&amp;secret=${secret}\" target=\"_blank\" rel=\"noopener\">此链接</a>获取<code>access_token</code>,参数就是测试号的<code>appid</code>和<code>appsecret</code></li>\n<li><p>通过获取到的<code>access_token</code>采用http GET方式请求获得jsapi_ticket（有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket）：<a href=\"https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi\" target=\"_blank\" rel=\"noopener\">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi</a><br> 成功返回如下JSON：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;errcode&quot;:0,</span><br><span class=\"line\">  &quot;errmsg&quot;:&quot;ok&quot;,</span><br><span class=\"line\">  &quot;ticket&quot;:&quot;bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA&quot;,</span><br><span class=\"line\">  &quot;expires_in&quot;:7200</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 获得<code>jsapi_ticket</code>之后，就可以生成<code>JS-SDK</code>权限验证的签名了。我是使用官方提供的<code>python</code>版的<code>demo</code>生成的签名，调试前生成签名，填入配置，在微信开发者工具的公众号网页调试地址栏输入我们本地的开发<code>ip</code>再点击预览即可在手机上进行调试</p>\n<blockquote>\n<p><a href=\"http://demo.open.weixin.qq.com/jssdk/sample.zip\" target=\"_blank\" rel=\"noopener\">示例代码</a></p>\n</blockquote>\n<blockquote>\n<p>备注：链接中包含php、java、nodejs以及python的示例代码供第三方参考，第三方切记要对获取的accesstoken以及jsapi_ticket进行缓存以确保不会触发频率限制。</p>\n</blockquote>\n<h2 id=\"python3的需要对官方提供的代码进行一定的修改\"><a href=\"#python3的需要对官方提供的代码进行一定的修改\" class=\"headerlink\" title=\"python3的需要对官方提供的代码进行一定的修改\"></a>python3的需要对官方提供的代码进行一定的修改</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Sign:</span><br><span class=\"line\">    def __init__(self, jsapi_ticket, url):</span><br><span class=\"line\">        self.ret = &#123;</span><br><span class=\"line\">            <span class=\"string\">'nonceStr'</span>: self.__create_nonce_str(),</span><br><span class=\"line\">            <span class=\"string\">'jsapi_ticket'</span>: jsapi_ticket,</span><br><span class=\"line\">            <span class=\"string\">'timestamp'</span>: self.__create_timestamp(),</span><br><span class=\"line\">            <span class=\"string\">'url'</span>: url</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    def __create_nonce_str(self):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>.join(random.choice(string.ascii_letters + string.digits) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(<span class=\"number\">15</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    def __create_timestamp(self):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(time.time())</span><br><span class=\"line\"></span><br><span class=\"line\">    def sign(self):</span><br><span class=\"line\">        string = <span class=\"string\">'&amp;'</span>.join([<span class=\"string\">'%s=%s'</span> % (key.lower(), self.ret[key]) <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> sorted(self.ret)])</span><br><span class=\"line\">        print(string)</span><br><span class=\"line\">        string=string.encode(<span class=\"string\">\"utf8\"</span>)<span class=\"comment\">//需要先编码 不然运行会报错</span></span><br><span class=\"line\">        self.ret[<span class=\"string\">'signature'</span>] = hashlib.sha1(string).hexdigest()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.ret</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    # 注意 URL 一定要动态获取，不能 hardcode</span><br><span class=\"line\">    sign = Sign(<span class=\"string\">'jsapi_ticket'</span>,<span class=\"string\">'url'</span>)<span class=\"comment\">//url 可以用本地开发地址(本机ip)方便调试</span></span><br><span class=\"line\">    print(sign.sign())</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>微信测试号接入微信sdk本地开发调试<br>","more":"<br>H5开发的网页在微信端需要调用微信sdk的录音功能,自己摸索下来总结的一些经验。</p>\n<blockquote>\n<p>由于用户体验和安全性方面的考虑，微信公众号的注册有一定门槛，某些高级接口的权限需要微信认证后才可以获取。所以，为了帮助开发者快速了解和上手微信公众号开发，熟悉各个接口的调用，我们推出了微信公众帐号测试号，通过手机微信扫描二维码即可获得测试号。</p>\n</blockquote>\n<h2 id=\"申请测试号\"><a href=\"#申请测试号\" class=\"headerlink\" title=\"申请测试号\"></a>申请测试号</h2><p><a href=\"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login\" target=\"_blank\" rel=\"noopener\">点此去申请微信测试号</a></p>\n<h2 id=\"获取jssdk签名配置\"><a href=\"#获取jssdk签名配置\" class=\"headerlink\" title=\"获取jssdk签名配置\"></a>获取jssdk签名配置</h2><ol>\n<li>在测试号管理界面绑定<code>JS接口安全域名</code><strong>(可以用本地的ip，方便在真机预览调试)</strong></li>\n<li>扫码关注自己的测试号</li>\n<li>要引入微信<code>jssdk</code>需要<strong>通过config接口注入权限验证配置</strong> <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wx.config(&#123;</span><br><span class=\"line\">  debug: <span class=\"literal\">true</span>, <span class=\"comment\">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class=\"line\">  appId: <span class=\"string\">''</span>, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">  timestamp: , <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">  nonceStr: <span class=\"string\">''</span>, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">  signature: <span class=\"string\">''</span>,<span class=\"comment\">// 必填，签名</span></span><br><span class=\"line\">  jsApiList: [] <span class=\"comment\">// 必填，需要使用的JS接口列表</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>获取signature</strong></p>\n<ol>\n<li>访问<a href=\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=${appid}&amp;secret=${secret}\" target=\"_blank\" rel=\"noopener\">此链接</a>获取<code>access_token</code>,参数就是测试号的<code>appid</code>和<code>appsecret</code></li>\n<li><p>通过获取到的<code>access_token</code>采用http GET方式请求获得jsapi_ticket（有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket）：<a href=\"https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi\" target=\"_blank\" rel=\"noopener\">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi</a><br> 成功返回如下JSON：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;errcode&quot;:0,</span><br><span class=\"line\">  &quot;errmsg&quot;:&quot;ok&quot;,</span><br><span class=\"line\">  &quot;ticket&quot;:&quot;bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA&quot;,</span><br><span class=\"line\">  &quot;expires_in&quot;:7200</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 获得<code>jsapi_ticket</code>之后，就可以生成<code>JS-SDK</code>权限验证的签名了。我是使用官方提供的<code>python</code>版的<code>demo</code>生成的签名，调试前生成签名，填入配置，在微信开发者工具的公众号网页调试地址栏输入我们本地的开发<code>ip</code>再点击预览即可在手机上进行调试</p>\n<blockquote>\n<p><a href=\"http://demo.open.weixin.qq.com/jssdk/sample.zip\" target=\"_blank\" rel=\"noopener\">示例代码</a></p>\n</blockquote>\n<blockquote>\n<p>备注：链接中包含php、java、nodejs以及python的示例代码供第三方参考，第三方切记要对获取的accesstoken以及jsapi_ticket进行缓存以确保不会触发频率限制。</p>\n</blockquote>\n<h2 id=\"python3的需要对官方提供的代码进行一定的修改\"><a href=\"#python3的需要对官方提供的代码进行一定的修改\" class=\"headerlink\" title=\"python3的需要对官方提供的代码进行一定的修改\"></a>python3的需要对官方提供的代码进行一定的修改</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Sign:</span><br><span class=\"line\">    def __init__(self, jsapi_ticket, url):</span><br><span class=\"line\">        self.ret = &#123;</span><br><span class=\"line\">            <span class=\"string\">'nonceStr'</span>: self.__create_nonce_str(),</span><br><span class=\"line\">            <span class=\"string\">'jsapi_ticket'</span>: jsapi_ticket,</span><br><span class=\"line\">            <span class=\"string\">'timestamp'</span>: self.__create_timestamp(),</span><br><span class=\"line\">            <span class=\"string\">'url'</span>: url</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    def __create_nonce_str(self):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">''</span>.join(random.choice(string.ascii_letters + string.digits) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(<span class=\"number\">15</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    def __create_timestamp(self):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> int(time.time())</span><br><span class=\"line\"></span><br><span class=\"line\">    def sign(self):</span><br><span class=\"line\">        string = <span class=\"string\">'&amp;'</span>.join([<span class=\"string\">'%s=%s'</span> % (key.lower(), self.ret[key]) <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> sorted(self.ret)])</span><br><span class=\"line\">        print(string)</span><br><span class=\"line\">        string=string.encode(<span class=\"string\">\"utf8\"</span>)<span class=\"comment\">//需要先编码 不然运行会报错</span></span><br><span class=\"line\">        self.ret[<span class=\"string\">'signature'</span>] = hashlib.sha1(string).hexdigest()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.ret</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    # 注意 URL 一定要动态获取，不能 hardcode</span><br><span class=\"line\">    sign = Sign(<span class=\"string\">'jsapi_ticket'</span>,<span class=\"string\">'url'</span>)<span class=\"comment\">//url 可以用本地开发地址(本机ip)方便调试</span></span><br><span class=\"line\">    print(sign.sign())</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"服务器部署vue+nginx配置","date":"2018-08-01T07:52:51.000Z","_content":"Linux || unbuntu 环境下部署vue+nginx配置\n<!-- more -->\n##### nginx 配置\n```JavaScript\n//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.\ninclude shadow/*.conf;\n```\n##### conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\n```JavaScript\nserver {\n  #端口\n  listen   80;\n  #设置文件存放路径\n  root /srv/view/dist/;\n  index index.html;\n\n  server_name www.shadow.com;\n  \n  #图片代理\n  location /images {\n    proxy_pass http://127.0.0.1:3000;\n  }\n\n  location / {\n    try_files $uri $uri/ /index.html;\n  }\n\n  #接口代理\n  location /api {\n    proxy_redirect off;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;\n    proxy_pass http://127.0.0.1:3000;\n  }\n}\n//其他路径配置：\n location /vue/ {\n    try_files $uri $uri/ @router;\n}\nlocation @router {\n   rewrite ^.*$ /vue/index.html last;\n }\n\n```","source":"_posts/服务器部署vue-nginx配置.md","raw":"---\ntitle: 服务器部署vue+nginx配置\ndate: 2018-08-01 15:52:51\ncategories:\n- Vue\ntags:\n- Vue\n---\nLinux || unbuntu 环境下部署vue+nginx配置\n<!-- more -->\n##### nginx 配置\n```JavaScript\n//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.\ninclude shadow/*.conf;\n```\n##### conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\n```JavaScript\nserver {\n  #端口\n  listen   80;\n  #设置文件存放路径\n  root /srv/view/dist/;\n  index index.html;\n\n  server_name www.shadow.com;\n  \n  #图片代理\n  location /images {\n    proxy_pass http://127.0.0.1:3000;\n  }\n\n  location / {\n    try_files $uri $uri/ /index.html;\n  }\n\n  #接口代理\n  location /api {\n    proxy_redirect off;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;\n    proxy_pass http://127.0.0.1:3000;\n  }\n}\n//其他路径配置：\n location /vue/ {\n    try_files $uri $uri/ @router;\n}\nlocation @router {\n   rewrite ^.*$ /vue/index.html last;\n }\n\n```","slug":"服务器部署vue-nginx配置","published":1,"updated":"2019-01-05T03:38:35.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u4002zgw7gqxyr1uku","content":"<p>Linux || unbuntu 环境下部署vue+nginx配置<br><a id=\"more\"></a></p>\n<h5 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.</span></span><br><span class=\"line\">include shadow<span class=\"comment\">/*.conf;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\"><a href=\"#conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\" class=\"headerlink\" title=\"conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\"></a>conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  #端口</span><br><span class=\"line\">  listen   <span class=\"number\">80</span>;</span><br><span class=\"line\">  #设置文件存放路径</span><br><span class=\"line\">  root /srv/view/dist/;</span><br><span class=\"line\">  index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">  server_name www.shadow.com;</span><br><span class=\"line\">  </span><br><span class=\"line\">  #图片代理</span><br><span class=\"line\">  location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    try_files $uri $uri/ <span class=\"regexp\">/index.html;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  #接口代理</span></span><br><span class=\"line\"><span class=\"regexp\">  location /</span>api &#123;</span><br><span class=\"line\">    proxy_redirect off;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//其他路径配置：</span></span><br><span class=\"line\"> location /vue/ &#123;</span><br><span class=\"line\">    try_files $uri $uri/ @router;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location @router &#123;</span><br><span class=\"line\">   rewrite ^.*$ /vue/index.html last;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Linux || unbuntu 环境下部署vue+nginx配置<br>","more":"</p>\n<h5 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//修改nginx.conf配置文件,在http下面添加一行代码:include vhost/*.conf; 表示每个项目单独配置,方便管理.</span></span><br><span class=\"line\">include shadow<span class=\"comment\">/*.conf;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\"><a href=\"#conf文件夹下面建立shadow文件夹-再在shadow-下面建立vue-conf-放入一下内容\" class=\"headerlink\" title=\"conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:\"></a>conf文件夹下面建立shadow文件夹,再在shadow 下面建立vue.conf 放入一下内容:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  #端口</span><br><span class=\"line\">  listen   <span class=\"number\">80</span>;</span><br><span class=\"line\">  #设置文件存放路径</span><br><span class=\"line\">  root /srv/view/dist/;</span><br><span class=\"line\">  index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">  server_name www.shadow.com;</span><br><span class=\"line\">  </span><br><span class=\"line\">  #图片代理</span><br><span class=\"line\">  location /images &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    try_files $uri $uri/ <span class=\"regexp\">/index.html;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">  #接口代理</span></span><br><span class=\"line\"><span class=\"regexp\">  location /</span>api &#123;</span><br><span class=\"line\">    proxy_redirect off;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:3000;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//其他路径配置：</span></span><br><span class=\"line\"> location /vue/ &#123;</span><br><span class=\"line\">    try_files $uri $uri/ @router;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location @router &#123;</span><br><span class=\"line\">   rewrite ^.*$ /vue/index.html last;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"正则Collect..","date":"2018-01-29T03:17:31.000Z","_content":"记录一些常用的正则表达式\n<!-- more -->\n```JavaScript\nlet reg;\n//数字最多两位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,2}$/;\n//数字最多一位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,1}$/;\n//qq号验证\n//^表示不匹配。d表示任意数字，{5,10}表示长度为5到10。   \nreg=/^\\d{5,10}$/;\n//e-mail\nreg=/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n//手机号码，支持17开头\nreg=/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//固话号码，支持400 或 800开头\nreg= /^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//手机号码、固话号码\nreg=/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8})|(400|800)([0-9\\\\-]{7,10})|(([0-9]{4}|[0-9]{3})(-| )?)?([0-9]{7,8})((-| |转)*([0-9]{1,4}))?$/;\n//微信号\nreg=/^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/;\n//只能输入中文,字母,数字\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/\n//只能输入中文,字母\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]+$/\n//只能输入中文,字母并限制长度\n//{1,10}最短1位 最长10位\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]{1,10}$/\n//匹配空格\nreg=/^ +| +$/g\n//首位三位显示，中间星号\nreg=/^(\\d{3})\\d+(\\d{3})$/\n//'13066666666'.replace(/^(\\d{3})\\d+(\\d{3})$/,'$1***$2') -- 130***666\n//匹配前后空格，中间可以有空格\nreg=/^\\s+|\\s+$/g\n// /^\\s+|\\s+$/g.test('123')--false  /^\\s+|\\s+$/g.test('  123')--true /^\\s+|\\s+$/g.test('1  23')--false\n// /^\\s+|\\s+$/g.test('   1  23  ')--true  /^\\s+|\\s+$/g.test('123  ')--true\n//去除HTML Tag,但不去除换行标签<br>\nreg=/<(?!\\/?br\\/?.+?>)[^<>]*>/g\n// str.replace(/<(?!\\/?br\\/?.+?>)[^<>]*>/g, '');\n```","source":"_posts/正则Collect.md","raw":"---\ntitle: 正则Collect..\ndate: 2018-01-29 11:17:31\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n记录一些常用的正则表达式\n<!-- more -->\n```JavaScript\nlet reg;\n//数字最多两位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,2}$/;\n//数字最多一位小数\nreg=/^\\d[-+]?\\d*[.]?\\d{0,1}$/;\n//qq号验证\n//^表示不匹配。d表示任意数字，{5,10}表示长度为5到10。   \nreg=/^\\d{5,10}$/;\n//e-mail\nreg=/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n//手机号码，支持17开头\nreg=/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//固话号码，支持400 或 800开头\nreg= /^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8}$/;\n//手机号码、固话号码\nreg=/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]{8})|(400|800)([0-9\\\\-]{7,10})|(([0-9]{4}|[0-9]{3})(-| )?)?([0-9]{7,8})((-| |转)*([0-9]{1,4}))?$/;\n//微信号\nreg=/^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/;\n//只能输入中文,字母,数字\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/\n//只能输入中文,字母\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]+$/\n//只能输入中文,字母并限制长度\n//{1,10}最短1位 最长10位\nreg=/^[\\u4e00-\\u9fa5_a-zA-Z]{1,10}$/\n//匹配空格\nreg=/^ +| +$/g\n//首位三位显示，中间星号\nreg=/^(\\d{3})\\d+(\\d{3})$/\n//'13066666666'.replace(/^(\\d{3})\\d+(\\d{3})$/,'$1***$2') -- 130***666\n//匹配前后空格，中间可以有空格\nreg=/^\\s+|\\s+$/g\n// /^\\s+|\\s+$/g.test('123')--false  /^\\s+|\\s+$/g.test('  123')--true /^\\s+|\\s+$/g.test('1  23')--false\n// /^\\s+|\\s+$/g.test('   1  23  ')--true  /^\\s+|\\s+$/g.test('123  ')--true\n//去除HTML Tag,但不去除换行标签<br>\nreg=/<(?!\\/?br\\/?.+?>)[^<>]*>/g\n// str.replace(/<(?!\\/?br\\/?.+?>)[^<>]*>/g, '');\n```","slug":"正则Collect","published":1,"updated":"2019-01-05T03:38:35.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u60032gw7gr8v4guc9","content":"<p>记录一些常用的正则表达式<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg;</span><br><span class=\"line\"><span class=\"comment\">//数字最多两位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,2&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//数字最多一位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,1&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//qq号验证</span></span><br><span class=\"line\"><span class=\"comment\">//^表示不匹配。d表示任意数字，&#123;5,10&#125;表示长度为5到10。   </span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d&#123;5,10&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//e-mail</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码，支持17开头</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//固话号码，支持400 或 800开头</span></span><br><span class=\"line\">reg= <span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码、固话号码</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;)|(400|800)([0-9\\\\-]&#123;7,10&#125;)|(([0-9]&#123;4&#125;|[0-9]&#123;3&#125;)(-| )?)?([0-9]&#123;7,8&#125;)((-| |转)*([0-9]&#123;1,4&#125;))?$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//微信号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-zA-Z]&#123;1&#125;[-_a-zA-Z0-9]&#123;5,19&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母,数字</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母并限制长度</span></span><br><span class=\"line\"><span class=\"comment\">//&#123;1,10&#125;最短1位 最长10位</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]&#123;1,10&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">//匹配空格</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^ +| +$/g</span></span><br><span class=\"line\"><span class=\"comment\">//首位三位显示，中间星号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(\\d&#123;3&#125;)\\d+(\\d&#123;3&#125;)$/</span></span><br><span class=\"line\"><span class=\"comment\">//'13066666666'.replace(/^(\\d&#123;3&#125;)\\d+(\\d&#123;3&#125;)$/,'$1***$2') -- 130***666</span></span><br><span class=\"line\"><span class=\"comment\">//匹配前后空格，中间可以有空格</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\s+|\\s+$/g</span></span><br><span class=\"line\"><span class=\"comment\">// /^\\s+|\\s+$/g.test('123')--false  /^\\s+|\\s+$/g.test('  123')--true /^\\s+|\\s+$/g.test('1  23')--false</span></span><br><span class=\"line\"><span class=\"comment\">// /^\\s+|\\s+$/g.test('   1  23  ')--true  /^\\s+|\\s+$/g.test('123  ')--true</span></span><br><span class=\"line\"><span class=\"comment\">//去除HTML Tag,但不去除换行标签&lt;br&gt;</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/&lt;(?!\\/?br\\/?.+?&gt;)[^&lt;&gt;]*&gt;/g</span></span><br><span class=\"line\"><span class=\"comment\">// str.replace(/&lt;(?!\\/?br\\/?.+?&gt;)[^&lt;&gt;]*&gt;/g, '');</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>记录一些常用的正则表达式<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg;</span><br><span class=\"line\"><span class=\"comment\">//数字最多两位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,2&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//数字最多一位小数</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d[-+]?\\d*[.]?\\d&#123;0,1&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//qq号验证</span></span><br><span class=\"line\"><span class=\"comment\">//^表示不匹配。d表示任意数字，&#123;5,10&#125;表示长度为5到10。   </span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\d&#123;5,10&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//e-mail</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码，支持17开头</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//固话号码，支持400 或 800开头</span></span><br><span class=\"line\">reg= <span class=\"regexp\">/^0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//手机号码、固话号码</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(0?(13[0-9]|15[012356789]|17[013678]|18[0-9]|14[57])[0-9]&#123;8&#125;)|(400|800)([0-9\\\\-]&#123;7,10&#125;)|(([0-9]&#123;4&#125;|[0-9]&#123;3&#125;)(-| )?)?([0-9]&#123;7,8&#125;)((-| |转)*([0-9]&#123;1,4&#125;))?$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//微信号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[a-zA-Z]&#123;1&#125;[-_a-zA-Z0-9]&#123;5,19&#125;$/</span>;</span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母,数字</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]+$/</span></span><br><span class=\"line\"><span class=\"comment\">//只能输入中文,字母并限制长度</span></span><br><span class=\"line\"><span class=\"comment\">//&#123;1,10&#125;最短1位 最长10位</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^[\\u4e00-\\u9fa5_a-zA-Z]&#123;1,10&#125;$/</span></span><br><span class=\"line\"><span class=\"comment\">//匹配空格</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^ +| +$/g</span></span><br><span class=\"line\"><span class=\"comment\">//首位三位显示，中间星号</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^(\\d&#123;3&#125;)\\d+(\\d&#123;3&#125;)$/</span></span><br><span class=\"line\"><span class=\"comment\">//'13066666666'.replace(/^(\\d&#123;3&#125;)\\d+(\\d&#123;3&#125;)$/,'$1***$2') -- 130***666</span></span><br><span class=\"line\"><span class=\"comment\">//匹配前后空格，中间可以有空格</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/^\\s+|\\s+$/g</span></span><br><span class=\"line\"><span class=\"comment\">// /^\\s+|\\s+$/g.test('123')--false  /^\\s+|\\s+$/g.test('  123')--true /^\\s+|\\s+$/g.test('1  23')--false</span></span><br><span class=\"line\"><span class=\"comment\">// /^\\s+|\\s+$/g.test('   1  23  ')--true  /^\\s+|\\s+$/g.test('123  ')--true</span></span><br><span class=\"line\"><span class=\"comment\">//去除HTML Tag,但不去除换行标签&lt;br&gt;</span></span><br><span class=\"line\">reg=<span class=\"regexp\">/&lt;(?!\\/?br\\/?.+?&gt;)[^&lt;&gt;]*&gt;/g</span></span><br><span class=\"line\"><span class=\"comment\">// str.replace(/&lt;(?!\\/?br\\/?.+?&gt;)[^&lt;&gt;]*&gt;/g, '');</span></span><br></pre></td></tr></table></figure></p>"},{"title":"自动部署远程服务器(Vue)","date":"2018-08-04T05:29:59.000Z","_content":"Travis自动部署vue打包后的文件到远程服务器\n<!-- more -->\n##### 生成密钥对\n`ssh-keygen`\n输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下`cd ~/.ssh`，里面有3个文件\n##### 新建config文件\n```javascript\nHost test\nHostName 182.61.20.24 \n#登陆的用户名\nUser root\nIdentitiesOnly yes\n#登陆使用的密钥\nIdentityFile ~/.ssh/id_rsa\n```\n设置.ssh目录为700:`chmod 700 ~/.ssh/`\n设置.ssh目录下的文件为600:`chmod 600 ~/.ssh/*`\n##### 将生成的公钥添加为受信列表（重点）\n```javascript\ncat id_rsa.pub >> authorized_keys\ncat authorized_keys --查看\n# authorized_keys文件内容类似这样\nssh-rsa  *************centos\n```\n##### 服务器安装Travis\n```javascript\n#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby\napt install ruby\n# 安装travis命令行工具，如无法使用gem指令须先安装ruby\ngem install travis\n# --auto自动登录github帐号\ntravis login --auto\n# 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行\ntravis encrypt-file ~/.ssh/id_rsa --add\n# 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去\n注意：\ngem install travis 报错can't find header files for ruby at /usr/lib/ruby/include/ruby.h\n解决办法：\n#更换gem的source\n$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\n\nhttps://ruby.taobao.org\n# 请确保只有 ruby.taobao.org\n#安装ruby-dev\napt-get install ruby-dev\n```\n#### 上面的并没有成功 具体Travis网页端并没有生成环境变量--有知道得小伙伴可以加群告诉我下：163958730\n##### 另一种方法--rsync\n启动方式：\n`rsync --daemon`\n创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：\n```javascript\n# /etc/rsyncd: configuration file for rsync daemon mode\n\n# See rsyncd.conf man page for more options.\n\n# configuration example:\nuid = root\ngid = root\nuse chroot = no\nmax connections =4\npid file = /var/run/rsyncd.pid\nlog file = /var/log/rsyncd.log\nlock file = /var/run/rsyncd.lock\n\n#设置模块\n[view] \npath = /srv/view\nread only = no\nauth users = root\nsecrets file = /etc/rsyncd.passwd\nlist = no\n```\n1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限\n \n2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件\n \n3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock\n \n4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径\n \n5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行\n \n7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式 \n`root:123456`\n此文件权限必须为600，否则会报错\n```javascript\n#执行命令：\necho \"root:123456\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用\n \n当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错\n\n##### Travis配置文件\n```javascript\n#指定node版本\nlanguage: node_js\nnode_js:\n- '8'   \n\n#指定只有检测到master分支有变动时才执行任务\nbranchs:\n  only:\n  - master  \n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\ninstall:\n- echo  $RSYNCPWD > rsyncd.passwd \n- chmod 600 rsyncd.passwd\n- npm install\nscript:\n- npm run build\n\nafter_success:\n- rsync --delete --password-file=./rsyncd.passwd -r ./dist ${SERVER_NAME}@${SERVER_IP}::view\n\n#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)\n#${SERVER_NAME} travisWeb端配置的环境变量(userName)\n#${SERVER_IP} 服务器IP\n#::view 设置的模块\n```\n","source":"_posts/自动部署远程服务器-Vue.md","raw":"---\ntitle: 自动部署远程服务器(Vue)\ndate: 2018-08-04 13:29:59\ncategories:\n- Vue\ntags:\n- Vue\n---\nTravis自动部署vue打包后的文件到远程服务器\n<!-- more -->\n##### 生成密钥对\n`ssh-keygen`\n输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下`cd ~/.ssh`，里面有3个文件\n##### 新建config文件\n```javascript\nHost test\nHostName 182.61.20.24 \n#登陆的用户名\nUser root\nIdentitiesOnly yes\n#登陆使用的密钥\nIdentityFile ~/.ssh/id_rsa\n```\n设置.ssh目录为700:`chmod 700 ~/.ssh/`\n设置.ssh目录下的文件为600:`chmod 600 ~/.ssh/*`\n##### 将生成的公钥添加为受信列表（重点）\n```javascript\ncat id_rsa.pub >> authorized_keys\ncat authorized_keys --查看\n# authorized_keys文件内容类似这样\nssh-rsa  *************centos\n```\n##### 服务器安装Travis\n```javascript\n#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby\napt install ruby\n# 安装travis命令行工具，如无法使用gem指令须先安装ruby\ngem install travis\n# --auto自动登录github帐号\ntravis login --auto\n# 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行\ntravis encrypt-file ~/.ssh/id_rsa --add\n# 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去\n注意：\ngem install travis 报错can't find header files for ruby at /usr/lib/ruby/include/ruby.h\n解决办法：\n#更换gem的source\n$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\n\nhttps://ruby.taobao.org\n# 请确保只有 ruby.taobao.org\n#安装ruby-dev\napt-get install ruby-dev\n```\n#### 上面的并没有成功 具体Travis网页端并没有生成环境变量--有知道得小伙伴可以加群告诉我下：163958730\n##### 另一种方法--rsync\n启动方式：\n`rsync --daemon`\n创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：\n```javascript\n# /etc/rsyncd: configuration file for rsync daemon mode\n\n# See rsyncd.conf man page for more options.\n\n# configuration example:\nuid = root\ngid = root\nuse chroot = no\nmax connections =4\npid file = /var/run/rsyncd.pid\nlog file = /var/log/rsyncd.log\nlock file = /var/run/rsyncd.lock\n\n#设置模块\n[view] \npath = /srv/view\nread only = no\nauth users = root\nsecrets file = /etc/rsyncd.passwd\nlist = no\n```\n1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限\n \n2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件\n \n3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock\n \n4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径\n \n5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行\n \n7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式 \n`root:123456`\n此文件权限必须为600，否则会报错\n```javascript\n#执行命令：\necho \"root:123456\" > /etc/rsyncd.passwd\nchmod 600 /etc/rsyncd.passwd\n```\n8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用\n \n当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错\n\n##### Travis配置文件\n```javascript\n#指定node版本\nlanguage: node_js\nnode_js:\n- '8'   \n\n#指定只有检测到master分支有变动时才执行任务\nbranchs:\n  only:\n  - master  \n\n# 指定缓存模块，可选。缓存可加快编译速度。\ncache:\n  directories:\n    - node_modules\n\ninstall:\n- echo  $RSYNCPWD > rsyncd.passwd \n- chmod 600 rsyncd.passwd\n- npm install\nscript:\n- npm run build\n\nafter_success:\n- rsync --delete --password-file=./rsyncd.passwd -r ./dist ${SERVER_NAME}@${SERVER_IP}::view\n\n#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)\n#${SERVER_NAME} travisWeb端配置的环境变量(userName)\n#${SERVER_IP} 服务器IP\n#::view 设置的模块\n```\n","slug":"自动部署远程服务器-Vue","published":1,"updated":"2019-01-05T03:38:35.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u80035gw7g4tazitmx","content":"<p>Travis自动部署vue打包后的文件到远程服务器<br><a id=\"more\"></a></p>\n<h5 id=\"生成密钥对\"><a href=\"#生成密钥对\" class=\"headerlink\" title=\"生成密钥对\"></a>生成密钥对</h5><p><code>ssh-keygen</code><br>输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下<code>cd ~/.ssh</code>，里面有3个文件</p>\n<h5 id=\"新建config文件\"><a href=\"#新建config文件\" class=\"headerlink\" title=\"新建config文件\"></a>新建config文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host test</span><br><span class=\"line\">HostName <span class=\"number\">182.61</span><span class=\"number\">.20</span><span class=\"number\">.24</span> </span><br><span class=\"line\">#登陆的用户名</span><br><span class=\"line\">User root</span><br><span class=\"line\">IdentitiesOnly yes</span><br><span class=\"line\">#登陆使用的密钥</span><br><span class=\"line\">IdentityFile ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n<p>设置.ssh目录为700:<code>chmod 700 ~/.ssh/</code><br>设置.ssh目录下的文件为600:<code>chmod 600 ~/.ssh/*</code></p>\n<h5 id=\"将生成的公钥添加为受信列表（重点）\"><a href=\"#将生成的公钥添加为受信列表（重点）\" class=\"headerlink\" title=\"将生成的公钥添加为受信列表（重点）\"></a>将生成的公钥添加为受信列表（重点）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">cat authorized_keys --查看</span><br><span class=\"line\"># authorized_keys文件内容类似这样</span><br><span class=\"line\">ssh-rsa  *************centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"服务器安装Travis\"><a href=\"#服务器安装Travis\" class=\"headerlink\" title=\"服务器安装Travis\"></a>服务器安装Travis</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby</span><br><span class=\"line\">apt install ruby</span><br><span class=\"line\"># 安装travis命令行工具，如无法使用gem指令须先安装ruby</span><br><span class=\"line\">gem install travis</span><br><span class=\"line\"># --auto自动登录github帐号</span><br><span class=\"line\">travis login --auto</span><br><span class=\"line\"># 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行</span><br><span class=\"line\">travis encrypt-file ~<span class=\"regexp\">/.ssh/i</span>d_rsa --add</span><br><span class=\"line\"># 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去</span><br><span class=\"line\">注意：</span><br><span class=\"line\">gem install travis 报错can<span class=\"string\">'t find header files for ruby at /usr/lib/ruby/include/ruby.h</span></span><br><span class=\"line\"><span class=\"string\">解决办法：</span></span><br><span class=\"line\"><span class=\"string\">#更换gem的source</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources -l</span></span><br><span class=\"line\"><span class=\"string\">*** CURRENT SOURCES ***</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">https://ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\"># 请确保只有 ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\">#安装ruby-dev</span></span><br><span class=\"line\"><span class=\"string\">apt-get install ruby-dev</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"><a href=\"#上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\" class=\"headerlink\" title=\"上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"></a>上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730</h4><h5 id=\"另一种方法–rsync\"><a href=\"#另一种方法–rsync\" class=\"headerlink\" title=\"另一种方法–rsync\"></a>另一种方法–rsync</h5><p>启动方式：<br><code>rsync --daemon</code><br>创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/rsyncd: configuration file for rsync daemon mode</span><br><span class=\"line\"></span><br><span class=\"line\"># See rsyncd.conf man page for more options.</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration example:</span><br><span class=\"line\">uid = root</span><br><span class=\"line\">gid = root</span><br><span class=\"line\">use chroot = no</span><br><span class=\"line\">max connections =<span class=\"number\">4</span></span><br><span class=\"line\">pid file = <span class=\"regexp\">/var/</span>run/rsyncd.pid</span><br><span class=\"line\">log file = <span class=\"regexp\">/var/</span>log/rsyncd.log</span><br><span class=\"line\">lock file = <span class=\"regexp\">/var/</span>run/rsyncd.lock</span><br><span class=\"line\"></span><br><span class=\"line\">#设置模块</span><br><span class=\"line\">[view] </span><br><span class=\"line\">path = <span class=\"regexp\">/srv/</span>view</span><br><span class=\"line\">read only = no</span><br><span class=\"line\">auth users = root</span><br><span class=\"line\">secrets file = <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<p>1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限</p>\n<p>2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件</p>\n<p>3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock</p>\n<p>4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径</p>\n<p>5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行</p>\n<p>7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式<br><code>root:123456</code><br>此文件权限必须为600，否则会报错<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行命令：</span><br><span class=\"line\">echo <span class=\"string\">\"root:123456\"</span> &gt; <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">chmod <span class=\"number\">600</span> /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure></p>\n<p>8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用</p>\n<p>当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错</p>\n<h5 id=\"Travis配置文件\"><a href=\"#Travis配置文件\" class=\"headerlink\" title=\"Travis配置文件\"></a>Travis配置文件</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#指定node版本</span><br><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js:</span><br><span class=\"line\">- <span class=\"string\">'8'</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">#指定只有检测到master分支有变动时才执行任务</span><br><span class=\"line\">branchs:</span><br><span class=\"line\">  only:</span><br><span class=\"line\">  - master  </span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">install:</span><br><span class=\"line\">- echo  $RSYNCPWD &gt; rsyncd.passwd </span><br><span class=\"line\">- chmod <span class=\"number\">600</span> rsyncd.passwd</span><br><span class=\"line\">- npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- npm run build</span><br><span class=\"line\"></span><br><span class=\"line\">after_success:</span><br><span class=\"line\">- rsync --<span class=\"keyword\">delete</span> --password-file=./rsyncd.passwd -r ./dist $&#123;SERVER_NAME&#125;@$&#123;SERVER_IP&#125;::view</span><br><span class=\"line\"></span><br><span class=\"line\">#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)</span><br><span class=\"line\">#$&#123;SERVER_NAME&#125; travisWeb端配置的环境变量(userName)</span><br><span class=\"line\">#$&#123;SERVER_IP&#125; 服务器IP</span><br><span class=\"line\">#::view 设置的模块</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Travis自动部署vue打包后的文件到远程服务器<br>","more":"</p>\n<h5 id=\"生成密钥对\"><a href=\"#生成密钥对\" class=\"headerlink\" title=\"生成密钥对\"></a>生成密钥对</h5><p><code>ssh-keygen</code><br>输入上面的指令以后一路回车即可，你会发现在用户根目录下多了.ssh目录，进去看一下<code>cd ~/.ssh</code>，里面有3个文件</p>\n<h5 id=\"新建config文件\"><a href=\"#新建config文件\" class=\"headerlink\" title=\"新建config文件\"></a>新建config文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host test</span><br><span class=\"line\">HostName <span class=\"number\">182.61</span><span class=\"number\">.20</span><span class=\"number\">.24</span> </span><br><span class=\"line\">#登陆的用户名</span><br><span class=\"line\">User root</span><br><span class=\"line\">IdentitiesOnly yes</span><br><span class=\"line\">#登陆使用的密钥</span><br><span class=\"line\">IdentityFile ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n<p>设置.ssh目录为700:<code>chmod 700 ~/.ssh/</code><br>设置.ssh目录下的文件为600:<code>chmod 600 ~/.ssh/*</code></p>\n<h5 id=\"将生成的公钥添加为受信列表（重点）\"><a href=\"#将生成的公钥添加为受信列表（重点）\" class=\"headerlink\" title=\"将生成的公钥添加为受信列表（重点）\"></a>将生成的公钥添加为受信列表（重点）</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">cat authorized_keys --查看</span><br><span class=\"line\"># authorized_keys文件内容类似这样</span><br><span class=\"line\">ssh-rsa  *************centos</span><br></pre></td></tr></table></figure>\n<h5 id=\"服务器安装Travis\"><a href=\"#服务器安装Travis\" class=\"headerlink\" title=\"服务器安装Travis\"></a>服务器安装Travis</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ravis的客户端工具需要用gem来安装，gem是ruby的管理工具，所以首先安装ruby</span><br><span class=\"line\">apt install ruby</span><br><span class=\"line\"># 安装travis命令行工具，如无法使用gem指令须先安装ruby</span><br><span class=\"line\">gem install travis</span><br><span class=\"line\"># --auto自动登录github帐号</span><br><span class=\"line\">travis login --auto</span><br><span class=\"line\"># 此处的--add参数表示自动添加脚本到.travis.yml文件中 必须在项目的根目录执行</span><br><span class=\"line\">travis encrypt-file ~<span class=\"regexp\">/.ssh/i</span>d_rsa --add</span><br><span class=\"line\"># 这个命令会自动把 id_rsa 加密传送到 .git 指定的仓库对应的 travis 中去</span><br><span class=\"line\">注意：</span><br><span class=\"line\">gem install travis 报错can<span class=\"string\">'t find header files for ruby at /usr/lib/ruby/include/ruby.h</span></span><br><span class=\"line\"><span class=\"string\">解决办法：</span></span><br><span class=\"line\"><span class=\"string\">#更换gem的source</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span></span><br><span class=\"line\"><span class=\"string\">$ gem sources -l</span></span><br><span class=\"line\"><span class=\"string\">*** CURRENT SOURCES ***</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">https://ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\"># 请确保只有 ruby.taobao.org</span></span><br><span class=\"line\"><span class=\"string\">#安装ruby-dev</span></span><br><span class=\"line\"><span class=\"string\">apt-get install ruby-dev</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"><a href=\"#上面的并没有成功-具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\" class=\"headerlink\" title=\"上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730\"></a>上面的并没有成功 具体Travis网页端并没有生成环境变量–有知道得小伙伴可以加群告诉我下：163958730</h4><h5 id=\"另一种方法–rsync\"><a href=\"#另一种方法–rsync\" class=\"headerlink\" title=\"另一种方法–rsync\"></a>另一种方法–rsync</h5><p>启动方式：<br><code>rsync --daemon</code><br>创建rsync的主配置文件“/etc/rsyncd.conf”，需要手工来创建，创建该文件并插入如下内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/rsyncd: configuration file for rsync daemon mode</span><br><span class=\"line\"></span><br><span class=\"line\"># See rsyncd.conf man page for more options.</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration example:</span><br><span class=\"line\">uid = root</span><br><span class=\"line\">gid = root</span><br><span class=\"line\">use chroot = no</span><br><span class=\"line\">max connections =<span class=\"number\">4</span></span><br><span class=\"line\">pid file = <span class=\"regexp\">/var/</span>run/rsyncd.pid</span><br><span class=\"line\">log file = <span class=\"regexp\">/var/</span>log/rsyncd.log</span><br><span class=\"line\">lock file = <span class=\"regexp\">/var/</span>run/rsyncd.lock</span><br><span class=\"line\"></span><br><span class=\"line\">#设置模块</span><br><span class=\"line\">[view] </span><br><span class=\"line\">path = <span class=\"regexp\">/srv/</span>view</span><br><span class=\"line\">read only = no</span><br><span class=\"line\">auth users = root</span><br><span class=\"line\">secrets file = <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">list = no</span><br></pre></td></tr></table></figure></p>\n<p>1）uid、gid：当使用非root账号时，那么一定要确保服务的的文件夹是否有该非root账号写入的权限</p>\n<p>2）use chroot = no ：是否可以切换到root目录，当chroot为yes的时候，客户端连接模块的时候，先chroot到模块参数指定的目录下，必须使用root权限，端口号必须是1024以内，且不能备份path路径外的链接文件</p>\n<p>3）max connections = 2 ：表示同时最大的连接数，也就是同时只能有两个客户端对自己进行连接并且此选项必须与lock file = /var/run/rsyncd.lock 共同使用，若不指定，默认为/var/run/rsyncd.lock</p>\n<p>4）path = /captain/shell：表示的是当客户端把数据同步过来将保存的路径</p>\n<p>5）read only = no ：如果为只读，那么将不能进行写同步，所以必须关闭auth users = rsync ：用来进行同步的用户，不需要系统用户中有，虚拟的就行</p>\n<p>7）secrets file = /etc/rsyncd.secrets ：表示的是账号密码文件，此文件可随意指定，文件里必须以username：password的格式<br><code>root:123456</code><br>此文件权限必须为600，否则会报错<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行命令：</span><br><span class=\"line\">echo <span class=\"string\">\"root:123456\"</span> &gt; <span class=\"regexp\">/etc/</span>rsyncd.passwd</span><br><span class=\"line\">chmod <span class=\"number\">600</span> /etc/rsyncd.passwd</span><br></pre></td></tr></table></figure></p>\n<p>8）list = no ：表示的是当服务端拒绝客户端的请求时，是否是直接显示权限拒绝，还是现实模块不存在，一般与hosts allow 和hosts deny一起使用</p>\n<p>当一个被服务端拒绝的请求进来时，如果设置为 list = no，那么直接返回模块不存在,如果不设置，那么是什么错就返回什么错</p>\n<h5 id=\"Travis配置文件\"><a href=\"#Travis配置文件\" class=\"headerlink\" title=\"Travis配置文件\"></a>Travis配置文件</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#指定node版本</span><br><span class=\"line\">language: node_js</span><br><span class=\"line\">node_js:</span><br><span class=\"line\">- <span class=\"string\">'8'</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">#指定只有检测到master分支有变动时才执行任务</span><br><span class=\"line\">branchs:</span><br><span class=\"line\">  only:</span><br><span class=\"line\">  - master  </span><br><span class=\"line\"></span><br><span class=\"line\"># 指定缓存模块，可选。缓存可加快编译速度。</span><br><span class=\"line\">cache:</span><br><span class=\"line\">  directories:</span><br><span class=\"line\">    - node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">install:</span><br><span class=\"line\">- echo  $RSYNCPWD &gt; rsyncd.passwd </span><br><span class=\"line\">- chmod <span class=\"number\">600</span> rsyncd.passwd</span><br><span class=\"line\">- npm install</span><br><span class=\"line\">script:</span><br><span class=\"line\">- npm run build</span><br><span class=\"line\"></span><br><span class=\"line\">after_success:</span><br><span class=\"line\">- rsync --<span class=\"keyword\">delete</span> --password-file=./rsyncd.passwd -r ./dist $&#123;SERVER_NAME&#125;@$&#123;SERVER_IP&#125;::view</span><br><span class=\"line\"></span><br><span class=\"line\">#$RSYNCPWD 跟你在服务器端的密码保持一致(不需要带userName)</span><br><span class=\"line\">#$&#123;SERVER_NAME&#125; travisWeb端配置的环境变量(userName)</span><br><span class=\"line\">#$&#123;SERVER_IP&#125; 服务器IP</span><br><span class=\"line\">#::view 设置的模块</span><br></pre></td></tr></table></figure>"},{"title":"记一些开发中遇到得问题...","date":"2020-10-23T09:36:11.000Z","_content":"平时开发中遇到的一些问题及解决方法\n<!-- more -->\n##### onclick事件传递对象参数\n```JavaScript\nonclick=\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\"\ndemo:\n<a class=\"fc-check\" onclick=\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"/g, '&quot;')+')\">查看</a>//传递单个参数 单引号拼接\n\"<td width=\\\"120\\\"><a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\\\">查看</a></td>\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义\n```\n##### ajax post方法参数问题\n```JavaScript\nlet obj={};\nobj.gameName='xxx';\nobj.gameId='xxx';\n$.ajax({\n            type: \"POST\",\n            url: url+ \"?t=\" + new Date().getTime(),\n            data: JSON.stringify(obj),\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (res) {\n               console.log(res)\n        });\n//使用contentType: “application/json”则data只能是json字符串\n```\n##### switch(data){}\n```JavaScript\nswitch(data){\n  case '1':\n      console.log(11);\n      break;\ncase 2:\n    console.log(22);\n    break;\n}\n//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);\n//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了\n```\n##### [WdatePicker.js](https://blog.csdn.net/nnn_net/article/details/50340929)使用\n```JavaScript\n//代码如下：\n<input id=\"startTime\" class=\"Wdate m-letf3\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'})\"/>\n<input id=\"endTime\" class=\"Wdate\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'})\"/>\n//显示年月日时分秒:onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss'})\"\n//结束时间为开始时间七天以内:startTime--maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'\n// endTime--minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'\n```\n##### 使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\n```JavaScript\ntypeof item.price//string\n//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用\nparseInt(item.price).toFixed(2)//item.price=34.000 -- 34.00\n```\n###### js获取当前时间的前一天/后一天\n```JavaScript\nvar now=new Date();\nvar preDate = new Date(now.getTime() - 24*60*60*1000); //前一天\nvar nextDate = new Date(now.getTime() + 24*60*60*1000); //后一天\n```\n##### try catch\n```JavaScript\n//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题\ntry {\n    tryCode - 尝试执行代码块\n}\ncatch(err) {\n    catchCode - 捕获错误的代码块\n} \nfinally {\n    finallyCode - 无论 try / catch 结果如何都会执行的代码块\n}\n//demo\n// 获取URL对应参数值\nfunction getUrlParam(name){\n    var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\"); //构造一个含有目标参数的正则表达式对象\n    var r = window.location.search.substr(1).match(reg);  //匹配目标参数\n    if (r!=null){\n        try {\n            return decodeURI(r[2]); //报错执行catch下得代码\n        }catch(e){\n            return unescape(r[2])\n        }\n    }else{\n        return null; //返回参数值\n    } \n}\n```\n##### 限制input输入数字且小数点后最多n位\n```JavaScript\nfunction num(value,length) {\n    //length代表可以输入得小数位数\n    value = value.replace(/[^\\d.]/g, \"\");  //清除“数字”和“.”以外的字符\n    value = value.replace(/\\.{2,}/g, \".\"); //只保留第一个. 清除多余的\n    value = value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    var str='^(\\\\-)*(\\\\d+)\\\\.([0-9]{1,'+length+'}).*$';//给正则表达式代入动态参数 ，注意--反斜杠需要转义\n    var reg=new RegExp(str);\n    value = value.replace(reg,'$1$2.$3');//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]{1,2}).*$/\n    if (value.indexOf(\".\") < 0 && value != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\n       value = parseFloat(value);\n    }\n    return value\n}\n//使用：如果小数后面五位则num(this.value,5)\n<input placeholder=\"\" onkeyup=\"this.value=num(this.value,2)\" />\n```\n##### 限制input输入数字且小数点后最多n位(第一位不能是小数点)\n```JavaScript\nfunction num(obj) {\n    obj.value = obj.value.replace(/[^\\d.]/g, \"\"); //清除\"数字\"和\".\"以外的字符\n    obj.value = obj.value.replace(/^\\./g, \"\"); //验证第一个字符是数字\n    obj.value = obj.value.replace(/\\.{2,}/g, \".\"); //只保留第一个\".\", 清除多余的\n    obj.value = obj.value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    obj.value = obj.value.replace(/^(\\-)*(\\d+)\\.(\\d).*$/, '$1$2.$3'); //只能输入一个小数\n}\n//两位小数\nobj.value = obj.value.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3'); //添加 \\d 即为小数位数\n//使用\n<input  placeholder=\"\" onkeyup=\"num(this)\" />\n```\n##### 测试环境线上环境接口域名不同\n```JavaScript\n#获取协议 域名端口 拼接请求url\n`${location.protocol}//${location.host}`\n`${location.protocol}//${location.host}/api/getInfo`\n```\n##### js返回上一页并刷新页面\n```JavaScript\n//<a href=\"#\" onclick=\"self.location=document.referrer;\">返回</a>\nself.location=document.referrer\n```\n##### 当前时间是否符合某时间区间判断(跨天)\n```JavaScript\nwindow.onload = function () {\n            let timeList = ['09:00', \"01:00\"];\n            checkTime(...timeList)\n        }\n        function checkTime(startTime, endTime) {\n            //console.log(startTime, endTime);\n            //let now = new Date('2018-09-19 0:00').getTime();\n            let now = new Date().getTime();\n            let start = new Date().setHours(startTime.split(':')[0], startTime.split(':')[1], 0);\n            let end = new Date().setHours(endTime.split(':')[0], endTime.split(':')[1], 0);\n            if (end < start) {//end小于start表示是跨天区间\n                end += 24 * 60 * 60 * 1000//end加上一天\n            }\n            if (start < now && now < end) {\n                console.log(`在符合时间段内`);\n            } else {\n                console.log(`不在符合的时间段内,时间段为${startTime}-${endTime}`);\n            }\n        }\n```\n##### input限制只能输入纯数字问题\n```JavaScript\n1、onkeyup = \"value=value.replace(/[^\\d]/g,'')\"\n=> 使用 onkeyup 事件，有 bug ，那就是在中文输入法状态下，输入汉字之后直接回车，会直接输入字母\n2、onchange = \"value=value.replace(/[^\\d]/g,'')\"\n=>使用 onchange 事件，在输入内容后，只有 input 丧失焦点时才会得到结果，并不能在输入时就做出响应\n3、oninput = \"value=value.replace(/[^\\d]/g,'')\"\n=>使用 oninput 事件，完美的解决了以上两种问题，测试暂时还没有出现其它问题。\n```\n##### window.open在ajax请求完成新窗口被拦截的问题\n```JavaScript\n//解决--先通过用户点击打开一个新的空白窗口，然后再对新打开的页面进行重定向。\n        var newOpen=window.open();\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            data: data,\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (resp) {\n                if (resp.success) {\n                    newOpen.location.href = baseServiceUrl + \"shPayment?orderId=\" + resp.orderId;\n                } else {\n                  console.log('请求失败')\n                }\n            }\n        });\n```\n##### WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）\n [WebUploader API](http://fex.baidu.com/webuploader/doc/index.html#WebUploader_Uploader_events)\n```JavaScript\ngetFiles\ngetFiles() ⇒ Array\ngetFiles( status1, status2, status... ) ⇒ Array\n返回指定状态的文件集合，不传参数将返回所有状态的文件。\n\n这里的状态如下：\n\nFile.Status\n文件状态值，具体包括以下几种类型：\n\n-inited 初始状态\n-queued 已经进入队列, 等待上传\n-progress 上传中\n-complete 上传完成。\n-error 上传出错，可重试\n-interrupt 上传中断，可续传。\n-invalid 文件不合格，不能重试上传。会自动从队列中移除。\n-cancelled 文件被移除。\n就是说，只要我们的uploader对象没有重新创建，那它会保存所有选择的文件，\n\n当然我们也有方法，clear一下， 我们看到有这样的方法：\n\nremoveFile\nremoveFile( file ) ⇒ undefined\nremoveFile( id ) ⇒ undefined\nremoveFile( file, true ) ⇒ undefined\nremoveFile( id, true ) ⇒ undefined\n参数:\n\nfile {File, id}\nFile对象或这File对象的id\n\n移除某一文件, 默认只会标记文件状态为已取消，如果第二个参数为 true 则会从 queue 中移除。\n\n当我们调用了一下removeFile方法后，只是标记了一下这个文件的状态，我们用getFiles方法，其实还是可以看到，\n\n这时我们可以再调用方法：\n\nreset\nreset() ⇒ undefined\n重置uploader。目前只重置了队列。就可以清除勾选的上传文件了\n\n在uploadSuccess事件中，调用removeFile方法，注意这个事件也是针对一个文件的\n//成功事件,  针对一个文件\nuploader.on('uploadSuccess', function (file, response) {\n    \n　　uploader.removeFile(file);\n\n});\n\n在uploadFinished事件中，调用reset方法，就可清空getfiles了\n// 所有文件上传成功后调用        \nuploader.on('uploadFinished', function () {\n    //清空队列\n     uploader.reset();\n});\n\n//uploader pick自动生成的上传按钮位置不对（应包含在wrap内却在body中）\n uploader = WebUploader.create({\n        auto: true,\n        pick: {\n            id: '#filePicker',\n            label: '上传图片',\n            multiple: false\n        },\n        paste: document.body,\n\n        accept: {\n            title: 'Images',\n            extensions: 'gif,jpg,bmp,png,jpeg',\n            mimeTypes: 'image/gif,image/jpg,image/bmp,image/png,image/jpeg'\n        },\n\n        // swf文件路径\n        swf: './swf/uploader.swf',\n\n        disableGlobalDnd: true,\n        timeout: 0,\n        chunked: false,\n        chunkSize: 10 * 1024 * 1024,\n        server: '/api/UploadFile',\n        fileNumLimit: 1,\n        fileSizeLimit: 10 * 1024 * 1024, // 10 M\n        fileSingleSizeLimit: 10 * 1024 * 1024 // 10 M\n    });\n//uploader初始化以后调用\n    uploader.refresh();\n```\n##### 获取图片img的真实宽高大小\n```JavaScript\n// 获取图片真实高度\nfunction getImageSize(url,callback){\n    var img = new Image();\n    img.src = url;\n    // 如果图片被缓存，则直接返回缓存数据\n    if(img.complete){\n        callback(img.width, img.height);\n    }else{\n        img.onload = function(){\n            callback(img.width, img.height);\n        }\n    }\n}\n//调用：\n$(function(){\n    var imgSrc = $(\"#img\").attr(\"src\");\n    getImageSize(imgSrc,function(w,h){\n        console.log({width:w,height:h});\n    });\n});\nw--图片的宽 h--图片的高\n```\n##### 时间问题\n```JavaScript\n//判断时间是否是当天\nvar str = 1404172800000;\nif (new Date(str).toDateString() === new Date().toDateString()) {\n    //今天\n} else if (new Date(str) < new Date()){\n    //之前\n    console.log(new Date(str).toISOString().slice(0,10));//2014-07-01\n}\n//判断当前时间是否是一天内，超过一天不超过三十天，超过三十天\nshowTime(sendTime) {\n\t\tconsole.log(sendTime);    //\"2019-01-08T10:49:29\"\n\t\tlet now = new Date().getTime(); //当前时间戳\n\t\tlet orderTime = new Date(sendTime).getTime(); //订单最后会话时间\n\t\tlet oneday = 24 * 60 * 60 * 1000,\n\t\t\tmonth = 30 * 24 * 60 * 60 * 1000;\n\t\tif ((now - orderTime) < oneday) {\n\t\t\tsendTime = sendTime.split('T')[1]\n\t\t\t//一天内\n\t\t}\n\t\tif ((now - orderTime) > oneday || (now - orderTime) < month) {\n\t\t\t//超过一天 不超过30天\n\t\t\tsendTime = `${Math.ceil((now-orderTime)/(24*60*60*1000))}天前`\n\t\t}\n\t\tif ((now - orderTime) > month) {\n\t\t\t//超过30天\n\t\t\tsendTime = sendTime.replace('T', ' ')\n\t\t}\n\t\treturn sendTime\n\t}\n```\n##### 字符串首尾保留中间星号\n```JavaScript\nfunction parseStringToStar(str, len, fixLen) {\n\t//str-- 传入的字符串\n\t//len-- 首尾需保留的长度\n\t//fixLen --是否固定显示星号数量\n\tvar starLen = fixLen ? new Array(fixLen + 1).join('*') : (str.length > 6 ? new Array(str.length - (2 * len - 1)).join(\n\t\t'*') : new Array(str.length -\n\t\t(len - 1)).join('*'))\n\treturn str.length > 6 ? str.substr(0, len) + starLen + str.substr(-len) : str.substr(0, len) + starLen\n}\n\n//使用\n## parseStringToStar('278383678@qq.com',3,3)\n## \"278***com\"\n\n## parseStringToStar('278383678@qq.com',3)\n## \"278**********com\"\n\n## parseStringToStar('123456',3)\n## \"123***\"\n```\n##### js正则去除字符串中的中文英文数字\n```JavaScript\nstr.match(/[a-zA-Z0-9\\u4e00-\\u9fa5]+/g).join('');\nstr.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g,'')\n```\n##### js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉\n```JavaScript\n//简单版本\nfunction transSensitive(content) {\n    var Sensitive = wordList//敏感词数组\n    var v = new RegExp(Sensitive.join('|'), \"gi\");//将数组转成正则\n    var array = new Array();\n    //将特殊符号的过滤并且保存\n    content = content.replace(/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\{|\\}|\\;|\\:|\\\"|\\'|\\,|\\<|\\.|\\>|\\/|\\?]/g, function (s, i) {\n        array.push({\n            index: i,\n            content: s\n        });\n        return s.replace(/./g, '');\n    })\n    //将敏感词进行筛选\n    console.log(content, v);\n    return content.replace(v, '**')\n}\n\n//适用\nfunction filterWords(content) {\n    //敏感词数组--wordList\n    var v = new RegExp(wordList.join('|'), \"gi\");//将数组转成正则\n    var array = new Array();\n    //将特殊符号的过滤并且保存\n    content = content.replace(/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\{|\\}|\\;|\\:|\\\"|\\'|\\,|\\<|\\.|\\>|\\/|\\?]/g, function (s, i) {\n        array.push({\n            index: i,\n            content: s\n        });\n        return s.replace(/./g, '');\n    })\n    //将敏感词进行筛选\n    console.log(content, v);\n    var output = content.replace(v, function (sMatch) {\n        //sMatch 匹配到的敏感词\n        if (sMatch.length <= 1) {\n            return sMatch.replace(/./g, '*');\n        }\n        else {\n            return sMatch.replace(/./g, '*');\n            /* return sMatch[0] + sMatch.replace(/./g, '*').substring(0, sMatch.length - 1);//将词的第一个字保留 */\n        }\n    })\n    var array2 = output.split('');//将字符串转成char数组\n    console.log(array, array2);\n    //循环array 将array[i].content 通过array[i].index 插入指定位置 现将array[i].content  应该算是拼接\n    for (var i = 0; i < array.length; i++) {\n        array2.splice(array[i].index, 0, array[i].content);\n    }\n    console.log(array2);\n    return array2.join('');\n}\n```\n##### ajax contentType\n```JavaScript\n1. application/x-www-form-urlencoded(默认类型)\n\n如果不指定其他类型的话, 默认是x-www-form-urlencoded, 此类型要求参数传递样式为 key1=value1&key2=value2\n\n2. application/json\n\n更适合传递大数据的形式, 参数样式就是json格式, 例如{\"key1\":\"value1\",\"key2\":[1,2,3]}等\n```\n##### 获取最近一周七天（或指定天数）的日期\n```JavaScript\nfunction getBeforeDate(number) {\n    let num = number;\n    let dateList = [], s;\n    for (let i = 0; i < number; i++,num--) {\n        const date = new Date();\n        let year = date.getFullYear();\n        let mon = date.getMonth() + 1;\n        let day = date.getDate();\n        if (day <= num) {\n            if (mon > 1) {\n                mon = mon - 1;\n            } else {\n                year = year - 1;\n                mon = 12;\n            }\n        }\n        date.setDate(date.getDate() - num);\n        year = date.getFullYear();\n        mon = (date.getMonth() + 1) < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n        day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n        // s = year + '-' + (mon < 10 ? ('0' + mon) : mon) + '-' + (day < 10 ? ('0' + day) : day);\n        s = `${mon}${day}`\n        dateList.push(s)\n        // num-=1\n    }\n    return dateList;\n}\n\n//使用\n## getBeforeDate(7) //获取最近一周七天的日期\n## 返回结果 Array: [\"1016\", \"1017\", \"1018\", \"1019\", \"1020\", \"1021\", \"1022\"]\n```","source":"_posts/记一些开发中遇到得问题.md","raw":"---\ntitle: 记一些开发中遇到得问题...\ndate: 2020-10-23 17:36:11\ncategories:\n- JavaScript\ntags:\n- JavaScript\n---\n平时开发中遇到的一些问题及解决方法\n<!-- more -->\n##### onclick事件传递对象参数\n```JavaScript\nonclick=\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\"\ndemo:\n<a class=\"fc-check\" onclick=\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"/g, '&quot;')+')\">查看</a>//传递单个参数 单引号拼接\n\"<td width=\\\"120\\\"><a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '&quot;')+\")\\\">查看</a></td>\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义\n```\n##### ajax post方法参数问题\n```JavaScript\nlet obj={};\nobj.gameName='xxx';\nobj.gameId='xxx';\n$.ajax({\n            type: \"POST\",\n            url: url+ \"?t=\" + new Date().getTime(),\n            data: JSON.stringify(obj),\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (res) {\n               console.log(res)\n        });\n//使用contentType: “application/json”则data只能是json字符串\n```\n##### switch(data){}\n```JavaScript\nswitch(data){\n  case '1':\n      console.log(11);\n      break;\ncase 2:\n    console.log(22);\n    break;\n}\n//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);\n//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了\n```\n##### [WdatePicker.js](https://blog.csdn.net/nnn_net/article/details/50340929)使用\n```JavaScript\n//代码如下：\n<input id=\"startTime\" class=\"Wdate m-letf3\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'})\"/>\n<input id=\"endTime\" class=\"Wdate\" readonly=\"readonly\" type=\"text\" onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'})\"/>\n//显示年月日时分秒:onFocus=\"WdatePicker({ dateFmt: 'yyyy-MM-dd HH:mm:ss'})\"\n//结束时间为开始时间七天以内:startTime--maxDate:'#F{$dp.$D(\\'endTime\\',{d:-7})}'\n// endTime--minDate:'#F{$dp.$D(\\'startTime\\')}',maxDate:'#F{$dp.$D(\\'startTime\\',{d:7})}'\n```\n##### 使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\n```JavaScript\ntypeof item.price//string\n//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用\nparseInt(item.price).toFixed(2)//item.price=34.000 -- 34.00\n```\n###### js获取当前时间的前一天/后一天\n```JavaScript\nvar now=new Date();\nvar preDate = new Date(now.getTime() - 24*60*60*1000); //前一天\nvar nextDate = new Date(now.getTime() + 24*60*60*1000); //后一天\n```\n##### try catch\n```JavaScript\n//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题\ntry {\n    tryCode - 尝试执行代码块\n}\ncatch(err) {\n    catchCode - 捕获错误的代码块\n} \nfinally {\n    finallyCode - 无论 try / catch 结果如何都会执行的代码块\n}\n//demo\n// 获取URL对应参数值\nfunction getUrlParam(name){\n    var reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\"); //构造一个含有目标参数的正则表达式对象\n    var r = window.location.search.substr(1).match(reg);  //匹配目标参数\n    if (r!=null){\n        try {\n            return decodeURI(r[2]); //报错执行catch下得代码\n        }catch(e){\n            return unescape(r[2])\n        }\n    }else{\n        return null; //返回参数值\n    } \n}\n```\n##### 限制input输入数字且小数点后最多n位\n```JavaScript\nfunction num(value,length) {\n    //length代表可以输入得小数位数\n    value = value.replace(/[^\\d.]/g, \"\");  //清除“数字”和“.”以外的字符\n    value = value.replace(/\\.{2,}/g, \".\"); //只保留第一个. 清除多余的\n    value = value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    var str='^(\\\\-)*(\\\\d+)\\\\.([0-9]{1,'+length+'}).*$';//给正则表达式代入动态参数 ，注意--反斜杠需要转义\n    var reg=new RegExp(str);\n    value = value.replace(reg,'$1$2.$3');//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]{1,2}).*$/\n    if (value.indexOf(\".\") < 0 && value != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\n       value = parseFloat(value);\n    }\n    return value\n}\n//使用：如果小数后面五位则num(this.value,5)\n<input placeholder=\"\" onkeyup=\"this.value=num(this.value,2)\" />\n```\n##### 限制input输入数字且小数点后最多n位(第一位不能是小数点)\n```JavaScript\nfunction num(obj) {\n    obj.value = obj.value.replace(/[^\\d.]/g, \"\"); //清除\"数字\"和\".\"以外的字符\n    obj.value = obj.value.replace(/^\\./g, \"\"); //验证第一个字符是数字\n    obj.value = obj.value.replace(/\\.{2,}/g, \".\"); //只保留第一个\".\", 清除多余的\n    obj.value = obj.value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\n    obj.value = obj.value.replace(/^(\\-)*(\\d+)\\.(\\d).*$/, '$1$2.$3'); //只能输入一个小数\n}\n//两位小数\nobj.value = obj.value.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3'); //添加 \\d 即为小数位数\n//使用\n<input  placeholder=\"\" onkeyup=\"num(this)\" />\n```\n##### 测试环境线上环境接口域名不同\n```JavaScript\n#获取协议 域名端口 拼接请求url\n`${location.protocol}//${location.host}`\n`${location.protocol}//${location.host}/api/getInfo`\n```\n##### js返回上一页并刷新页面\n```JavaScript\n//<a href=\"#\" onclick=\"self.location=document.referrer;\">返回</a>\nself.location=document.referrer\n```\n##### 当前时间是否符合某时间区间判断(跨天)\n```JavaScript\nwindow.onload = function () {\n            let timeList = ['09:00', \"01:00\"];\n            checkTime(...timeList)\n        }\n        function checkTime(startTime, endTime) {\n            //console.log(startTime, endTime);\n            //let now = new Date('2018-09-19 0:00').getTime();\n            let now = new Date().getTime();\n            let start = new Date().setHours(startTime.split(':')[0], startTime.split(':')[1], 0);\n            let end = new Date().setHours(endTime.split(':')[0], endTime.split(':')[1], 0);\n            if (end < start) {//end小于start表示是跨天区间\n                end += 24 * 60 * 60 * 1000//end加上一天\n            }\n            if (start < now && now < end) {\n                console.log(`在符合时间段内`);\n            } else {\n                console.log(`不在符合的时间段内,时间段为${startTime}-${endTime}`);\n            }\n        }\n```\n##### input限制只能输入纯数字问题\n```JavaScript\n1、onkeyup = \"value=value.replace(/[^\\d]/g,'')\"\n=> 使用 onkeyup 事件，有 bug ，那就是在中文输入法状态下，输入汉字之后直接回车，会直接输入字母\n2、onchange = \"value=value.replace(/[^\\d]/g,'')\"\n=>使用 onchange 事件，在输入内容后，只有 input 丧失焦点时才会得到结果，并不能在输入时就做出响应\n3、oninput = \"value=value.replace(/[^\\d]/g,'')\"\n=>使用 oninput 事件，完美的解决了以上两种问题，测试暂时还没有出现其它问题。\n```\n##### window.open在ajax请求完成新窗口被拦截的问题\n```JavaScript\n//解决--先通过用户点击打开一个新的空白窗口，然后再对新打开的页面进行重定向。\n        var newOpen=window.open();\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            data: data,\n            contentType: \"application/json; charset=UTF-8\",\n            dataType: \"json\",\n            success: function (resp) {\n                if (resp.success) {\n                    newOpen.location.href = baseServiceUrl + \"shPayment?orderId=\" + resp.orderId;\n                } else {\n                  console.log('请求失败')\n                }\n            }\n        });\n```\n##### WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）\n [WebUploader API](http://fex.baidu.com/webuploader/doc/index.html#WebUploader_Uploader_events)\n```JavaScript\ngetFiles\ngetFiles() ⇒ Array\ngetFiles( status1, status2, status... ) ⇒ Array\n返回指定状态的文件集合，不传参数将返回所有状态的文件。\n\n这里的状态如下：\n\nFile.Status\n文件状态值，具体包括以下几种类型：\n\n-inited 初始状态\n-queued 已经进入队列, 等待上传\n-progress 上传中\n-complete 上传完成。\n-error 上传出错，可重试\n-interrupt 上传中断，可续传。\n-invalid 文件不合格，不能重试上传。会自动从队列中移除。\n-cancelled 文件被移除。\n就是说，只要我们的uploader对象没有重新创建，那它会保存所有选择的文件，\n\n当然我们也有方法，clear一下， 我们看到有这样的方法：\n\nremoveFile\nremoveFile( file ) ⇒ undefined\nremoveFile( id ) ⇒ undefined\nremoveFile( file, true ) ⇒ undefined\nremoveFile( id, true ) ⇒ undefined\n参数:\n\nfile {File, id}\nFile对象或这File对象的id\n\n移除某一文件, 默认只会标记文件状态为已取消，如果第二个参数为 true 则会从 queue 中移除。\n\n当我们调用了一下removeFile方法后，只是标记了一下这个文件的状态，我们用getFiles方法，其实还是可以看到，\n\n这时我们可以再调用方法：\n\nreset\nreset() ⇒ undefined\n重置uploader。目前只重置了队列。就可以清除勾选的上传文件了\n\n在uploadSuccess事件中，调用removeFile方法，注意这个事件也是针对一个文件的\n//成功事件,  针对一个文件\nuploader.on('uploadSuccess', function (file, response) {\n    \n　　uploader.removeFile(file);\n\n});\n\n在uploadFinished事件中，调用reset方法，就可清空getfiles了\n// 所有文件上传成功后调用        \nuploader.on('uploadFinished', function () {\n    //清空队列\n     uploader.reset();\n});\n\n//uploader pick自动生成的上传按钮位置不对（应包含在wrap内却在body中）\n uploader = WebUploader.create({\n        auto: true,\n        pick: {\n            id: '#filePicker',\n            label: '上传图片',\n            multiple: false\n        },\n        paste: document.body,\n\n        accept: {\n            title: 'Images',\n            extensions: 'gif,jpg,bmp,png,jpeg',\n            mimeTypes: 'image/gif,image/jpg,image/bmp,image/png,image/jpeg'\n        },\n\n        // swf文件路径\n        swf: './swf/uploader.swf',\n\n        disableGlobalDnd: true,\n        timeout: 0,\n        chunked: false,\n        chunkSize: 10 * 1024 * 1024,\n        server: '/api/UploadFile',\n        fileNumLimit: 1,\n        fileSizeLimit: 10 * 1024 * 1024, // 10 M\n        fileSingleSizeLimit: 10 * 1024 * 1024 // 10 M\n    });\n//uploader初始化以后调用\n    uploader.refresh();\n```\n##### 获取图片img的真实宽高大小\n```JavaScript\n// 获取图片真实高度\nfunction getImageSize(url,callback){\n    var img = new Image();\n    img.src = url;\n    // 如果图片被缓存，则直接返回缓存数据\n    if(img.complete){\n        callback(img.width, img.height);\n    }else{\n        img.onload = function(){\n            callback(img.width, img.height);\n        }\n    }\n}\n//调用：\n$(function(){\n    var imgSrc = $(\"#img\").attr(\"src\");\n    getImageSize(imgSrc,function(w,h){\n        console.log({width:w,height:h});\n    });\n});\nw--图片的宽 h--图片的高\n```\n##### 时间问题\n```JavaScript\n//判断时间是否是当天\nvar str = 1404172800000;\nif (new Date(str).toDateString() === new Date().toDateString()) {\n    //今天\n} else if (new Date(str) < new Date()){\n    //之前\n    console.log(new Date(str).toISOString().slice(0,10));//2014-07-01\n}\n//判断当前时间是否是一天内，超过一天不超过三十天，超过三十天\nshowTime(sendTime) {\n\t\tconsole.log(sendTime);    //\"2019-01-08T10:49:29\"\n\t\tlet now = new Date().getTime(); //当前时间戳\n\t\tlet orderTime = new Date(sendTime).getTime(); //订单最后会话时间\n\t\tlet oneday = 24 * 60 * 60 * 1000,\n\t\t\tmonth = 30 * 24 * 60 * 60 * 1000;\n\t\tif ((now - orderTime) < oneday) {\n\t\t\tsendTime = sendTime.split('T')[1]\n\t\t\t//一天内\n\t\t}\n\t\tif ((now - orderTime) > oneday || (now - orderTime) < month) {\n\t\t\t//超过一天 不超过30天\n\t\t\tsendTime = `${Math.ceil((now-orderTime)/(24*60*60*1000))}天前`\n\t\t}\n\t\tif ((now - orderTime) > month) {\n\t\t\t//超过30天\n\t\t\tsendTime = sendTime.replace('T', ' ')\n\t\t}\n\t\treturn sendTime\n\t}\n```\n##### 字符串首尾保留中间星号\n```JavaScript\nfunction parseStringToStar(str, len, fixLen) {\n\t//str-- 传入的字符串\n\t//len-- 首尾需保留的长度\n\t//fixLen --是否固定显示星号数量\n\tvar starLen = fixLen ? new Array(fixLen + 1).join('*') : (str.length > 6 ? new Array(str.length - (2 * len - 1)).join(\n\t\t'*') : new Array(str.length -\n\t\t(len - 1)).join('*'))\n\treturn str.length > 6 ? str.substr(0, len) + starLen + str.substr(-len) : str.substr(0, len) + starLen\n}\n\n//使用\n## parseStringToStar('278383678@qq.com',3,3)\n## \"278***com\"\n\n## parseStringToStar('278383678@qq.com',3)\n## \"278**********com\"\n\n## parseStringToStar('123456',3)\n## \"123***\"\n```\n##### js正则去除字符串中的中文英文数字\n```JavaScript\nstr.match(/[a-zA-Z0-9\\u4e00-\\u9fa5]+/g).join('');\nstr.replace(/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g,'')\n```\n##### js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉\n```JavaScript\n//简单版本\nfunction transSensitive(content) {\n    var Sensitive = wordList//敏感词数组\n    var v = new RegExp(Sensitive.join('|'), \"gi\");//将数组转成正则\n    var array = new Array();\n    //将特殊符号的过滤并且保存\n    content = content.replace(/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\{|\\}|\\;|\\:|\\\"|\\'|\\,|\\<|\\.|\\>|\\/|\\?]/g, function (s, i) {\n        array.push({\n            index: i,\n            content: s\n        });\n        return s.replace(/./g, '');\n    })\n    //将敏感词进行筛选\n    console.log(content, v);\n    return content.replace(v, '**')\n}\n\n//适用\nfunction filterWords(content) {\n    //敏感词数组--wordList\n    var v = new RegExp(wordList.join('|'), \"gi\");//将数组转成正则\n    var array = new Array();\n    //将特殊符号的过滤并且保存\n    content = content.replace(/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\{|\\}|\\;|\\:|\\\"|\\'|\\,|\\<|\\.|\\>|\\/|\\?]/g, function (s, i) {\n        array.push({\n            index: i,\n            content: s\n        });\n        return s.replace(/./g, '');\n    })\n    //将敏感词进行筛选\n    console.log(content, v);\n    var output = content.replace(v, function (sMatch) {\n        //sMatch 匹配到的敏感词\n        if (sMatch.length <= 1) {\n            return sMatch.replace(/./g, '*');\n        }\n        else {\n            return sMatch.replace(/./g, '*');\n            /* return sMatch[0] + sMatch.replace(/./g, '*').substring(0, sMatch.length - 1);//将词的第一个字保留 */\n        }\n    })\n    var array2 = output.split('');//将字符串转成char数组\n    console.log(array, array2);\n    //循环array 将array[i].content 通过array[i].index 插入指定位置 现将array[i].content  应该算是拼接\n    for (var i = 0; i < array.length; i++) {\n        array2.splice(array[i].index, 0, array[i].content);\n    }\n    console.log(array2);\n    return array2.join('');\n}\n```\n##### ajax contentType\n```JavaScript\n1. application/x-www-form-urlencoded(默认类型)\n\n如果不指定其他类型的话, 默认是x-www-form-urlencoded, 此类型要求参数传递样式为 key1=value1&key2=value2\n\n2. application/json\n\n更适合传递大数据的形式, 参数样式就是json格式, 例如{\"key1\":\"value1\",\"key2\":[1,2,3]}等\n```\n##### 获取最近一周七天（或指定天数）的日期\n```JavaScript\nfunction getBeforeDate(number) {\n    let num = number;\n    let dateList = [], s;\n    for (let i = 0; i < number; i++,num--) {\n        const date = new Date();\n        let year = date.getFullYear();\n        let mon = date.getMonth() + 1;\n        let day = date.getDate();\n        if (day <= num) {\n            if (mon > 1) {\n                mon = mon - 1;\n            } else {\n                year = year - 1;\n                mon = 12;\n            }\n        }\n        date.setDate(date.getDate() - num);\n        year = date.getFullYear();\n        mon = (date.getMonth() + 1) < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n        day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n        // s = year + '-' + (mon < 10 ? ('0' + mon) : mon) + '-' + (day < 10 ? ('0' + day) : day);\n        s = `${mon}${day}`\n        dateList.push(s)\n        // num-=1\n    }\n    return dateList;\n}\n\n//使用\n## getBeforeDate(7) //获取最近一周七天的日期\n## 返回结果 Array: [\"1016\", \"1017\", \"1018\", \"1019\", \"1020\", \"1021\", \"1022\"]\n```","slug":"记一些开发中遇到得问题","published":1,"updated":"2020-10-23T12:48:05.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clkxrz2u90038gw7glhoznob5","content":"<p>平时开发中遇到的一些问题及解决方法<br><a id=\"more\"></a></p>\n<h5 id=\"onclick事件传递对象参数\"><a href=\"#onclick事件传递对象参数\" class=\"headerlink\" title=\"onclick事件传递对象参数\"></a>onclick事件传递对象参数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onclick=<span class=\"string\">\"todo(\"</span>+<span class=\"built_in\">JSON</span>.stringify(data).replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">\")\"</span></span><br><span class=\"line\">demo:</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fc-check\"</span> onclick=<span class=\"string\">\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"</span>/g, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">')\"&gt;查看&lt;/a&gt;//传递单个参数 单引号拼接</span></span><br><span class=\"line\"><span class=\"string\">\"&lt;td width=\\\"120\\\"&gt;&lt;a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '</span>&amp;quot;<span class=\"string\">')+\")\\\"&gt;查看&lt;/a&gt;&lt;/td&gt;\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-post方法参数问题\"><a href=\"#ajax-post方法参数问题\" class=\"headerlink\" title=\"ajax post方法参数问题\"></a>ajax post方法参数问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj=&#123;&#125;;</span><br><span class=\"line\">obj.gameName=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">obj.gameId=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">            url: url+ <span class=\"string\">\"?t=\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</span><br><span class=\"line\">            data: <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">               <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"><span class=\"comment\">//使用contentType: “application/json”则data只能是json字符串</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"switch-data\"><a href=\"#switch-data\" class=\"headerlink\" title=\"switch(data){}\"></a>switch(data){}</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);</span></span><br><span class=\"line\"><span class=\"comment\">//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"WdatePicker-js使用\"><a href=\"#WdatePicker-js使用\" class=\"headerlink\" title=\"WdatePicker.js使用\"></a><a href=\"https://blog.csdn.net/nnn_net/article/details/50340929\" target=\"_blank\" rel=\"noopener\">WdatePicker.js</a>使用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//代码如下：</span></span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"startTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate m-letf3\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"endTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\"><span class=\"comment\">//显示年月日时分秒:onFocus=\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss'&#125;)\"</span></span><br><span class=\"line\"><span class=\"comment\">//结束时间为开始时间七天以内:startTime--maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'</span></span><br><span class=\"line\"><span class=\"comment\">// endTime--minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\"><a href=\"#使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\" class=\"headerlink\" title=\"使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\"></a>使用toFixed()函数时，出现“toFixed() is not a function”的解决办法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> item.price<span class=\"comment\">//string</span></span><br><span class=\"line\"><span class=\"comment\">//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(item.price).toFixed(<span class=\"number\">2</span>)<span class=\"comment\">//item.price=34.000 -- 34.00</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"js获取当前时间的前一天-后一天\"><a href=\"#js获取当前时间的前一天-后一天\" class=\"headerlink\" title=\"js获取当前时间的前一天/后一天\"></a>js获取当前时间的前一天/后一天</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> now=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> preDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() - <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//前一天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() + <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//后一天</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"try-catch\"><a href=\"#try-catch\" class=\"headerlink\" title=\"try catch\"></a>try catch</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    tryCode - 尝试执行代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    catchCode - 捕获错误的代码块</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    finallyCode - 无论 <span class=\"keyword\">try</span> / <span class=\"keyword\">catch</span> 结果如何都会执行的代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//demo</span></span><br><span class=\"line\"><span class=\"comment\">// 获取URL对应参数值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUrlParam</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span>+ name +<span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>); <span class=\"comment\">//构造一个含有目标参数的正则表达式对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);  <span class=\"comment\">//匹配目标参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">decodeURI</span>(r[<span class=\"number\">2</span>]); <span class=\"comment\">//报错执行catch下得代码</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(r[<span class=\"number\">2</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>; <span class=\"comment\">//返回参数值</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位\"><a href=\"#限制input输入数字且小数点后最多n位\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位\"></a>限制input输入数字且小数点后最多n位</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">value,length</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//length代表可以输入得小数位数</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>);  <span class=\"comment\">//清除“数字”和“.”以外的字符</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个. 清除多余的</span></span><br><span class=\"line\">    value = value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str=<span class=\"string\">'^(\\\\-)*(\\\\d+)\\\\.([0-9]&#123;1,'</span>+length+<span class=\"string\">'&#125;).*$'</span>;<span class=\"comment\">//给正则表达式代入动态参数 ，注意--反斜杠需要转义</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str);</span><br><span class=\"line\">    value = value.replace(reg,<span class=\"string\">'$1$2.$3'</span>);<span class=\"comment\">//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]&#123;1,2&#125;).*$/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.indexOf(<span class=\"string\">\".\"</span>) &lt; <span class=\"number\">0</span> &amp;&amp; value != <span class=\"string\">\"\"</span>) &#123;<span class=\"comment\">//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额</span></span><br><span class=\"line\">       value = <span class=\"built_in\">parseFloat</span>(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用：如果小数后面五位则num(this.value,5)</span></span><br><span class=\"line\">&lt;input placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"this.value=num(this.value,2)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位-第一位不能是小数点\"><a href=\"#限制input输入数字且小数点后最多n位-第一位不能是小数点\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位(第一位不能是小数点)\"></a>限制input输入数字且小数点后最多n位(第一位不能是小数点)</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>); <span class=\"comment\">//清除\"数字\"和\".\"以外的字符</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/^\\./g</span>, <span class=\"string\">\"\"</span>); <span class=\"comment\">//验证第一个字符是数字</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个\".\", 清除多余的</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/^(\\-)*(\\d+)\\.(\\d).*$/</span>, <span class=\"string\">'$1$2.$3'</span>); <span class=\"comment\">//只能输入一个小数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//两位小数</span></span><br><span class=\"line\">obj.value = obj.value.replace(<span class=\"regexp\">/^(\\-)*(\\d+)\\.(\\d\\d).*$/</span>, <span class=\"string\">'$1$2.$3'</span>); <span class=\"comment\">//添加 \\d 即为小数位数</span></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">&lt;input  placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"num(this)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"测试环境线上环境接口域名不同\"><a href=\"#测试环境线上环境接口域名不同\" class=\"headerlink\" title=\"测试环境线上环境接口域名不同\"></a>测试环境线上环境接口域名不同</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#获取协议 域名端口 拼接请求url</span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>`</span></span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>/api/getInfo`</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"js返回上一页并刷新页面\"><a href=\"#js返回上一页并刷新页面\" class=\"headerlink\" title=\"js返回上一页并刷新页面\"></a>js返回上一页并刷新页面</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//&lt;a href=\"#\" onclick=\"self.location=document.referrer;\"&gt;返回&lt;/a&gt;</span></span><br><span class=\"line\">self.location=<span class=\"built_in\">document</span>.referrer</span><br></pre></td></tr></table></figure>\n<h5 id=\"当前时间是否符合某时间区间判断-跨天\"><a href=\"#当前时间是否符合某时间区间判断-跨天\" class=\"headerlink\" title=\"当前时间是否符合某时间区间判断(跨天)\"></a>当前时间是否符合某时间区间判断(跨天)</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> timeList = [<span class=\"string\">'09:00'</span>, <span class=\"string\">\"01:00\"</span>];</span><br><span class=\"line\">            checkTime(...timeList)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkTime</span>(<span class=\"params\">startTime, endTime</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//console.log(startTime, endTime);</span></span><br><span class=\"line\">            <span class=\"comment\">//let now = new Date('2018-09-19 0:00').getTime();</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().setHours(startTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">0</span>], startTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().setHours(endTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">0</span>], endTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (end &lt; start) &#123;<span class=\"comment\">//end小于start表示是跨天区间</span></span><br><span class=\"line\">                end += <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span><span class=\"comment\">//end加上一天</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (start &lt; now &amp;&amp; now &lt; end) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">`在符合时间段内`</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">`不在符合的时间段内,时间段为<span class=\"subst\">$&#123;startTime&#125;</span>-<span class=\"subst\">$&#123;endTime&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"input限制只能输入纯数字问题\"><a href=\"#input限制只能输入纯数字问题\" class=\"headerlink\" title=\"input限制只能输入纯数字问题\"></a>input限制只能输入纯数字问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、onkeyup = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt; 使用 onkeyup 事件，有 bug ，那就是在中文输入法状态下，输入汉字之后直接回车，会直接输入字母</span><br><span class=\"line\"><span class=\"number\">2</span>、onchange = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt;使用 onchange 事件，在输入内容后，只有 input 丧失焦点时才会得到结果，并不能在输入时就做出响应</span><br><span class=\"line\"><span class=\"number\">3</span>、oninput = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt;使用 oninput 事件，完美的解决了以上两种问题，测试暂时还没有出现其它问题。</span><br></pre></td></tr></table></figure>\n<h5 id=\"window-open在ajax请求完成新窗口被拦截的问题\"><a href=\"#window-open在ajax请求完成新窗口被拦截的问题\" class=\"headerlink\" title=\"window.open在ajax请求完成新窗口被拦截的问题\"></a>window.open在ajax请求完成新窗口被拦截的问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决--先通过用户点击打开一个新的空白窗口，然后再对新打开的页面进行重定向。</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> newOpen=<span class=\"built_in\">window</span>.open();</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"GET\"</span>,</span><br><span class=\"line\">            url: url,</span><br><span class=\"line\">            data: data,</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp.success) &#123;</span><br><span class=\"line\">                    newOpen.location.href = baseServiceUrl + <span class=\"string\">\"shPayment?orderId=\"</span> + resp.orderId;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"built_in\">console</span>.log(<span class=\"string\">'请求失败'</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"WebUploader上传图片删除以后再上传同一张图片-提示超过大小限制（限制：10M，图：9M）\"><a href=\"#WebUploader上传图片删除以后再上传同一张图片-提示超过大小限制（限制：10M，图：9M）\" class=\"headerlink\" title=\"WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）\"></a>WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）</h5><p> <a href=\"http://fex.baidu.com/webuploader/doc/index.html#WebUploader_Uploader_events\" target=\"_blank\" rel=\"noopener\">WebUploader API</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getFiles</span><br><span class=\"line\">getFiles() ⇒ <span class=\"built_in\">Array</span></span><br><span class=\"line\">getFiles( status1, status2, status... ) ⇒ <span class=\"built_in\">Array</span></span><br><span class=\"line\">返回指定状态的文件集合，不传参数将返回所有状态的文件。</span><br><span class=\"line\"></span><br><span class=\"line\">这里的状态如下：</span><br><span class=\"line\"></span><br><span class=\"line\">File.Status</span><br><span class=\"line\">文件状态值，具体包括以下几种类型：</span><br><span class=\"line\"></span><br><span class=\"line\">-inited 初始状态</span><br><span class=\"line\">-queued 已经进入队列, 等待上传</span><br><span class=\"line\">-progress 上传中</span><br><span class=\"line\">-complete 上传完成。</span><br><span class=\"line\">-error 上传出错，可重试</span><br><span class=\"line\">-interrupt 上传中断，可续传。</span><br><span class=\"line\">-invalid 文件不合格，不能重试上传。会自动从队列中移除。</span><br><span class=\"line\">-cancelled 文件被移除。</span><br><span class=\"line\">就是说，只要我们的uploader对象没有重新创建，那它会保存所有选择的文件，</span><br><span class=\"line\"></span><br><span class=\"line\">当然我们也有方法，clear一下， 我们看到有这样的方法：</span><br><span class=\"line\"></span><br><span class=\"line\">removeFile</span><br><span class=\"line\">removeFile( file ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( id ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( file, <span class=\"literal\">true</span> ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( id, <span class=\"literal\">true</span> ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">参数:</span><br><span class=\"line\"></span><br><span class=\"line\">file &#123;File, id&#125;</span><br><span class=\"line\">File对象或这File对象的id</span><br><span class=\"line\"></span><br><span class=\"line\">移除某一文件, 默认只会标记文件状态为已取消，如果第二个参数为 <span class=\"literal\">true</span> 则会从 queue 中移除。</span><br><span class=\"line\"></span><br><span class=\"line\">当我们调用了一下removeFile方法后，只是标记了一下这个文件的状态，我们用getFiles方法，其实还是可以看到，</span><br><span class=\"line\"></span><br><span class=\"line\">这时我们可以再调用方法：</span><br><span class=\"line\"></span><br><span class=\"line\">reset</span><br><span class=\"line\">reset() ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">重置uploader。目前只重置了队列。就可以清除勾选的上传文件了</span><br><span class=\"line\"></span><br><span class=\"line\">在uploadSuccess事件中，调用removeFile方法，注意这个事件也是针对一个文件的</span><br><span class=\"line\"><span class=\"comment\">//成功事件,  针对一个文件</span></span><br><span class=\"line\">uploader.on(<span class=\"string\">'uploadSuccess'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file, response</span>) </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">　　uploader.removeFile(file);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">在uploadFinished事件中，调用reset方法，就可清空getfiles了</span><br><span class=\"line\"><span class=\"comment\">// 所有文件上传成功后调用        </span></span><br><span class=\"line\">uploader.on(<span class=\"string\">'uploadFinished'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//清空队列</span></span><br><span class=\"line\">     uploader.reset();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//uploader pick自动生成的上传按钮位置不对（应包含在wrap内却在body中）</span></span><br><span class=\"line\"> uploader = WebUploader.create(&#123;</span><br><span class=\"line\">        auto: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        pick: &#123;</span><br><span class=\"line\">            id: <span class=\"string\">'#filePicker'</span>,</span><br><span class=\"line\">            label: <span class=\"string\">'上传图片'</span>,</span><br><span class=\"line\">            multiple: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        paste: <span class=\"built_in\">document</span>.body,</span><br><span class=\"line\"></span><br><span class=\"line\">        accept: &#123;</span><br><span class=\"line\">            title: <span class=\"string\">'Images'</span>,</span><br><span class=\"line\">            extensions: <span class=\"string\">'gif,jpg,bmp,png,jpeg'</span>,</span><br><span class=\"line\">            mimeTypes: <span class=\"string\">'image/gif,image/jpg,image/bmp,image/png,image/jpeg'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// swf文件路径</span></span><br><span class=\"line\">        swf: <span class=\"string\">'./swf/uploader.swf'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        disableGlobalDnd: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        timeout: <span class=\"number\">0</span>,</span><br><span class=\"line\">        chunked: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        chunkSize: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>,</span><br><span class=\"line\">        server: <span class=\"string\">'/api/UploadFile'</span>,</span><br><span class=\"line\">        fileNumLimit: <span class=\"number\">1</span>,</span><br><span class=\"line\">        fileSizeLimit: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>, <span class=\"comment\">// 10 M</span></span><br><span class=\"line\">        fileSingleSizeLimit: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span> <span class=\"comment\">// 10 M</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//uploader初始化以后调用</span></span><br><span class=\"line\">    uploader.refresh();</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"获取图片img的真实宽高大小\"><a href=\"#获取图片img的真实宽高大小\" class=\"headerlink\" title=\"获取图片img的真实宽高大小\"></a>获取图片img的真实宽高大小</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取图片真实高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImageSize</span>(<span class=\"params\">url,callback</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">    img.src = url;</span><br><span class=\"line\">    <span class=\"comment\">// 如果图片被缓存，则直接返回缓存数据</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(img.complete)&#123;</span><br><span class=\"line\">        callback(img.width, img.height);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            callback(img.width, img.height);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用：</span></span><br><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> imgSrc = $(<span class=\"string\">\"#img\"</span>).attr(<span class=\"string\">\"src\"</span>);</span><br><span class=\"line\">    getImageSize(imgSrc,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">w,h</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(&#123;<span class=\"attr\">width</span>:w,<span class=\"attr\">height</span>:h&#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">w--图片的宽 h--图片的高</span><br></pre></td></tr></table></figure>\n<h5 id=\"时间问题\"><a href=\"#时间问题\" class=\"headerlink\" title=\"时间问题\"></a>时间问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//判断时间是否是当天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"number\">1404172800000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str).toDateString() === <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toDateString()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//今天</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str) &lt; <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>())&#123;</span><br><span class=\"line\">    <span class=\"comment\">//之前</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str).toISOString().slice(<span class=\"number\">0</span>,<span class=\"number\">10</span>));<span class=\"comment\">//2014-07-01</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断当前时间是否是一天内，超过一天不超过三十天，超过三十天</span></span><br><span class=\"line\">showTime(sendTime) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(sendTime);    <span class=\"comment\">//\"2019-01-08T10:49:29\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(); <span class=\"comment\">//当前时间戳</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> orderTime = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(sendTime).getTime(); <span class=\"comment\">//订单最后会话时间</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> oneday = <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">\t\t\tmonth = <span class=\"number\">30</span> * <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((now - orderTime) &lt; oneday) &#123;</span><br><span class=\"line\">\t\t\tsendTime = sendTime.split(<span class=\"string\">'T'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//一天内</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((now - orderTime) &gt; oneday || (now - orderTime) &lt; month) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//超过一天 不超过30天</span></span><br><span class=\"line\">\t\t\tsendTime = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.ceil((now-orderTime)<span class=\"regexp\">/(24*60*60*1000))&#125;天前`</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\tif ((now - orderTime) &gt; month) &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t\t/</span><span class=\"regexp\">/超过30天</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t\tsendTime = sendTime.replace('T', ' ')</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\treturn sendTime</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t&#125;</span></span></span></span><br></pre></td></tr></table></figure>\n<h5 id=\"字符串首尾保留中间星号\"><a href=\"#字符串首尾保留中间星号\" class=\"headerlink\" title=\"字符串首尾保留中间星号\"></a>字符串首尾保留中间星号</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseStringToStar</span>(<span class=\"params\">str, len, fixLen</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//str-- 传入的字符串</span></span><br><span class=\"line\">\t<span class=\"comment\">//len-- 首尾需保留的长度</span></span><br><span class=\"line\">\t<span class=\"comment\">//fixLen --是否固定显示星号数量</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> starLen = fixLen ? <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(fixLen + <span class=\"number\">1</span>).join(<span class=\"string\">'*'</span>) : (str.length &gt; <span class=\"number\">6</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(str.length - (<span class=\"number\">2</span> * len - <span class=\"number\">1</span>)).join(</span><br><span class=\"line\">\t\t<span class=\"string\">'*'</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(str.length -</span><br><span class=\"line\">\t\t(len - <span class=\"number\">1</span>)).join(<span class=\"string\">'*'</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> str.length &gt; <span class=\"number\">6</span> ? str.substr(<span class=\"number\">0</span>, len) + starLen + str.substr(-len) : str.substr(<span class=\"number\">0</span>, len) + starLen</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">## parseStringToStar('278383678@qq.com',3,3)</span><br><span class=\"line\">## \"278***com\"</span><br><span class=\"line\"></span><br><span class=\"line\">## parseStringToStar('278383678@qq.com',3)</span><br><span class=\"line\">## \"278**********com\"</span><br><span class=\"line\"></span><br><span class=\"line\">## parseStringToStar('123456',3)</span><br><span class=\"line\">## \"123***\"</span><br></pre></td></tr></table></figure>\n<h5 id=\"js正则去除字符串中的中文英文数字\"><a href=\"#js正则去除字符串中的中文英文数字\" class=\"headerlink\" title=\"js正则去除字符串中的中文英文数字\"></a>js正则去除字符串中的中文英文数字</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.match(<span class=\"regexp\">/[a-zA-Z0-9\\u4e00-\\u9fa5]+/g</span>).join(<span class=\"string\">''</span>);</span><br><span class=\"line\">str.replace(<span class=\"regexp\">/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g</span>,<span class=\"string\">''</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"js-过滤敏感词-，可将带有标点符号的敏感词过滤掉\"><a href=\"#js-过滤敏感词-，可将带有标点符号的敏感词过滤掉\" class=\"headerlink\" title=\"js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉\"></a>js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//简单版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transSensitive</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> Sensitive = wordList<span class=\"comment\">//敏感词数组</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(Sensitive.join(<span class=\"string\">'|'</span>), <span class=\"string\">\"gi\"</span>);<span class=\"comment\">//将数组转成正则</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//将特殊符号的过滤并且保存</span></span><br><span class=\"line\">    content = content.replace(<span class=\"regexp\">/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\&#123;|\\&#125;|\\;|\\:|\\\"|\\'|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s, i</span>) </span>&#123;</span><br><span class=\"line\">        array.push(&#123;</span><br><span class=\"line\">            index: i,</span><br><span class=\"line\">            content: s</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//将敏感词进行筛选</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(content, v);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> content.replace(v, <span class=\"string\">'**'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//适用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filterWords</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//敏感词数组--wordList</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(wordList.join(<span class=\"string\">'|'</span>), <span class=\"string\">\"gi\"</span>);<span class=\"comment\">//将数组转成正则</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//将特殊符号的过滤并且保存</span></span><br><span class=\"line\">    content = content.replace(<span class=\"regexp\">/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\&#123;|\\&#125;|\\;|\\:|\\\"|\\'|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s, i</span>) </span>&#123;</span><br><span class=\"line\">        array.push(&#123;</span><br><span class=\"line\">            index: i,</span><br><span class=\"line\">            content: s</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//将敏感词进行筛选</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(content, v);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> output = content.replace(v, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sMatch</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//sMatch 匹配到的敏感词</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sMatch.length &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sMatch.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">'*'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sMatch.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">'*'</span>);</span><br><span class=\"line\">            <span class=\"comment\">/* return sMatch[0] + sMatch.replace(/./g, '*').substring(0, sMatch.length - 1);//将词的第一个字保留 */</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> array2 = output.split(<span class=\"string\">''</span>);<span class=\"comment\">//将字符串转成char数组</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array, array2);</span><br><span class=\"line\">    <span class=\"comment\">//循环array 将array[i].content 通过array[i].index 插入指定位置 现将array[i].content  应该算是拼接</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">        array2.splice(array[i].index, <span class=\"number\">0</span>, array[i].content);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array2.join(<span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-contentType\"><a href=\"#ajax-contentType\" class=\"headerlink\" title=\"ajax contentType\"></a>ajax contentType</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> application/x-www-form-urlencoded(默认类型)</span><br><span class=\"line\"></span><br><span class=\"line\">如果不指定其他类型的话, 默认是x-www-form-urlencoded, 此类型要求参数传递样式为 key1=value1&amp;key2=value2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> application/json</span><br><span class=\"line\"></span><br><span class=\"line\">更适合传递大数据的形式, 参数样式就是json格式, 例如&#123;<span class=\"string\">\"key1\"</span>:<span class=\"string\">\"value1\"</span>,<span class=\"string\">\"key2\"</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]&#125;等</span><br></pre></td></tr></table></figure>\n<h5 id=\"获取最近一周七天（或指定天数）的日期\"><a href=\"#获取最近一周七天（或指定天数）的日期\" class=\"headerlink\" title=\"获取最近一周七天（或指定天数）的日期\"></a>获取最近一周七天（或指定天数）的日期</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBeforeDate</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = number;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dateList = [], s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; number; i++,num--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> year = date.getFullYear();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mon = date.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> day = date.getDate();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (day &lt;= num) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mon &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                mon = mon - <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                year = year - <span class=\"number\">1</span>;</span><br><span class=\"line\">                mon = <span class=\"number\">12</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        date.setDate(date.getDate() - num);</span><br><span class=\"line\">        year = date.getFullYear();</span><br><span class=\"line\">        mon = (date.getMonth() + <span class=\"number\">1</span>) &lt; <span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;date.getMonth() + <span class=\"number\">1</span>&#125;</span>`</span> : date.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">        day = date.getDate() &lt; <span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;date.getDate()&#125;</span>`</span> : date.getDate();</span><br><span class=\"line\">        <span class=\"comment\">// s = year + '-' + (mon &lt; 10 ? ('0' + mon) : mon) + '-' + (day &lt; 10 ? ('0' + day) : day);</span></span><br><span class=\"line\">        s = <span class=\"string\">`<span class=\"subst\">$&#123;mon&#125;</span><span class=\"subst\">$&#123;day&#125;</span>`</span></span><br><span class=\"line\">        dateList.push(s)</span><br><span class=\"line\">        <span class=\"comment\">// num-=1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dateList;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">## getBeforeDate(7) //获取最近一周七天的日期</span><br><span class=\"line\">## 返回结果 Array: [\"1016\", \"1017\", \"1018\", \"1019\", \"1020\", \"1021\", \"1022\"]</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>平时开发中遇到的一些问题及解决方法<br>","more":"</p>\n<h5 id=\"onclick事件传递对象参数\"><a href=\"#onclick事件传递对象参数\" class=\"headerlink\" title=\"onclick事件传递对象参数\"></a>onclick事件传递对象参数</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onclick=<span class=\"string\">\"todo(\"</span>+<span class=\"built_in\">JSON</span>.stringify(data).replace(<span class=\"regexp\">/\"/g</span>, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">\")\"</span></span><br><span class=\"line\">demo:</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fc-check\"</span> onclick=<span class=\"string\">\"goDetail('+JSON.stringify(fcOrderList[i].orderId).replace(/\"</span>/g, <span class=\"string\">'&amp;quot;'</span>)+<span class=\"string\">')\"&gt;查看&lt;/a&gt;//传递单个参数 单引号拼接</span></span><br><span class=\"line\"><span class=\"string\">\"&lt;td width=\\\"120\\\"&gt;&lt;a class=\\\"fc-check\\\" onclick=\\\"todo(\"+JSON.stringify(data).replace(/\"/g, '</span>&amp;quot;<span class=\"string\">')+\")\\\"&gt;查看&lt;/a&gt;&lt;/td&gt;\"//双引号拼接 传递对象参数--需要用\\(反斜杠)转义</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-post方法参数问题\"><a href=\"#ajax-post方法参数问题\" class=\"headerlink\" title=\"ajax post方法参数问题\"></a>ajax post方法参数问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj=&#123;&#125;;</span><br><span class=\"line\">obj.gameName=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">obj.gameId=<span class=\"string\">'xxx'</span>;</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">            url: url+ <span class=\"string\">\"?t=\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(),</span><br><span class=\"line\">            data: <span class=\"built_in\">JSON</span>.stringify(obj),</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">               <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"><span class=\"comment\">//使用contentType: “application/json”则data只能是json字符串</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"switch-data\"><a href=\"#switch-data\" class=\"headerlink\" title=\"switch(data){}\"></a>switch(data){}</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"number\">11</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">22</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//switch对参数类型敏感 可以先打印看看data到底是什么类型的参数 console.log(typeof data);</span></span><br><span class=\"line\"><span class=\"comment\">//如果参数data=1是字符串可以打印出11，但是如果1是number那么就不会去执行case1下面得了</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"WdatePicker-js使用\"><a href=\"#WdatePicker-js使用\" class=\"headerlink\" title=\"WdatePicker.js使用\"></a><a href=\"https://blog.csdn.net/nnn_net/article/details/50340929\" target=\"_blank\" rel=\"noopener\">WdatePicker.js</a>使用</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//代码如下：</span></span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"startTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate m-letf3\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss',maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\">&lt;input id=<span class=\"string\">\"endTime\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"Wdate\"</span> readonly=<span class=\"string\">\"readonly\"</span> type=<span class=\"string\">\"text\"</span> onFocus=<span class=\"string\">\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss' ,minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'&#125;)\"</span>/&gt;</span><br><span class=\"line\"><span class=\"comment\">//显示年月日时分秒:onFocus=\"WdatePicker(&#123; dateFmt: 'yyyy-MM-dd HH:mm:ss'&#125;)\"</span></span><br><span class=\"line\"><span class=\"comment\">//结束时间为开始时间七天以内:startTime--maxDate:'#F&#123;$dp.$D(\\'endTime\\',&#123;d:-7&#125;)&#125;'</span></span><br><span class=\"line\"><span class=\"comment\">// endTime--minDate:'#F&#123;$dp.$D(\\'startTime\\')&#125;',maxDate:'#F&#123;$dp.$D(\\'startTime\\',&#123;d:7&#125;)&#125;'</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\"><a href=\"#使用toFixed-函数时，出现“toFixed-is-not-a-function”的解决办法\" class=\"headerlink\" title=\"使用toFixed()函数时，出现“toFixed() is not a function”的解决办法\"></a>使用toFixed()函数时，出现“toFixed() is not a function”的解决办法</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> item.price<span class=\"comment\">//string</span></span><br><span class=\"line\"><span class=\"comment\">//toFixed只能针对数字类型才能使用，所以对于字符类型的要用parseFloat或者parseInt函数先转一下再调用</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(item.price).toFixed(<span class=\"number\">2</span>)<span class=\"comment\">//item.price=34.000 -- 34.00</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"js获取当前时间的前一天-后一天\"><a href=\"#js获取当前时间的前一天-后一天\" class=\"headerlink\" title=\"js获取当前时间的前一天/后一天\"></a>js获取当前时间的前一天/后一天</h6><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> now=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> preDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() - <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//前一天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nextDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(now.getTime() + <span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>); <span class=\"comment\">//后一天</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"try-catch\"><a href=\"#try-catch\" class=\"headerlink\" title=\"try catch\"></a>try catch</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景--url跳转中文参数编码，由于未登录先去登录站点登录，进行了二次编码，导致获取url中文参数乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    tryCode - 尝试执行代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">    catchCode - 捕获错误的代码块</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    finallyCode - 无论 <span class=\"keyword\">try</span> / <span class=\"keyword\">catch</span> 结果如何都会执行的代码块</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//demo</span></span><br><span class=\"line\"><span class=\"comment\">// 获取URL对应参数值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getUrlParam</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span>+ name +<span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>); <span class=\"comment\">//构造一个含有目标参数的正则表达式对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);  <span class=\"comment\">//匹配目标参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">decodeURI</span>(r[<span class=\"number\">2</span>]); <span class=\"comment\">//报错执行catch下得代码</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">unescape</span>(r[<span class=\"number\">2</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>; <span class=\"comment\">//返回参数值</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位\"><a href=\"#限制input输入数字且小数点后最多n位\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位\"></a>限制input输入数字且小数点后最多n位</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">value,length</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//length代表可以输入得小数位数</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>);  <span class=\"comment\">//清除“数字”和“.”以外的字符</span></span><br><span class=\"line\">    value = value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个. 清除多余的</span></span><br><span class=\"line\">    value = value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str=<span class=\"string\">'^(\\\\-)*(\\\\d+)\\\\.([0-9]&#123;1,'</span>+length+<span class=\"string\">'&#125;).*$'</span>;<span class=\"comment\">//给正则表达式代入动态参数 ，注意--反斜杠需要转义</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg=<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str);</span><br><span class=\"line\">    value = value.replace(reg,<span class=\"string\">'$1$2.$3'</span>);<span class=\"comment\">//只能输入两个小数-- reg=/^(\\-)*(\\d+)\\.([0-9]&#123;1,2&#125;).*$/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.indexOf(<span class=\"string\">\".\"</span>) &lt; <span class=\"number\">0</span> &amp;&amp; value != <span class=\"string\">\"\"</span>) &#123;<span class=\"comment\">//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额</span></span><br><span class=\"line\">       value = <span class=\"built_in\">parseFloat</span>(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//使用：如果小数后面五位则num(this.value,5)</span></span><br><span class=\"line\">&lt;input placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"this.value=num(this.value,2)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"限制input输入数字且小数点后最多n位-第一位不能是小数点\"><a href=\"#限制input输入数字且小数点后最多n位-第一位不能是小数点\" class=\"headerlink\" title=\"限制input输入数字且小数点后最多n位(第一位不能是小数点)\"></a>限制input输入数字且小数点后最多n位(第一位不能是小数点)</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">num</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/[^\\d.]/g</span>, <span class=\"string\">\"\"</span>); <span class=\"comment\">//清除\"数字\"和\".\"以外的字符</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/^\\./g</span>, <span class=\"string\">\"\"</span>); <span class=\"comment\">//验证第一个字符是数字</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/\\.&#123;2,&#125;/g</span>, <span class=\"string\">\".\"</span>); <span class=\"comment\">//只保留第一个\".\", 清除多余的</span></span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"string\">\".\"</span>, <span class=\"string\">\"$#$\"</span>).replace(<span class=\"regexp\">/\\./g</span>, <span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"$#$\"</span>, <span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    obj.value = obj.value.replace(<span class=\"regexp\">/^(\\-)*(\\d+)\\.(\\d).*$/</span>, <span class=\"string\">'$1$2.$3'</span>); <span class=\"comment\">//只能输入一个小数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//两位小数</span></span><br><span class=\"line\">obj.value = obj.value.replace(<span class=\"regexp\">/^(\\-)*(\\d+)\\.(\\d\\d).*$/</span>, <span class=\"string\">'$1$2.$3'</span>); <span class=\"comment\">//添加 \\d 即为小数位数</span></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">&lt;input  placeholder=<span class=\"string\">\"\"</span> onkeyup=<span class=\"string\">\"num(this)\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"测试环境线上环境接口域名不同\"><a href=\"#测试环境线上环境接口域名不同\" class=\"headerlink\" title=\"测试环境线上环境接口域名不同\"></a>测试环境线上环境接口域名不同</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#获取协议 域名端口 拼接请求url</span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>`</span></span><br><span class=\"line\"><span class=\"string\">`<span class=\"subst\">$&#123;location.protocol&#125;</span>//<span class=\"subst\">$&#123;location.host&#125;</span>/api/getInfo`</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"js返回上一页并刷新页面\"><a href=\"#js返回上一页并刷新页面\" class=\"headerlink\" title=\"js返回上一页并刷新页面\"></a>js返回上一页并刷新页面</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//&lt;a href=\"#\" onclick=\"self.location=document.referrer;\"&gt;返回&lt;/a&gt;</span></span><br><span class=\"line\">self.location=<span class=\"built_in\">document</span>.referrer</span><br></pre></td></tr></table></figure>\n<h5 id=\"当前时间是否符合某时间区间判断-跨天\"><a href=\"#当前时间是否符合某时间区间判断-跨天\" class=\"headerlink\" title=\"当前时间是否符合某时间区间判断(跨天)\"></a>当前时间是否符合某时间区间判断(跨天)</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> timeList = [<span class=\"string\">'09:00'</span>, <span class=\"string\">\"01:00\"</span>];</span><br><span class=\"line\">            checkTime(...timeList)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkTime</span>(<span class=\"params\">startTime, endTime</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//console.log(startTime, endTime);</span></span><br><span class=\"line\">            <span class=\"comment\">//let now = new Date('2018-09-19 0:00').getTime();</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime();</span><br><span class=\"line\">            <span class=\"keyword\">let</span> start = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().setHours(startTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">0</span>], startTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">let</span> end = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().setHours(endTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">0</span>], endTime.split(<span class=\"string\">':'</span>)[<span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (end &lt; start) &#123;<span class=\"comment\">//end小于start表示是跨天区间</span></span><br><span class=\"line\">                end += <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span><span class=\"comment\">//end加上一天</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (start &lt; now &amp;&amp; now &lt; end) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">`在符合时间段内`</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">`不在符合的时间段内,时间段为<span class=\"subst\">$&#123;startTime&#125;</span>-<span class=\"subst\">$&#123;endTime&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"input限制只能输入纯数字问题\"><a href=\"#input限制只能输入纯数字问题\" class=\"headerlink\" title=\"input限制只能输入纯数字问题\"></a>input限制只能输入纯数字问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、onkeyup = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt; 使用 onkeyup 事件，有 bug ，那就是在中文输入法状态下，输入汉字之后直接回车，会直接输入字母</span><br><span class=\"line\"><span class=\"number\">2</span>、onchange = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt;使用 onchange 事件，在输入内容后，只有 input 丧失焦点时才会得到结果，并不能在输入时就做出响应</span><br><span class=\"line\"><span class=\"number\">3</span>、oninput = <span class=\"string\">\"value=value.replace(/[^\\d]/g,'')\"</span></span><br><span class=\"line\">=&gt;使用 oninput 事件，完美的解决了以上两种问题，测试暂时还没有出现其它问题。</span><br></pre></td></tr></table></figure>\n<h5 id=\"window-open在ajax请求完成新窗口被拦截的问题\"><a href=\"#window-open在ajax请求完成新窗口被拦截的问题\" class=\"headerlink\" title=\"window.open在ajax请求完成新窗口被拦截的问题\"></a>window.open在ajax请求完成新窗口被拦截的问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//解决--先通过用户点击打开一个新的空白窗口，然后再对新打开的页面进行重定向。</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> newOpen=<span class=\"built_in\">window</span>.open();</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            type: <span class=\"string\">\"GET\"</span>,</span><br><span class=\"line\">            url: url,</span><br><span class=\"line\">            data: data,</span><br><span class=\"line\">            contentType: <span class=\"string\">\"application/json; charset=UTF-8\"</span>,</span><br><span class=\"line\">            dataType: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp.success) &#123;</span><br><span class=\"line\">                    newOpen.location.href = baseServiceUrl + <span class=\"string\">\"shPayment?orderId=\"</span> + resp.orderId;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"built_in\">console</span>.log(<span class=\"string\">'请求失败'</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"WebUploader上传图片删除以后再上传同一张图片-提示超过大小限制（限制：10M，图：9M）\"><a href=\"#WebUploader上传图片删除以后再上传同一张图片-提示超过大小限制（限制：10M，图：9M）\" class=\"headerlink\" title=\"WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）\"></a>WebUploader上传图片删除以后再上传同一张图片 提示超过大小限制（限制：10M，图：9M）</h5><p> <a href=\"http://fex.baidu.com/webuploader/doc/index.html#WebUploader_Uploader_events\" target=\"_blank\" rel=\"noopener\">WebUploader API</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getFiles</span><br><span class=\"line\">getFiles() ⇒ <span class=\"built_in\">Array</span></span><br><span class=\"line\">getFiles( status1, status2, status... ) ⇒ <span class=\"built_in\">Array</span></span><br><span class=\"line\">返回指定状态的文件集合，不传参数将返回所有状态的文件。</span><br><span class=\"line\"></span><br><span class=\"line\">这里的状态如下：</span><br><span class=\"line\"></span><br><span class=\"line\">File.Status</span><br><span class=\"line\">文件状态值，具体包括以下几种类型：</span><br><span class=\"line\"></span><br><span class=\"line\">-inited 初始状态</span><br><span class=\"line\">-queued 已经进入队列, 等待上传</span><br><span class=\"line\">-progress 上传中</span><br><span class=\"line\">-complete 上传完成。</span><br><span class=\"line\">-error 上传出错，可重试</span><br><span class=\"line\">-interrupt 上传中断，可续传。</span><br><span class=\"line\">-invalid 文件不合格，不能重试上传。会自动从队列中移除。</span><br><span class=\"line\">-cancelled 文件被移除。</span><br><span class=\"line\">就是说，只要我们的uploader对象没有重新创建，那它会保存所有选择的文件，</span><br><span class=\"line\"></span><br><span class=\"line\">当然我们也有方法，clear一下， 我们看到有这样的方法：</span><br><span class=\"line\"></span><br><span class=\"line\">removeFile</span><br><span class=\"line\">removeFile( file ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( id ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( file, <span class=\"literal\">true</span> ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">removeFile( id, <span class=\"literal\">true</span> ) ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">参数:</span><br><span class=\"line\"></span><br><span class=\"line\">file &#123;File, id&#125;</span><br><span class=\"line\">File对象或这File对象的id</span><br><span class=\"line\"></span><br><span class=\"line\">移除某一文件, 默认只会标记文件状态为已取消，如果第二个参数为 <span class=\"literal\">true</span> 则会从 queue 中移除。</span><br><span class=\"line\"></span><br><span class=\"line\">当我们调用了一下removeFile方法后，只是标记了一下这个文件的状态，我们用getFiles方法，其实还是可以看到，</span><br><span class=\"line\"></span><br><span class=\"line\">这时我们可以再调用方法：</span><br><span class=\"line\"></span><br><span class=\"line\">reset</span><br><span class=\"line\">reset() ⇒ <span class=\"literal\">undefined</span></span><br><span class=\"line\">重置uploader。目前只重置了队列。就可以清除勾选的上传文件了</span><br><span class=\"line\"></span><br><span class=\"line\">在uploadSuccess事件中，调用removeFile方法，注意这个事件也是针对一个文件的</span><br><span class=\"line\"><span class=\"comment\">//成功事件,  针对一个文件</span></span><br><span class=\"line\">uploader.on(<span class=\"string\">'uploadSuccess'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file, response</span>) </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">　　uploader.removeFile(file);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">在uploadFinished事件中，调用reset方法，就可清空getfiles了</span><br><span class=\"line\"><span class=\"comment\">// 所有文件上传成功后调用        </span></span><br><span class=\"line\">uploader.on(<span class=\"string\">'uploadFinished'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//清空队列</span></span><br><span class=\"line\">     uploader.reset();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//uploader pick自动生成的上传按钮位置不对（应包含在wrap内却在body中）</span></span><br><span class=\"line\"> uploader = WebUploader.create(&#123;</span><br><span class=\"line\">        auto: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        pick: &#123;</span><br><span class=\"line\">            id: <span class=\"string\">'#filePicker'</span>,</span><br><span class=\"line\">            label: <span class=\"string\">'上传图片'</span>,</span><br><span class=\"line\">            multiple: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        paste: <span class=\"built_in\">document</span>.body,</span><br><span class=\"line\"></span><br><span class=\"line\">        accept: &#123;</span><br><span class=\"line\">            title: <span class=\"string\">'Images'</span>,</span><br><span class=\"line\">            extensions: <span class=\"string\">'gif,jpg,bmp,png,jpeg'</span>,</span><br><span class=\"line\">            mimeTypes: <span class=\"string\">'image/gif,image/jpg,image/bmp,image/png,image/jpeg'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// swf文件路径</span></span><br><span class=\"line\">        swf: <span class=\"string\">'./swf/uploader.swf'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">        disableGlobalDnd: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        timeout: <span class=\"number\">0</span>,</span><br><span class=\"line\">        chunked: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        chunkSize: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>,</span><br><span class=\"line\">        server: <span class=\"string\">'/api/UploadFile'</span>,</span><br><span class=\"line\">        fileNumLimit: <span class=\"number\">1</span>,</span><br><span class=\"line\">        fileSizeLimit: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>, <span class=\"comment\">// 10 M</span></span><br><span class=\"line\">        fileSingleSizeLimit: <span class=\"number\">10</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span> <span class=\"comment\">// 10 M</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">//uploader初始化以后调用</span></span><br><span class=\"line\">    uploader.refresh();</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"获取图片img的真实宽高大小\"><a href=\"#获取图片img的真实宽高大小\" class=\"headerlink\" title=\"获取图片img的真实宽高大小\"></a>获取图片img的真实宽高大小</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取图片真实高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImageSize</span>(<span class=\"params\">url,callback</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">    img.src = url;</span><br><span class=\"line\">    <span class=\"comment\">// 如果图片被缓存，则直接返回缓存数据</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(img.complete)&#123;</span><br><span class=\"line\">        callback(img.width, img.height);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            callback(img.width, img.height);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//调用：</span></span><br><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> imgSrc = $(<span class=\"string\">\"#img\"</span>).attr(<span class=\"string\">\"src\"</span>);</span><br><span class=\"line\">    getImageSize(imgSrc,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">w,h</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(&#123;<span class=\"attr\">width</span>:w,<span class=\"attr\">height</span>:h&#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">w--图片的宽 h--图片的高</span><br></pre></td></tr></table></figure>\n<h5 id=\"时间问题\"><a href=\"#时间问题\" class=\"headerlink\" title=\"时间问题\"></a>时间问题</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//判断时间是否是当天</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"number\">1404172800000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str).toDateString() === <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toDateString()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//今天</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str) &lt; <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>())&#123;</span><br><span class=\"line\">    <span class=\"comment\">//之前</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(str).toISOString().slice(<span class=\"number\">0</span>,<span class=\"number\">10</span>));<span class=\"comment\">//2014-07-01</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判断当前时间是否是一天内，超过一天不超过三十天，超过三十天</span></span><br><span class=\"line\">showTime(sendTime) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(sendTime);    <span class=\"comment\">//\"2019-01-08T10:49:29\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime(); <span class=\"comment\">//当前时间戳</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> orderTime = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(sendTime).getTime(); <span class=\"comment\">//订单最后会话时间</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> oneday = <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>,</span><br><span class=\"line\">\t\t\tmonth = <span class=\"number\">30</span> * <span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((now - orderTime) &lt; oneday) &#123;</span><br><span class=\"line\">\t\t\tsendTime = sendTime.split(<span class=\"string\">'T'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//一天内</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((now - orderTime) &gt; oneday || (now - orderTime) &lt; month) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//超过一天 不超过30天</span></span><br><span class=\"line\">\t\t\tsendTime = <span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"built_in\">Math</span>.ceil((now-orderTime)<span class=\"regexp\">/(24*60*60*1000))&#125;天前`</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\tif ((now - orderTime) &gt; month) &#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t\t/</span><span class=\"regexp\">/超过30天</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t\tsendTime = sendTime.replace('T', ' ')</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\t&#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t\treturn sendTime</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">\t&#125;</span></span></span></span><br></pre></td></tr></table></figure>\n<h5 id=\"字符串首尾保留中间星号\"><a href=\"#字符串首尾保留中间星号\" class=\"headerlink\" title=\"字符串首尾保留中间星号\"></a>字符串首尾保留中间星号</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseStringToStar</span>(<span class=\"params\">str, len, fixLen</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//str-- 传入的字符串</span></span><br><span class=\"line\">\t<span class=\"comment\">//len-- 首尾需保留的长度</span></span><br><span class=\"line\">\t<span class=\"comment\">//fixLen --是否固定显示星号数量</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> starLen = fixLen ? <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(fixLen + <span class=\"number\">1</span>).join(<span class=\"string\">'*'</span>) : (str.length &gt; <span class=\"number\">6</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(str.length - (<span class=\"number\">2</span> * len - <span class=\"number\">1</span>)).join(</span><br><span class=\"line\">\t\t<span class=\"string\">'*'</span>) : <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(str.length -</span><br><span class=\"line\">\t\t(len - <span class=\"number\">1</span>)).join(<span class=\"string\">'*'</span>))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> str.length &gt; <span class=\"number\">6</span> ? str.substr(<span class=\"number\">0</span>, len) + starLen + str.substr(-len) : str.substr(<span class=\"number\">0</span>, len) + starLen</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">## parseStringToStar('278383678@qq.com',3,3)</span><br><span class=\"line\">## \"278***com\"</span><br><span class=\"line\"></span><br><span class=\"line\">## parseStringToStar('278383678@qq.com',3)</span><br><span class=\"line\">## \"278**********com\"</span><br><span class=\"line\"></span><br><span class=\"line\">## parseStringToStar('123456',3)</span><br><span class=\"line\">## \"123***\"</span><br></pre></td></tr></table></figure>\n<h5 id=\"js正则去除字符串中的中文英文数字\"><a href=\"#js正则去除字符串中的中文英文数字\" class=\"headerlink\" title=\"js正则去除字符串中的中文英文数字\"></a>js正则去除字符串中的中文英文数字</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.match(<span class=\"regexp\">/[a-zA-Z0-9\\u4e00-\\u9fa5]+/g</span>).join(<span class=\"string\">''</span>);</span><br><span class=\"line\">str.replace(<span class=\"regexp\">/[^\\u4e00-\\u9fa5a-zA-Z0-9]/g</span>,<span class=\"string\">''</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"js-过滤敏感词-，可将带有标点符号的敏感词过滤掉\"><a href=\"#js-过滤敏感词-，可将带有标点符号的敏感词过滤掉\" class=\"headerlink\" title=\"js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉\"></a>js 过滤敏感词 ，可将带有标点符号的敏感词过滤掉</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//简单版本</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">transSensitive</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> Sensitive = wordList<span class=\"comment\">//敏感词数组</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(Sensitive.join(<span class=\"string\">'|'</span>), <span class=\"string\">\"gi\"</span>);<span class=\"comment\">//将数组转成正则</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//将特殊符号的过滤并且保存</span></span><br><span class=\"line\">    content = content.replace(<span class=\"regexp\">/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\&#123;|\\&#125;|\\;|\\:|\\\"|\\'|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s, i</span>) </span>&#123;</span><br><span class=\"line\">        array.push(&#123;</span><br><span class=\"line\">            index: i,</span><br><span class=\"line\">            content: s</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//将敏感词进行筛选</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(content, v);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> content.replace(v, <span class=\"string\">'**'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//适用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filterWords</span>(<span class=\"params\">content</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//敏感词数组--wordList</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> v = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(wordList.join(<span class=\"string\">'|'</span>), <span class=\"string\">\"gi\"</span>);<span class=\"comment\">//将数组转成正则</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> array = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//将特殊符号的过滤并且保存</span></span><br><span class=\"line\">    content = content.replace(<span class=\"regexp\">/[\\ |\\~|\\`|\\!|\\@|\\#|\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\||\\\\|\\[|\\]|\\&#123;|\\&#125;|\\;|\\:|\\\"|\\'|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s, i</span>) </span>&#123;</span><br><span class=\"line\">        array.push(&#123;</span><br><span class=\"line\">            index: i,</span><br><span class=\"line\">            content: s</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">//将敏感词进行筛选</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(content, v);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> output = content.replace(v, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sMatch</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//sMatch 匹配到的敏感词</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sMatch.length &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sMatch.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">'*'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sMatch.replace(<span class=\"regexp\">/./g</span>, <span class=\"string\">'*'</span>);</span><br><span class=\"line\">            <span class=\"comment\">/* return sMatch[0] + sMatch.replace(/./g, '*').substring(0, sMatch.length - 1);//将词的第一个字保留 */</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> array2 = output.split(<span class=\"string\">''</span>);<span class=\"comment\">//将字符串转成char数组</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array, array2);</span><br><span class=\"line\">    <span class=\"comment\">//循环array 将array[i].content 通过array[i].index 插入指定位置 现将array[i].content  应该算是拼接</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">        array2.splice(array[i].index, <span class=\"number\">0</span>, array[i].content);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array2.join(<span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"ajax-contentType\"><a href=\"#ajax-contentType\" class=\"headerlink\" title=\"ajax contentType\"></a>ajax contentType</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> application/x-www-form-urlencoded(默认类型)</span><br><span class=\"line\"></span><br><span class=\"line\">如果不指定其他类型的话, 默认是x-www-form-urlencoded, 此类型要求参数传递样式为 key1=value1&amp;key2=value2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> application/json</span><br><span class=\"line\"></span><br><span class=\"line\">更适合传递大数据的形式, 参数样式就是json格式, 例如&#123;<span class=\"string\">\"key1\"</span>:<span class=\"string\">\"value1\"</span>,<span class=\"string\">\"key2\"</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]&#125;等</span><br></pre></td></tr></table></figure>\n<h5 id=\"获取最近一周七天（或指定天数）的日期\"><a href=\"#获取最近一周七天（或指定天数）的日期\" class=\"headerlink\" title=\"获取最近一周七天（或指定天数）的日期\"></a>获取最近一周七天（或指定天数）的日期</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBeforeDate</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = number;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dateList = [], s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; number; i++,num--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> year = date.getFullYear();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mon = date.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> day = date.getDate();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (day &lt;= num) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mon &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                mon = mon - <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                year = year - <span class=\"number\">1</span>;</span><br><span class=\"line\">                mon = <span class=\"number\">12</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        date.setDate(date.getDate() - num);</span><br><span class=\"line\">        year = date.getFullYear();</span><br><span class=\"line\">        mon = (date.getMonth() + <span class=\"number\">1</span>) &lt; <span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;date.getMonth() + <span class=\"number\">1</span>&#125;</span>`</span> : date.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">        day = date.getDate() &lt; <span class=\"number\">10</span> ? <span class=\"string\">`0<span class=\"subst\">$&#123;date.getDate()&#125;</span>`</span> : date.getDate();</span><br><span class=\"line\">        <span class=\"comment\">// s = year + '-' + (mon &lt; 10 ? ('0' + mon) : mon) + '-' + (day &lt; 10 ? ('0' + day) : day);</span></span><br><span class=\"line\">        s = <span class=\"string\">`<span class=\"subst\">$&#123;mon&#125;</span><span class=\"subst\">$&#123;day&#125;</span>`</span></span><br><span class=\"line\">        dateList.push(s)</span><br><span class=\"line\">        <span class=\"comment\">// num-=1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dateList;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用</span></span><br><span class=\"line\">## getBeforeDate(7) //获取最近一周七天的日期</span><br><span class=\"line\">## 返回结果 Array: [\"1016\", \"1017\", \"1018\", \"1019\", \"1020\", \"1021\", \"1022\"]</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"clkxrz2rx0000gw7g1pccefjc","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2sk000ggw7giqpwrf2b"},{"post_id":"clkxrz2sh000egw7gv1tsa7a3","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2so000ngw7gq81a362i"},{"post_id":"clkxrz2s30002gw7ga7dmvrue","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2ss000sgw7gvkv5fy1u"},{"post_id":"clkxrz2sm000kgw7g48bf61k0","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2su000vgw7g2df7kqry"},{"post_id":"clkxrz2s90006gw7gtaj7j5nm","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2sx0010gw7g875sljsh"},{"post_id":"clkxrz2sn000mgw7gayblbkyt","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2sz0013gw7g4kunmhcp"},{"post_id":"clkxrz2sb0008gw7gq91w77e4","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2t20018gw7gpd2zyj9r"},{"post_id":"clkxrz2st000ugw7gwixio91l","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2t4001bgw7g13cc89aa"},{"post_id":"clkxrz2sf000agw7gn0ymokir","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2t7001ggw7gyc0alryc"},{"post_id":"clkxrz2t10017gw7gykp54wz5","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2t9001jgw7gmiwxj1fe"},{"post_id":"clkxrz2sj000fgw7gldg12y7v","category_id":"clkxrz2t00014gw7gkir4qbwh","_id":"clkxrz2tb001mgw7gzrod3n8a"},{"post_id":"clkxrz2t3001agw7ggok5kvei","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2te001rgw7gsgoyhfon"},{"post_id":"clkxrz2t6001fgw7g85ymjf9h","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2tg001ugw7gvdyyibxv"},{"post_id":"clkxrz2t8001igw7gk6v1pzcs","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2ti001xgw7ghyee14g9"},{"post_id":"clkxrz2sw000zgw7g1d95vkp9","category_id":"clkxrz2t5001dgw7gzw88jpk6","_id":"clkxrz2tk0020gw7gl0v76z68"},{"post_id":"clkxrz2tb001lgw7gacte2rs7","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2tl0023gw7g19lsc49e"},{"post_id":"clkxrz2td001qgw7g7t740vyj","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2tn0026gw7gvro7joij"},{"post_id":"clkxrz2sy0012gw7gy82n8fy0","category_id":"clkxrz2t5001dgw7gzw88jpk6","_id":"clkxrz2tp0029gw7gdc8mbpmo"},{"post_id":"clkxrz2tf001tgw7g9o7kityw","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2tr002cgw7gvz40j3ri"},{"post_id":"clkxrz2th001wgw7g7tkgvy32","category_id":"clkxrz2s60004gw7gb8jx17vf","_id":"clkxrz2tt002fgw7gp6fqhxdy"},{"post_id":"clkxrz2tj001zgw7gk7qtt9y5","category_id":"clkxrz2t5001dgw7gzw88jpk6","_id":"clkxrz2tu002igw7gz3lfstyr"},{"post_id":"clkxrz2tl0022gw7guk2z6zrk","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2tw002lgw7ge6imy50m"},{"post_id":"clkxrz2tm0025gw7g1tmvcv0d","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2ty002ogw7g7cwpagp4"},{"post_id":"clkxrz2to0028gw7gydhhlyyi","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2tz002rgw7gjsd52f2x"},{"post_id":"clkxrz2tq002bgw7gwgtscrc0","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2u1002ugw7gyc73ihn3"},{"post_id":"clkxrz2ts002egw7g96yb9fbh","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2u3002xgw7gmg7ztp2o"},{"post_id":"clkxrz2tu002hgw7g78cn6m8s","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2u50030gw7gveaetnea"},{"post_id":"clkxrz2tv002kgw7g540j82dk","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2u70033gw7ge6nnm87o"},{"post_id":"clkxrz2tx002ngw7gtri8l2a2","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2u80036gw7grlvg7kik"},{"post_id":"clkxrz2tz002qgw7g34hvxgzp","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2ua0039gw7g0fzh3s4r"},{"post_id":"clkxrz2u0002tgw7gzk4wvj5n","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2ub003bgw7gpgb03teo"},{"post_id":"clkxrz2u2002wgw7g4nuhhtbe","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2uc003dgw7ge7bc13oa"},{"post_id":"clkxrz2u4002zgw7gqxyr1uku","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2ud003fgw7gyfj4fwxd"},{"post_id":"clkxrz2u60032gw7gr8v4guc9","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2ud003hgw7g2uranb6f"},{"post_id":"clkxrz2u80035gw7g4tazitmx","category_id":"clkxrz2sg000bgw7gu0ufgf2s","_id":"clkxrz2ue003jgw7gy7o1crf3"},{"post_id":"clkxrz2u90038gw7glhoznob5","category_id":"clkxrz2sk000hgw7gz3gnpzoc","_id":"clkxrz2ue003kgw7grfkguq28"}],"PostTag":[{"post_id":"clkxrz2rx0000gw7g1pccefjc","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2sh000dgw7gqsmlimhb"},{"post_id":"clkxrz2sh000egw7gv1tsa7a3","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2sl000jgw7guxixi923"},{"post_id":"clkxrz2s30002gw7ga7dmvrue","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2sn000lgw7gkr5jzie3"},{"post_id":"clkxrz2sm000kgw7g48bf61k0","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2sq000qgw7g06xe28hh"},{"post_id":"clkxrz2s90006gw7gtaj7j5nm","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2st000tgw7gbbsrpzc4"},{"post_id":"clkxrz2sn000mgw7gayblbkyt","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2sw000ygw7gyk1yynqm"},{"post_id":"clkxrz2sb0008gw7gq91w77e4","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2sy0011gw7gk0iby0u1"},{"post_id":"clkxrz2st000ugw7gwixio91l","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2t10016gw7gt548uumv"},{"post_id":"clkxrz2sf000agw7gn0ymokir","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2t20019gw7gzmfjwsvo"},{"post_id":"clkxrz2t10017gw7gykp54wz5","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2t4001cgw7gjkja2qpy"},{"post_id":"clkxrz2sj000fgw7gldg12y7v","tag_id":"clkxrz2t00015gw7g7u6lidz6","_id":"clkxrz2t8001hgw7gpza1vmah"},{"post_id":"clkxrz2t3001agw7ggok5kvei","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2ta001kgw7gg6o8r3qk"},{"post_id":"clkxrz2t6001fgw7g85ymjf9h","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2td001pgw7gsuofyfdk"},{"post_id":"clkxrz2t8001igw7gk6v1pzcs","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2tf001sgw7g0rcuumrl"},{"post_id":"clkxrz2sw000zgw7g1d95vkp9","tag_id":"clkxrz2t5001egw7glu1rjwuz","_id":"clkxrz2th001vgw7gtri9jru2"},{"post_id":"clkxrz2tb001lgw7gacte2rs7","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2tj001ygw7gom6lja3y"},{"post_id":"clkxrz2td001qgw7g7t740vyj","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2tk0021gw7g5mql2784"},{"post_id":"clkxrz2sy0012gw7gy82n8fy0","tag_id":"clkxrz2t5001egw7glu1rjwuz","_id":"clkxrz2tm0024gw7g8k1hcv9l"},{"post_id":"clkxrz2tf001tgw7g9o7kityw","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2to0027gw7g3hp561vu"},{"post_id":"clkxrz2th001wgw7g7tkgvy32","tag_id":"clkxrz2s70005gw7gn77kg2os","_id":"clkxrz2tp002agw7gw1g9b0hr"},{"post_id":"clkxrz2tj001zgw7gk7qtt9y5","tag_id":"clkxrz2t5001egw7glu1rjwuz","_id":"clkxrz2tr002dgw7g7i0kde2x"},{"post_id":"clkxrz2tl0022gw7guk2z6zrk","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2tt002ggw7gddx01tkn"},{"post_id":"clkxrz2tm0025gw7g1tmvcv0d","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2tv002jgw7g2ip8o304"},{"post_id":"clkxrz2to0028gw7gydhhlyyi","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2tx002mgw7gk4cle4gw"},{"post_id":"clkxrz2tq002bgw7gwgtscrc0","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2ty002pgw7gkxyp8rka"},{"post_id":"clkxrz2ts002egw7g96yb9fbh","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2u0002sgw7g6dd2ly9y"},{"post_id":"clkxrz2tu002hgw7g78cn6m8s","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2u2002vgw7gphsohdbf"},{"post_id":"clkxrz2tv002kgw7g540j82dk","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2u4002ygw7gkwyg1p1i"},{"post_id":"clkxrz2tx002ngw7gtri8l2a2","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2u60031gw7gpdbfxvtj"},{"post_id":"clkxrz2tz002qgw7g34hvxgzp","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2u70034gw7g5ds94m3s"},{"post_id":"clkxrz2u0002tgw7gzk4wvj5n","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2u90037gw7gl69umk6d"},{"post_id":"clkxrz2u2002wgw7g4nuhhtbe","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2ub003agw7gwza28riw"},{"post_id":"clkxrz2u4002zgw7gqxyr1uku","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2uc003cgw7gzjr9pjfj"},{"post_id":"clkxrz2u60032gw7gr8v4guc9","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2uc003egw7g9t9k707e"},{"post_id":"clkxrz2u80035gw7g4tazitmx","tag_id":"clkxrz2sg000cgw7gl0abeans","_id":"clkxrz2ud003ggw7g42dbfop7"},{"post_id":"clkxrz2u90038gw7glhoznob5","tag_id":"clkxrz2sl000igw7g56eo84e0","_id":"clkxrz2ue003igw7gd9iofwuk"}],"Tag":[{"name":"node","_id":"clkxrz2s70005gw7gn77kg2os"},{"name":"Vue","_id":"clkxrz2sg000cgw7gl0abeans"},{"name":"JavaScript","_id":"clkxrz2sl000igw7g56eo84e0"},{"name":"ES6","_id":"clkxrz2t00015gw7g7u6lidz6"},{"name":"git","_id":"clkxrz2t5001egw7glu1rjwuz"}]}}